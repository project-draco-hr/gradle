{
  final File tmpDir=new File(project.getBuildDir(),"tmp/groovydoc");
  FileOperations fileOperations=(ProjectInternal)project;
  fileOperations.delete(tmpDir);
  fileOperations.copy(new Action<CopySpec>(){
    public void execute(    CopySpec copySpec){
      copySpec.from(source).into(tmpDir);
    }
  }
);
  List<File> combinedClasspath=ImmutableList.<File>builder().addAll(classpath).addAll(groovyClasspath).build();
  Version version=new Version(getGroovyVersion(combinedClasspath));
  final Map<String,Object> args=Maps.newLinkedHashMap();
  args.put("sourcepath",tmpDir.toString());
  args.put("destdir",destDir);
  args.put("use",use);
  if (version.compareTo(new Version("2.4.6")) >= 0) {
    args.put("noTimestamp",noTimestamp);
    args.put("noVersionStamp",noVersionStamp);
  }
  args.put("private",includePrivate);
  putIfNotNull(args,"windowtitle",windowTitle);
  putIfNotNull(args,"doctitle",docTitle);
  putIfNotNull(args,"header",header);
  putIfNotNull(args,"footer",footer);
  putIfNotNull(args,"overview",overview);
  invokeGroovydoc(links,combinedClasspath,args);
}
