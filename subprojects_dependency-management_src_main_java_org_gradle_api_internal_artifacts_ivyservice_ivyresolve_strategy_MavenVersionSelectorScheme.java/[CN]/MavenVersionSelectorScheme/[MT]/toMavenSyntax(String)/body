{
  if (version.equals(PLUS) || version.equals(LATEST_INTEGRATION)) {
    return LATEST;
  }
  if (version.equals(LATEST_RELEASE)) {
    return RELEASE;
  }
  Matcher plusNotationMatcher=plusNotationPattern.matcher(version);
  if (plusNotationMatcher.matches()) {
    String prefix=plusNotationMatcher.group(1);
    int dynVersionPart=Integer.parseInt(plusNotationMatcher.group(2));
    if (prefix != null) {
      return String.format("[%s%s,%s%s)",prefix,dynVersionPart,prefix,dynVersionPart + 1);
    }
 else {
      return String.format("[%s,%s)",dynVersionPart,dynVersionPart + 1);
    }
  }
  if (version.startsWith("]")) {
    version=version.replaceFirst("]","(");
  }
  if (version.endsWith("[")) {
    version=String.format("%s)",version.substring(0,version.length() - 1));
  }
  return version;
}
