{
  if (pluginRequest.getVersion() == null) {
    result.notFound(getDescription(),"plugin dependency must include a version number for this source");
  }
 else {
    if (pluginRequest.getVersion().endsWith("-SNAPSHOT")) {
      result.notFound(getDescription(),"snapshot plugin versions are not supported");
    }
 else     if (isDynamicVersion(pluginRequest.getVersion())) {
      result.notFound(getDescription(),"dynamic plugin versions are not supported");
    }
 else {
      HttpPluginResolutionServiceClient.Response<PluginUseMetaData> response=portalClient.queryPluginMetadata(getUrl(),startParameter.isRefreshDependencies(),pluginRequest);
      if (response.isError()) {
        ErrorResponse errorResponse=response.getErrorResponse();
        if (response.getStatusCode() == 404) {
          result.notFound(getDescription(),errorResponse.message);
        }
 else {
          throw new GradleException(String.format("Plugin resolution service returned HTTP %d with message '%s' (url: %s)",response.getStatusCode(),errorResponse.message,response.getUrl()));
        }
      }
 else {
        PluginUseMetaData metaData=response.getResponse();
        if (metaData.legacy) {
          handleLegacy(metaData,result);
        }
 else {
          ClassPath classPath=resolvePluginDependencies(metaData);
          PluginResolution resolution=new ClassPathPluginResolution(instantiator,pluginRequest.getId(),parentScope,Factories.constant(classPath));
          result.found(getDescription(),resolution);
        }
      }
    }
  }
}
