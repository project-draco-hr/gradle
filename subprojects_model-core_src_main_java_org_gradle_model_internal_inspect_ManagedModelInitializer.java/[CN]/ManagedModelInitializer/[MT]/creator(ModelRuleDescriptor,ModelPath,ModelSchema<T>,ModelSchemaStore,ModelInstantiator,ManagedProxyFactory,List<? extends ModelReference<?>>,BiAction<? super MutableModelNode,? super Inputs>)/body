{
  if (schema.getKind() == ModelSchema.Kind.COLLECTION) {
    ModelProjection projection=ManagedSetModelProjection.of(schema.getType().getTypeVariables().get(0));
    return ModelCreators.of(ModelReference.of(path,schema.getType()),new BiAction<MutableModelNode,Inputs>(){
      @Override public void execute(      MutableModelNode modelNode,      Inputs inputs){
        T instance=modelInstantiator.newInstance(schema);
        modelNode.setPrivateData(schema.getType(),instance);
        initializer.execute(modelNode,inputs);
      }
    }
).withProjection(projection).descriptor(descriptor).inputs(inputs).build();
  }
  return ModelCreators.of(ModelReference.of(path,schema.getType()),new ManagedModelInitializer<T>(descriptor,schema,modelInstantiator,schemaStore,proxyFactory,initializer)).descriptor(descriptor).withProjection(new ManagedModelProjection<T>(schema.getType(),schemaStore,proxyFactory)).inputs(inputs).build();
}
