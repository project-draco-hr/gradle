{
  EclipseModel eclipseModel=project.getPlugins().getPlugin(EclipsePlugin.class).getModel();
  EclipseClasspath classpath=eclipseModel.getClasspath();
  classpath.setProjectDependenciesOnly(projectDependenciesOnly);
  List<ClasspathEntry> entries=classpath.resolveDependencies();
  List<ExternalDependencyVersion1> dependencies=new ExternalDependenciesFactory().create(project,entries);
  List<EclipseProjectDependencyVersion2> projectDependencies=new EclipseProjectDependenciesFactory().create(projectMapping,entries);
  List<EclipseSourceDirectoryVersion1> sourceDirectories=new SourceDirectoriesFactory().create(project,entries);
  List<DefaultEclipseProject> children=buildChildren(project);
  org.gradle.plugins.ide.eclipse.model.EclipseProject internalProject=eclipseModel.getProject();
  String name=internalProject.getName();
  String description=GUtil.elvis(internalProject.getComment(),null);
  DefaultEclipseProject eclipseProject=new DefaultEclipseProject(name,project.getPath(),description,project.getProjectDir(),children,sourceDirectories,dependencies,projectDependencies);
  if (includeTasks) {
    eclipseProject.setTasks(new TasksFactory().create(project,eclipseProject));
  }
  for (  DefaultEclipseProject child : children) {
    child.setParent(eclipseProject);
  }
  addProject(project,eclipseProject);
  return eclipseProject;
}
