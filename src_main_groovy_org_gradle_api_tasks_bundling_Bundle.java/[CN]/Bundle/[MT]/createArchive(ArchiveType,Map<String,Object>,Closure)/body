{
  String taskBaseName=GUtil.elvis(args.get(BASENAME_KEY),getProject().getArchivesTaskBaseName()).toString() + (args.get(APPENDIX_KEY) != null ? "_" + args.get(APPENDIX_KEY) : "");
  String classifier=args.get(CLASSIFIER_KEY) != null ? "_" + args.get(CLASSIFIER_KEY) : "";
  String taskName=taskBaseName + classifier + "_"+ type.getDefaultExtension();
  AbstractArchiveTask archiveTask=(AbstractArchiveTask)getProject().createTask(WrapUtil.toMap("type",type.getTaskClass()),taskName);
  archiveTask.conventionMapping(type.getConventionMapping());
  if (args.get(BASENAME_KEY) != null) {
    archiveTask.setBaseName(args.get(BASENAME_KEY).toString());
  }
  if (args.get(APPENDIX_KEY) != null) {
    archiveTask.setAppendix(args.get(APPENDIX_KEY).toString());
  }
  archiveTask.setClassifier(GUtil.isTrue(classifier) ? classifier.substring(1) : "");
  archiveTask.setExtension(type.getDefaultExtension());
  archiveTask.setDestinationDir(defaultDestinationDir);
  setTaskDependsOn(archiveTask,getChildrenDependOn());
  archiveTask.configurations((String[])defaultConfigurations.toArray(new String[defaultConfigurations.size()]));
  this.dependsOn(taskName);
  archiveTasks.add(archiveTask);
  for (  ConfigureAction configureAction : configureActions) {
    configureAction.configure(archiveTask);
  }
  if (configureClosure != null) {
    archiveTask.configure(configureClosure);
  }
  return archiveTask;
}
