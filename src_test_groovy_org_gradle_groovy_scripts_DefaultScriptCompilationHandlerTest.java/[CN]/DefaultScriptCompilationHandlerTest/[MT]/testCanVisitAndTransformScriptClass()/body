{
  CompilationUnit.SourceUnitOperation visitor=new CompilationUnit.SourceUnitOperation(){
    @Override public void call(    SourceUnit source) throws CompilationFailedException {
      source.getAST().getStatementBlock().visit(new CodeVisitorSupport(){
        @Override public void visitMethodCallExpression(        MethodCallExpression call){
          call.setObjectExpression(new ClassExpression(ClassHelper.make(System.class)));
          call.setMethod(new ConstantExpression("setProperty"));
          ArgumentListExpression arguments=(ArgumentListExpression)call.getArguments();
          arguments.addExpression(new ConstantExpression(TEST_EXPECTED_SYSTEMPROP_KEY));
          arguments.addExpression(new ConstantExpression(TEST_EXPECTED_SYSTEMPROP_VALUE));
        }
      }
);
    }
  }
;
  DefaultScriptCompilationHandler handler=new DefaultScriptCompilationHandler(cachePropertiesHandlerMock,visitor);
  Script script=handler.createScriptOnTheFly(new StringScriptSource("source","transformMe()"),classLoader,expectedScriptClass);
  evaluateScript(script);
}
