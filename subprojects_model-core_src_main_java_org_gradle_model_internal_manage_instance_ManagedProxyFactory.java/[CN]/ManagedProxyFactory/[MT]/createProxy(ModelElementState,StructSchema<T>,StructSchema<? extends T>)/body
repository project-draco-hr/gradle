{
  try {
    Class<? extends T> generatedClass=getGeneratedImplementation(schema,delegateSchema);
    if (generatedClass == null) {
      throw new IllegalStateException("No managed implementation class available for: " + schema.getType());
    }
    if (delegateSchema == null) {
      return instantiator.newInstance(generatedClass,state);
    }
 else {
      ModelType<? extends T> delegateType=delegateSchema.getType();
      Object delegate=state.getBackingNode().getPrivateData(delegateType);
      return instantiator.newInstance(generatedClass,state,delegate);
    }
  }
 catch (  Exception e) {
    throw UncheckedException.throwAsUncheckedException(e);
  }
}
