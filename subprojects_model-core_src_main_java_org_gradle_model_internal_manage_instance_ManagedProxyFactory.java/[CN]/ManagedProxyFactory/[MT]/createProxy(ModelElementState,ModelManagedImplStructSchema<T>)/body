{
  try {
    Class<? extends T> generatedClass=schema.getManagedImpl();
    if (generatedClass == null) {
      throw new IllegalStateException("No managed implementation class available for: " + schema.getType());
    }
    Class<?> delegateType=schema.getDelegateType();
    if (delegateType == null) {
      Constructor<? extends T> constructor=generatedClass.getConstructor(ModelElementState.class);
      return constructor.newInstance(state);
    }
 else {
      Object delegate=state.getBackingNode().getPrivateData(delegateType);
      Constructor<? extends T> constructor=generatedClass.getConstructor(ModelElementState.class,delegateType);
      return constructor.newInstance(state,delegate);
    }
  }
 catch (  InvocationTargetException e) {
    throw UncheckedException.throwAsUncheckedException(e.getTargetException());
  }
catch (  Exception e) {
    throw UncheckedException.throwAsUncheckedException(e);
  }
}
