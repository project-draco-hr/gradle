{
  Collection<FileTreeElement> sortedFileTreeElement=sortForHashing(allFileTreeElements);
  final Hasher hasher=createHasher();
  StringHasher stringHasher=new StringHasher(hasher);
  for (  FileTreeElement fileTreeElement : sortedFileTreeElement) {
    for (    String pathPart : fileTreeElement.getRelativePath().getSegments()) {
      stringHasher.hashString(pathPart);
      hasher.putByte(HASH_PATH_SEPARATOR);
    }
    if (!fileTreeElement.isDirectory()) {
      hasher.putByte(HASH_FIELD_SEPARATOR);
      hasher.putLong(fileTreeElement.getSize());
      hasher.putByte(HASH_FIELD_SEPARATOR);
      hasher.putLong(fileTreeElement.getLastModified());
    }
    hasher.putByte(HASH_RECORD_SEPARATOR);
  }
  return hasher.hash().asInt();
}
