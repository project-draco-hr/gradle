{
  FileTreeElement[] sortedFileTreeElement=sortForHashing(allFileTreeElements);
  BufferedStreamingHasher hasher=new BufferedStreamingHasher();
  Encoder encoder=hasher.getEncoder();
  try {
    for (    FileTreeElement fileTreeElement : sortedFileTreeElement) {
      for (      String pathPart : fileTreeElement.getRelativePath().getSegments()) {
        encoder.writeString(pathPart);
        encoder.writeByte(HASH_PATH_SEPARATOR);
      }
      if (!fileTreeElement.isDirectory()) {
        encoder.writeByte(HASH_FIELD_SEPARATOR);
        encoder.writeLong(fileTreeElement.getSize());
        encoder.writeByte(HASH_FIELD_SEPARATOR);
        encoder.writeLong(fileTreeElement.getLastModified());
      }
      encoder.writeByte(HASH_RECORD_SEPARATOR);
    }
    return hasher.checksum();
  }
 catch (  IOException e) {
    throw UncheckedException.throwAsUncheckedException(e);
  }
}
