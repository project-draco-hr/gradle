{
  if (!compileOptions.isIncremental()) {
    compile();
    return;
  }
  SingleMessageLogger.incubatingFeatureUsed("Incremental java compilation");
  DefaultJavaCompileSpec spec=createSpec();
  final CacheRepository cacheRepository=getCacheRepository();
  final GeneralCompileCaches generalCompileCaches=getGeneralCompileCaches();
  CompileCaches compileCaches=new CompileCaches(){
    private final CacheRepository repository=cacheRepository;
    private final JavaCompile javaCompile=JavaCompile.this;
    private final GeneralCompileCaches generalCaches=generalCompileCaches;
    public ClassAnalysisCache getClassAnalysisCache(){
      return generalCaches.getClassAnalysisCache();
    }
    public JarSnapshotCache getJarSnapshotCache(){
      return generalCaches.getJarSnapshotCache();
    }
    public LocalJarClasspathSnapshotStore getLocalJarClasspathSnapshotStore(){
      return new LocalJarClasspathSnapshotStore(repository,javaCompile);
    }
    public LocalClassSetAnalysisStore getLocalClassSetAnalysisStore(){
      return new LocalClassSetAnalysisStore(repository,javaCompile);
    }
  }
;
  IncrementalCompilerFactory factory=new IncrementalCompilerFactory(getFileOperations(),getCachingFileSnapshotter(),getPath(),createCompiler(spec),source,compileCaches,(IncrementalTaskInputsInternal)inputs);
  Compiler<JavaCompileSpec> compiler=factory.createCompiler();
  performCompilation(spec,compiler);
}
