{
  try {
    final String testFrameworkDefault=(String)getProject().property(TEST_FRAMEWORK_DEFAULT_PROPERTY);
    if (testFrameworkDefault == null || "".equals(testFrameworkDefault) || "junit".equalsIgnoreCase(testFrameworkDefault)) {
      return useJUnit();
    }
 else     if ("testng".equalsIgnoreCase(testFrameworkDefault)) {
      return useTestNG();
    }
 else {
      try {
        final Class testFrameworkClass=Class.forName(testFrameworkDefault);
        return useTestFramework((TestFramework)testFrameworkClass.newInstance(),testFrameworkConfigure);
      }
 catch (      ClassNotFoundException e) {
        throw new GradleException(testFrameworkDefault + " could not be found on the classpath",e);
      }
catch (      Exception e) {
        throw new GradleException("Could not create an instance of the test framework class " + testFrameworkDefault + ". Make sure that it has a public noargs constructor.",e);
      }
    }
  }
 catch (  MissingPropertyException e) {
    return useJUnit();
  }
}
