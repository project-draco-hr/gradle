{
  context.checking(new Expectations(){
{
      Sequence sequence=context.sequence("seq");
      one(repository).getStateFor(task);
      will(returnValue(taskArtifactState));
      inSequence(sequence);
      one(taskArtifactState).isUpToDate();
      will(returnValue(false));
      inSequence(sequence);
      one(taskArtifactState).beforeTask();
      inSequence(sequence);
      one(taskArtifactState).getExecutionHistory();
      will(returnValue(executionHistory));
      one(outputs).setHistory(executionHistory);
      inSequence(sequence);
      one(delegate).execute(task,taskState);
      inSequence(sequence);
      allowing(taskState).getFailure();
      will(returnValue(null));
      one(taskArtifactState).afterTask();
      inSequence(sequence);
      one(outputs).setHistory(null);
      inSequence(sequence);
      one(taskArtifactState).finished();
      inSequence(sequence);
    }
  }
);
  executer.execute(task,taskState);
}
