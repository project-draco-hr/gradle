{
  if (jarChangeDetails.isAdded()) {
    if (jarClasspathSnapshot.isAnyClassDuplicated(jarArchive)) {
      return new DependencyToAll("at least one of the classes of '" + jarArchive.file.getName() + "' is already present in classpath");
    }
 else {
      return new DefaultDependentsSet();
    }
  }
  JarSnapshot previous=previousCompilation.getJarSnapshot(jarChangeDetails.getFile());
  if (previous == null) {
    return new DependencyToAll("missing jar snapshot of '" + jarArchive.file.getName() + "' from previous build");
  }
  if (jarChangeDetails.isRemoved()) {
    DependentsSet allClasses=previous.getAllClasses();
    if (allClasses.isDependencyToAll()) {
      return new DependencyToAll("at least one of the classes of removed jar '" + jarArchive.file.getName() + "' requires it");
    }
    return previousCompilation.getDependents(allClasses.getDependentClasses());
  }
  if (jarChangeDetails.isModified()) {
    JarSnapshot currentSnapshot=jarClasspathSnapshot.getSnapshot(jarArchive);
    AffectedClasses affected=currentSnapshot.getAffectedClassesSince(previous);
    if (affected.getAltered().isDependencyToAll()) {
      return affected.getAltered();
    }
    if (jarClasspathSnapshot.isAnyClassDuplicated(affected.getAdded())) {
      return new DependencyToAll("at least one of the classes of modified jar '" + jarArchive.file.getName() + "' is already present in the classpath");
    }
    return previousCompilation.getDependents(affected.getAltered().getDependentClasses());
  }
  throw new IllegalArgumentException("Unknown input file details provided: " + jarChangeDetails);
}
