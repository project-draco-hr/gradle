{
  DefaultProjectDependencyFactory factory=new DefaultProjectDependencyFactory(projectAccessListener,instantiator,startParameter.isBuildProjectDependencies());
  ProjectDependencyFactory projectDependencyFactory=new ProjectDependencyFactory(factory);
  DependencyProjectNotationParser projParser=new DependencyProjectNotationParser(factory);
  NotationParser<? extends Dependency> moduleMapParser=new DependencyMapNotationParser<DefaultExternalModuleDependency>(instantiator,DefaultExternalModuleDependency.class);
  NotationParser<? extends Dependency> moduleStringParser=new DependencyStringNotationParser<DefaultExternalModuleDependency>(instantiator,DefaultExternalModuleDependency.class);
  NotationParser<? extends Dependency> selfResolvingDependencyFactory=new DependencyFilesNotationParser(instantiator);
  List<NotationParser<? extends Dependency>> notationParsers=Arrays.asList(moduleStringParser,moduleMapParser,selfResolvingDependencyFactory,projParser,new DependencyClassPathNotationParser(instantiator,classPathRegistry,fileResolver.withNoBaseDir()));
  return new DefaultDependencyFactory(new DependencyNotationParser(notationParsers),new ClientModuleNotationParserFactory(instantiator).create(),projectDependencyFactory);
}
