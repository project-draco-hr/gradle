{
  ContainerConfiguration containerConfiguration=new DefaultContainerConfiguration().setClassWorld(new ClassWorld("plexus.core",ClassWorld.class.getClassLoader())).setName("mavenCore");
  DefaultPlexusContainer container=new DefaultPlexusContainer(containerConfiguration);
  ProjectBuilder builder=container.lookup(ProjectBuilder.class);
  MavenExecutionRequest executionRequest=new DefaultMavenExecutionRequest();
  MavenExecutionRequestPopulator populator=container.lookup(MavenExecutionRequestPopulator.class);
  populator.populateFromSettings(executionRequest,settings);
  populator.populateDefaults(executionRequest);
  ProjectBuildingRequest buildingRequest=executionRequest.getProjectBuildingRequest();
  buildingRequest.setValidationLevel(ModelBuildingRequest.VALIDATION_LEVEL_MINIMAL);
  MavenProject mavenProject=builder.build(pomFile,buildingRequest).getProject();
  Iterable<MavenProject> reactorProjects=transform(builder.build(ImmutableList.of(pomFile),true,buildingRequest),new Function<ProjectBuildingResult,MavenProject>(){
    public MavenProject apply(    ProjectBuildingResult from){
      return from.getProject();
    }
  }
);
  MavenExecutionResult result=new DefaultMavenExecutionResult();
  result.setProject(mavenProject);
  RepositorySystemSession repoSession=new DefaultRepositorySystemSession();
  MavenSession session=new MavenSession(container,repoSession,executionRequest,result);
  session.setCurrentProject(mavenProject);
  return mavenProject;
}
