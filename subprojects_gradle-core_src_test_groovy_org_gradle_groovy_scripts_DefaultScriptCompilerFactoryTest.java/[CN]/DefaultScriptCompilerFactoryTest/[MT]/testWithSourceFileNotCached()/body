{
  context.checking(new Expectations(){
{
      one(cacheRepositoryMock).getGlobalCache("scripts/class-name",expectedCacheProperties);
      will(returnValue(cacheMock));
      allowing(cacheMock).isValid();
      will(returnValue(false));
      one(scriptCompilationHandlerMock).compileScriptToDir(source,testClassLoader,expectedScriptCacheDir,null,expectedScriptBaseClass);
      one(cacheMock).markValid();
      one(scriptCompilationHandlerMock).loadScriptFromDir(source,testClassLoader,expectedScriptCacheDir,expectedScriptBaseClass);
      will(returnValue(expectedScript));
      one(expectedScript).setScriptSource(source);
      one(scriptRunnerFactoryMock).create(expectedScript);
      will(returnValue(expectedScriptRunner));
    }
  }
);
  assertSame(expectedScriptRunner,scriptProcessor.createCompiler(source).compile(expectedScriptBaseClass));
}
