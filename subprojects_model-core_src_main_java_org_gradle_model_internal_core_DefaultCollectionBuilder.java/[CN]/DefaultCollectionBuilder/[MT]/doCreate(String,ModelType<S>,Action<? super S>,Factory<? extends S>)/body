{
  ModelRuleDescriptor descriptor=new NestedModelRuleDescriptor(sourceDescriptor,ActionModelRuleDescriptor.from(new ErroringAction<Appendable>(){
    @Override protected void doExecute(    Appendable thing) throws Exception {
      thing.append("create(").append(name).append(")");
    }
  }
));
  Set<ModelProjection> projections=Collections.<ModelProjection>singleton(new UnmanagedModelProjection<S>(type,true,true));
  ModelPromise promise=new ProjectionBackedModelPromise(projections);
  ModelAdapter adapter=new ProjectionBackedModelAdapter(projections);
  ModelNode childNode=modelNode.addLink(name,descriptor,promise,adapter);
  S s=factory.create();
  configAction.execute(s);
  childNode.setPrivateData(type,s);
}
