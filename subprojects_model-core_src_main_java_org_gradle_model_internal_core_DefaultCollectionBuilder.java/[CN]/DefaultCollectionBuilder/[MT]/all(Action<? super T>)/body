{
  final ModelRuleDescriptor descriptor=new NestedModelRuleDescriptor(sourceDescriptor,ActionModelRuleDescriptor.from(new ErroringAction<Appendable>(){
    @Override protected void doExecute(    Appendable thing) throws Exception {
      thing.append("all()");
    }
  }
));
  final ModelReference<T> subject=ModelReference.of(elementType);
  modelNode.mutateAllLinks(new ModelMutator<T>(){
    @Override public ModelReference<T> getSubject(){
      return subject;
    }
    @Override public void mutate(    MutableModelNode modelNode,    T object,    Inputs inputs){
      configAction.execute(object);
    }
    @Override public List<ModelReference<?>> getInputs(){
      return Collections.emptyList();
    }
    @Override public ModelRuleDescriptor getDescriptor(){
      return descriptor;
    }
  }
);
}
