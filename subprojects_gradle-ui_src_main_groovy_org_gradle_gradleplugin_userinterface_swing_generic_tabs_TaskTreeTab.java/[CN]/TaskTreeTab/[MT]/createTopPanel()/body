{
  JPanel panel=new JPanel();
  panel.setLayout(new BoxLayout(panel,BoxLayout.X_AXIS));
  refreshButton=Utility.createButton(getClass(),"refresh.png","Refreshes the task tree",new AbstractAction("Refresh"){
    public void actionPerformed(    ActionEvent e){
      refresh();
    }
  }
);
  executeButton=Utility.createButton(getClass(),"execute.png","Execute the selected tasks",new AbstractAction("Execute"){
    public void actionPerformed(    ActionEvent e){
      executeSelectedTasks();
    }
  }
);
  toggleFilterButton=new JToggleButton(new AbstractAction("Filter"){
    public void actionPerformed(    ActionEvent e){
      populate();
    }
  }
);
  Utility.setupButton(toggleFilterButton,getClass(),"filter.png","Toggles the view to show either everything or only the filtered items");
  toggleFilterButton.setSelected(true);
  editFilterButton=Utility.createButton(getClass(),"edit-filter.png","Edits the filter to control what is visible",new AbstractAction("Edit Filter..."){
    public void actionPerformed(    ActionEvent e){
      configureFilter();
    }
  }
);
  showDescriptionCheckBox=new JCheckBox("Show Description",true);
  showDescriptionCheckBox.addActionListener(new ActionListener(){
    public void actionPerformed(    ActionEvent e){
      resetShowDescription();
    }
  }
);
  showDescriptionCheckBox.setSelected(settingsNode.getValueOfChildAsBoolean(SHOW_DESCRIPTION,showDescriptionCheckBox.isSelected()));
  panel.add(refreshButton);
  panel.add(Box.createHorizontalStrut(10));
  panel.add(executeButton);
  panel.add(Box.createHorizontalStrut(10));
  panel.add(toggleFilterButton);
  panel.add(Box.createHorizontalStrut(10));
  panel.add(showDescriptionCheckBox);
  panel.add(Box.createHorizontalGlue());
  panel.add(editFilterButton);
  panel.setBorder(BorderFactory.createEmptyBorder(5,5,5,5));
  return panel;
}
