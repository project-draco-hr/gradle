{
  final ScriptSource expectedScriptSource=new ImportsScriptSource(scriptSource,importsReader,rootDir);
  context.checking(new Expectations(){
{
      one(scriptProcessorFactory).createProcessor(with(reflectionEquals(expectedScriptSource)));
      will(returnValue(processor));
      one(classLoaderProvider).getClassLoader();
      will(returnValue(classLoader));
      one(processor).setClassloader(classLoader);
      one(processor).setTransformer(with(notNullValue(BuildScriptClasspathScriptTransformer.class)));
      one(processor).compile(ProjectScript.class);
      will(returnValue(classpathScriptRunner));
      one(classpathScriptRunner).setDelegate(project);
      one(classpathScriptRunner).run();
      one(classLoaderProvider).updateClassPath();
      one(processor).setTransformer(with(notNullValue(BuildScriptTransformer.class)));
      one(processor).compile(ProjectScript.class);
      will(returnValue(buildScriptRunner));
      one(buildScriptRunner).setDelegate(project);
      one(buildScriptRunner).getScript();
      will(returnValue(buildScript));
      one(project).setScript(buildScript);
      one(buildScriptRunner).run();
    }
  }
);
  evaluator.evaluate(project);
}
