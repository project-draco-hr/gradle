{
  if (method.getAnnotation(TaskAction.class) == null) {
    return;
  }
  if (Modifier.isStatic(method.getModifiers())) {
    throw new GradleException(String.format("Cannot use @TaskAction annotation on static method %s.%s().",method.getDeclaringClass().getSimpleName(),method.getName()));
  }
  final Class<?>[] parameterTypes=method.getParameterTypes();
  if (parameterTypes.length == 1) {
    if (!parameterTypes[0].equals(TaskExecutionContext.class)) {
      throw new GradleException(String.format("Cannot use @TaskAction annotation on method %s.%s() because %s is not a valid parameter to an action method.",method.getDeclaringClass().getSimpleName(),method.getName(),parameterTypes[0]));
    }
  }
 else   if (parameterTypes.length > 1) {
    throw new GradleException(String.format("Cannot use @TaskAction annotation on method %s.%s() as this method takes multiple parameters.",method.getDeclaringClass().getSimpleName(),method.getName()));
  }
  if (methods.contains(method.getName())) {
    return;
  }
  methods.add(method.getName());
  if (parameterTypes.length == 1) {
    actions.add(new IncrementalTaskAction(method));
  }
 else {
    actions.add(new StandardTaskAction(method));
  }
}
