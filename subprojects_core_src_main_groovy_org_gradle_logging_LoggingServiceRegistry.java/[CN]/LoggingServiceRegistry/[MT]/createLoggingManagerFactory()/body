{
  OutputEventRenderer renderer=get(OutputEventRenderer.class);
switch (type) {
case CommandLine:
case Child:
    LoggingSystem stdout=new DefaultStdOutLoggingSystem(getStdoutListener(),get(TimeProvider.class));
  LoggingSystem stderr=new DefaultStdErrLoggingSystem(new TextStreamOutputEventListener(get(OutputEventListener.class)),get(TimeProvider.class));
return new DefaultLoggingManagerFactory(new DefaultLoggingConfigurer(renderer,new LogbackLoggingConfigurer(renderer),new JavaUtilLoggingConfigurer()),renderer,stdout,stderr);
case Embedded:
return new DefaultLoggingManagerFactory(new DefaultLoggingConfigurer(renderer,new LogbackLoggingConfigurer(renderer)),renderer,new NoOpLoggingSystem(),new NoOpLoggingSystem());
case Nested:
return new DefaultLoggingManagerFactory(renderer,renderer,new NoOpLoggingSystem(),new NoOpLoggingSystem());
default :
throw new IllegalStateException();
}
}
