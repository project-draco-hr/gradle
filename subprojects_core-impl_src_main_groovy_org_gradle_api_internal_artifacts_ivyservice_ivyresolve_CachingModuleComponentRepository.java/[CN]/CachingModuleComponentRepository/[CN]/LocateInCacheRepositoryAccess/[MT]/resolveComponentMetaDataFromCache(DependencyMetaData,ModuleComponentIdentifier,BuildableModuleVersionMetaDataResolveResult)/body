{
  ModuleMetaDataCache.CachedMetaData cachedMetaData=moduleMetaDataCache.getCachedModuleDescriptor(delegate,moduleComponentIdentifier);
  if (cachedMetaData == null) {
    return;
  }
  if (cachedMetaData.isMissing()) {
    if (cachePolicy.mustRefreshMissingModule(moduleComponentIdentifier,cachedMetaData.getAgeMillis())) {
      LOGGER.debug("Cached meta-data for missing module is expired: will perform fresh resolve of '{}' in '{}'",moduleComponentIdentifier,delegate.getName());
      return;
    }
    LOGGER.debug("Detected non-existence of module '{}' in resolver cache '{}'",moduleComponentIdentifier,delegate.getName());
    if (cachedMetaData.getAgeMillis() == 0) {
      result.missing();
    }
 else {
      result.probablyMissing();
    }
    return;
  }
  MutableModuleVersionMetaData metaData=cachedMetaData.getMetaData();
  metadataProcessor.processMetadata(metaData);
  if (dependency.isChanging() || metaData.isChanging()) {
    if (cachePolicy.mustRefreshChangingModule(moduleComponentIdentifier,cachedMetaData.getModuleVersion(),cachedMetaData.getAgeMillis())) {
      LOGGER.debug("Cached meta-data for changing module is expired: will perform fresh resolve of '{}' in '{}'",moduleComponentIdentifier,delegate.getName());
      return;
    }
    LOGGER.debug("Found cached version of changing module '{}' in '{}'",moduleComponentIdentifier,delegate.getName());
  }
 else {
    if (cachePolicy.mustRefreshModule(moduleComponentIdentifier,cachedMetaData.getModuleVersion(),cachedMetaData.getAgeMillis())) {
      LOGGER.debug("Cached meta-data for module must be refreshed: will perform fresh resolve of '{}' in '{}'",moduleComponentIdentifier,delegate.getName());
      return;
    }
  }
  LOGGER.debug("Using cached module metadata for module '{}' in '{}'",moduleComponentIdentifier,delegate.getName());
  result.resolved(metaData,new CachingModuleSource(cachedMetaData.getDescriptorHash(),metaData.isChanging(),cachedMetaData.getModuleSource()));
}
