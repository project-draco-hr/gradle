{
  final CachingModuleSource cachedModuleSource=(CachingModuleSource)component.getSource();
  delegate.getLocalAccess().resolveModuleArtifacts(component.withSource(cachedModuleSource.getDelegate()),context,result);
  if (result.hasResult()) {
    return;
  }
  ModuleArtifactsCache.CachedArtifacts cachedModuleArtifacts=moduleArtifactsCache.getCachedArtifacts(delegate,component.getId(),context.getId());
  BigInteger moduleDescriptorHash=cachedModuleSource.getDescriptorHash();
  if (cachedModuleArtifacts != null) {
    if (!cachePolicy.mustRefreshModuleArtifacts(component.getId(),null,cachedModuleArtifacts.getAgeMillis(),cachedModuleSource.isChangingModule(),moduleDescriptorHash.equals(cachedModuleArtifacts.getDescriptorHash()))) {
      Set<ModuleVersionArtifactMetaData> artifactMetaDataSet=CollectionUtils.collect(cachedModuleArtifacts.getArtifacts(),new ArtifactIdToMetaData());
      result.resolved(artifactMetaDataSet);
      return;
    }
    LOGGER.debug("Artifact listing has expired: will perform fresh resolve of '{}' for '{}' in '{}'",context.getDescription(),component.getId(),delegate.getName());
  }
}
