{
  Map<String,Object> libraryAttributes=Maps.newHashMapWithExpectedSize(2);
  libraryAttributes.put("name",name);
  if (type != null) {
    libraryAttributes.put("type",type);
  }
  Node libraryNode=parentNode.appendNode("library",libraryAttributes);
  Node classesNode=libraryNode.appendNode("CLASSES");
  for (  File file : classes) {
    Map<String,Object> attributes=Maps.newHashMapWithExpectedSize(1);
    attributes.put("url",pathFactory.path(file).getUrl());
    classesNode.appendNode("root",attributes);
  }
  Node javadocNode=libraryNode.appendNode("JAVADOC");
  for (  File file : javadoc) {
    Map<String,Object> attributes=Maps.newHashMapWithExpectedSize(1);
    attributes.put("url",pathFactory.path(file).getUrl());
    javadocNode.appendNode("root",attributes);
  }
  Node sourcesNode=libraryNode.appendNode("SOURCES");
  for (  File file : sources) {
    Map<String,Object> attributes=Maps.newHashMapWithExpectedSize(1);
    attributes.put("url",pathFactory.path(file).getUrl());
    sourcesNode.appendNode("root",attributes);
  }
  if (compilerClasspath.size() > 0) {
    Node properties=libraryNode.appendNode("properties");
    Node compilerClasspathNode=properties.appendNode("compiler-classpath");
    for (    File file : compilerClasspath) {
      Map<String,Object> attributes=Maps.newHashMapWithExpectedSize(1);
      attributes.put("url",pathFactory.path(file,true).getUrl());
      compilerClasspathNode.appendNode("root",attributes);
    }
  }
}
