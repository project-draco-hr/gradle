{
  List<ModelReference<?>> references=ruleDefinition.getReferences();
  Class<?> dependencyClass=null;
  for (  ModelReference<?> reference : references) {
    if (expectedDependencyClass.isAssignableFrom(reference.getType().getConcreteClass())) {
      if (dependencyClass != null) {
        throw new InvalidComponentModelException(String.format("%s method must have one parameter extending %s. Found multiple parameter extending %s.",annotationType.getSimpleName(),expectedDependencyClass.getSimpleName(),expectedDependencyClass.getSimpleName()));
      }
      dependencyClass=reference.getType().getConcreteClass();
    }
  }
  return dependencyClass;
}
