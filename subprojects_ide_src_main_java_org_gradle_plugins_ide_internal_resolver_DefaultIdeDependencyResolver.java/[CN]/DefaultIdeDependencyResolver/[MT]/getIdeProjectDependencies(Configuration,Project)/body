{
  ResolutionResult result=getIncomingResolutionResult(configuration);
  final Set<ResolvedComponentResult> projectComponents=CollectionUtils.filter(result.getAllComponents(),new Spec<ResolvedComponentResult>(){
    @Override public boolean isSatisfiedBy(    ResolvedComponentResult element){
      return element.getId() instanceof ProjectComponentIdentifier;
    }
  }
);
  List<IdeProjectDependency> ideProjectDependencies=new ArrayList<IdeProjectDependency>();
  for (  ResolvedComponentResult projectComponent : projectComponents) {
    Project resolvedProject=project.project(((ProjectComponentIdentifier)projectComponent.getId()).getProjectPath());
    if (!resolvedProject.equals(project)) {
      ideProjectDependencies.add(new IdeProjectDependency(configuration,resolvedProject));
    }
  }
  return ideProjectDependencies;
}
