{
  ResolutionResult result=getIncomingResolutionResult(configuration);
  final Set<ResolvedComponentResult> projectComponents=CollectionUtils.filter(result.getAllComponents(),new Spec<ResolvedComponentResult>(){
    @Override public boolean isSatisfiedBy(    ResolvedComponentResult element){
      return element.getId() instanceof ProjectComponentIdentifier;
    }
  }
);
  List<IdeProjectDependency> ideProjectDependencies=new ArrayList<IdeProjectDependency>();
  for (  ResolvedComponentResult projectComponent : projectComponents) {
    ProjectComponentIdentifier projectId=(ProjectComponentIdentifier)projectComponent.getId();
    String resolvedProjectPath=projectId.getProjectPath();
    if (project.getPath().equals(resolvedProjectPath)) {
      continue;
    }
    Project resolvedProject=project.findProject(resolvedProjectPath);
    if (resolvedProject == null) {
      ideProjectDependencies.add(new IdeProjectDependency(projectId));
    }
 else {
      ideProjectDependencies.add(new IdeProjectDependency(projectId,resolvedProject));
    }
  }
  return ideProjectDependencies;
}
