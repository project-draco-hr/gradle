{
  Multimap<ResolvedComponentResult,ResolvedComponentResult> parents=LinkedHashMultimap.create();
  findAllResolvedDependencyResultsAndTheirDependenciesAndRecordTheirParents(parents,root);
  Set<ResolvedComponentResult> matches=new LinkedHashSet<ResolvedComponentResult>();
  for (  ResolvedComponentResult component : parents.keySet()) {
    if (component.getId() instanceof ProjectComponentIdentifier) {
      boolean hasNoParentOtherThanRoot=true;
      for (      ResolvedComponentResult parent : parents.get(component)) {
        if (!parent.getId().equals(root.getId()) && parent.getId() instanceof ProjectComponentIdentifier) {
          hasNoParentOtherThanRoot=false;
          break;
        }
      }
      if (hasNoParentOtherThanRoot) {
        matches.add(component);
      }
    }
  }
  return matches;
}
