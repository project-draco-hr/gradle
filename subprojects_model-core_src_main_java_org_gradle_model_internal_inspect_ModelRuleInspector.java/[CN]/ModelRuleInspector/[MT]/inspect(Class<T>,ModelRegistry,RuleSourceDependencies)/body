{
  validate(source);
  final Method[] methods=source.getDeclaredMethods();
  Arrays.sort(methods,new Comparator<Method>(){
    public int compare(    Method o1,    Method o2){
      return o1.toString().compareTo(o2.toString());
    }
  }
);
  for (  Method method : methods) {
    validate(method);
    MethodRuleDefinition ruleDefinition=new DefaultMethodRuleDefinition(method);
    MethodRuleDefinitionHandler handler=getMethodHandler(ruleDefinition);
    try {
      if (handler != null) {
        handler.register(ruleDefinition,modelRegistry,dependencies);
      }
    }
 catch (    InvalidModelRuleDeclarationException e) {
      throw e;
    }
catch (    Exception e) {
      throw invalid("model rule method",ruleDefinition.getDescriptor(),e);
    }
  }
}
