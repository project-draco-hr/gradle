{
  validate(source);
  Method[] methods=source.getDeclaredMethods();
  for (  Method method : methods) {
    Model modelAnnotation=method.getAnnotation(Model.class);
    if (modelAnnotation != null) {
      if (method.getParameterTypes().length > 0) {
        throw new IllegalArgumentException("@Model rules cannot take arguments");
      }
      String modelName=determineModelName(modelAnnotation,method);
      if (method.getTypeParameters().length > 0) {
        invalid("model creation rule",method,"cannot have type variables (i.e. cannot be a generic method)");
      }
      TypeToken<?> returnType=TypeToken.of(method.getGenericReturnType());
      doRegisterCreation(source,method,returnType,modelName,modelRegistry);
    }
  }
}
