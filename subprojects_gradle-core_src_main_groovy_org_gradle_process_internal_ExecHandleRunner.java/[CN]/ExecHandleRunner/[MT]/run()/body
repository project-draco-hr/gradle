{
  ProcessBuilder processBuilder=processBuilderFactory.createProcessBuilder(execHandle);
  try {
    Process process=processBuilder.start();
    lock.lock();
    try {
      this.process=process;
    }
  finally {
      lock.unlock();
    }
    ExecOutputHandleRunner standardOutputRunner=new ExecOutputHandleRunner("read process standard output",process.getInputStream(),execHandle.getStandardOutput());
    ExecOutputHandleRunner errorOutputRunner=new ExecOutputHandleRunner("read process error output",process.getErrorStream(),execHandle.getErrorOutput());
    ExecOutputHandleRunner standardInputRunner=new ExecOutputHandleRunner("write process standard input",execHandle.getStandardInput(),process.getOutputStream());
    threadPool.execute(standardInputRunner);
    threadPool.execute(standardOutputRunner);
    threadPool.execute(errorOutputRunner);
    execHandle.started();
    int exitCode=process.waitFor();
    if (aborted) {
      execHandle.aborted();
    }
 else {
      execHandle.finished(exitCode);
    }
  }
 catch (  Throwable t) {
    execHandle.failed(t);
  }
}
