{
  GroovySourceAST parentNode=getParentNode();
  boolean isField=parentNode != null && parentNode.getType() == OBJBLOCK;
  if (!isField) {
    return;
  }
  int modifiers=extractModifiers(t);
  boolean isProp=groovy && !Modifier.isStatic(modifiers) && !Modifier.isPublic(modifiers)&& !Modifier.isProtected(modifiers)&& !Modifier.isPrivate(modifiers);
  if (!isProp) {
    return;
  }
  ASTIterator children=new ASTIterator(t);
  children.skip(MODIFIERS);
  String propertyName=extractIdent(t);
  TypeMetaData propertyType=extractTypeName(children.current);
  ClassMetaData currentClass=getCurrentClass();
  currentClass.addReadableProperty(propertyName,propertyType,getJavaDocCommentsBeforeNode(t));
  currentClass.addMethod(String.format("get%s",StringUtils.capitalize(propertyName)),propertyType,"");
  if (!Modifier.isFinal(modifiers)) {
    currentClass.addWriteableProperty(propertyName,propertyType,getJavaDocCommentsBeforeNode(t));
    MethodMetaData setterMethod=currentClass.addMethod(String.format("set%s",StringUtils.capitalize(propertyName)),TypeMetaData.VOID,"");
    setterMethod.addParameter(propertyName,propertyType);
  }
}
