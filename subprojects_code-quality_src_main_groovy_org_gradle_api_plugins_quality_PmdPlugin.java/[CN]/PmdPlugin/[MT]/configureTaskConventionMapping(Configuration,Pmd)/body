{
  ConventionMapping taskMapping=task.getConventionMapping();
  taskMapping.map("pmdClasspath",Callables.returning(configuration));
  taskMapping.map("ruleSets",new Callable<List<String>>(){
    @Override public List<String> call(){
      return extension.getRuleSets();
    }
  }
);
  taskMapping.map("ruleSetConfig",new Callable<TextResource>(){
    @Override public TextResource call(){
      return extension.getRuleSetConfig();
    }
  }
);
  taskMapping.map("ruleSetFiles",new Callable<FileCollection>(){
    @Override public FileCollection call(){
      return extension.getRuleSetFiles();
    }
  }
);
  taskMapping.map("ignoreFailures",new Callable<Boolean>(){
    @Override public Boolean call(){
      return extension.isIgnoreFailures();
    }
  }
);
  taskMapping.map("rulePriority",new Callable<Integer>(){
    @Override public Integer call(){
      return extension.getRulePriority();
    }
  }
);
  taskMapping.map("consoleOutput",new Callable<Boolean>(){
    @Override public Boolean call(){
      return extension.isConsoleOutput();
    }
  }
);
  taskMapping.map("targetJdk",new Callable<TargetJdk>(){
    @Override public TargetJdk call(){
      return extension.getTargetJdk();
    }
  }
);
}
