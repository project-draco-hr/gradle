{
  Document document=parent.getOwnerDocument();
  Element thead=document.createElement("thead");
  parent.appendChild(thead);
  Element tr=document.createElement("tr");
  thead.appendChild(tr);
  Element td=document.createElement("td");
  tr.appendChild(td);
  td.appendChild(document.createTextNode("Method"));
  td=document.createElement("td");
  tr.appendChild(td);
  td.appendChild(document.createTextNode("Description"));
  for (  MethodDoc methodDoc : methods) {
    tr=document.createElement("tr");
    parent.appendChild(tr);
    td=document.createElement("td");
    tr.appendChild(td);
    Element literal=document.createElement("literal");
    td.appendChild(literal);
    Element link=document.createElement("link");
    literal.appendChild(link);
    link.setAttribute("linkend",methodDoc.getId());
    link.appendChild(document.createTextNode(methodDoc.getName()));
    StringBuilder signature=new StringBuilder();
    signature.append("(");
    for (int i=0; i < methodDoc.getMetaData().getParameters().size(); i++) {
      if (i > 0) {
        signature.append(", ");
      }
      signature.append(methodDoc.getMetaData().getParameters().get(i).getName());
    }
    signature.append(")");
    literal.appendChild(document.createTextNode(signature.toString()));
    td=document.createElement("td");
    tr.appendChild(td);
    if (methodDoc.isDeprecated()) {
      Element caution=document.createElement("caution");
      td.appendChild(caution);
      caution.appendChild(document.createTextNode("Deprecated"));
    }
    if (methodDoc.isExperimental()) {
      Element caution=document.createElement("caution");
      td.appendChild(caution);
      caution.appendChild(document.createTextNode("Experimental"));
    }
    td.appendChild(document.importNode(methodDoc.getDescription(),true));
  }
}
