{
  MutableModelNode grandparentNode=modelNode.getParent().getParent();
  if (grandparentNode != null) {
    if (grandparentNode.canBeViewedAs(ModelType.of(BinarySpecInternal.class))) {
      BinarySpecInternal binarySpecInternal=grandparentNode.asImmutable(ModelType.of(BinarySpecInternal.class),null).getInstance();
      return binarySpecInternal.getComponent() == null ? binarySpecInternal.getName() : binarySpecInternal.getComponent().getName();
    }
    if (grandparentNode.canBeViewedAs(ModelType.of(ComponentSpec.class))) {
      ComponentSpec componentSpec=grandparentNode.asImmutable(ModelType.of(ComponentSpec.class),null).getInstance();
      return componentSpec.getName();
    }
  }
  return modelNode.getParent().getPath().getName();
}
