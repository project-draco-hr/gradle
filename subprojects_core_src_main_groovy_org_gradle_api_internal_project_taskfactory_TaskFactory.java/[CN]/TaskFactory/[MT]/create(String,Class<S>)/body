{
  if (!Task.class.isAssignableFrom(type)) {
    throw new InvalidUserDataException(String.format("Cannot create task of type '%s' as it does not implement the Task interface.",type.getSimpleName()));
  }
  final Class<? extends Task> generatedType;
  if (type.isAssignableFrom(DefaultTask.class)) {
    generatedType=generator.generate(DefaultTask.class);
  }
 else {
    generatedType=generator.generate(type);
  }
  return type.cast(AbstractTask.injectIntoNewInstance(project,name,new Callable<Task>(){
    public Task call() throws Exception {
      try {
        return instantiator.newInstance(generatedType);
      }
 catch (      ObjectInstantiationException e) {
        throw new TaskInstantiationException(String.format("Could not create task of type '%s'.",type.getSimpleName()),e.getCause());
      }
    }
  }
));
}
