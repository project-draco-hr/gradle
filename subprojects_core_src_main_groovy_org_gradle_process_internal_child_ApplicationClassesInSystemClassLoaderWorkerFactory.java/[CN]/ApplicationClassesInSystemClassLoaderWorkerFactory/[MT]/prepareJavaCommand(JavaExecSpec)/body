{
  execSpec.setMain("jarjar." + GradleWorkerMain.class.getName());
  execSpec.classpath(classPathRegistry.getClassPath("WORKER_MAIN").getAsFiles());
  Object requestedSecurityManager=execSpec.getSystemProperties().get("java.security.manager");
  if (requestedSecurityManager != null) {
    execSpec.systemProperty("org.gradle.security.manager",requestedSecurityManager);
  }
  execSpec.systemProperty("java.security.manager","jarjar." + BootstrapSecurityManager.class.getName());
  try {
    ByteArrayOutputStream bytes=new ByteArrayOutputStream();
    DataOutputStream outstr=new DataOutputStream(new EncodedStream.EncodedOutput(bytes));
    LOGGER.debug("Writing an application classpath to child process' standard input.");
    outstr.writeInt(processBuilder.getApplicationClasspath().size());
    for (    File file : processBuilder.getApplicationClasspath()) {
      outstr.writeUTF(file.getAbsolutePath());
    }
    GUtil.serialize(create(),outstr);
    outstr.close();
    execSpec.setStandardInput(new ByteArrayInputStream(bytes.toByteArray()));
  }
 catch (  IOException e) {
    throw new UncheckedIOException(e);
  }
}
