{
  DependencyResolutionServices services=dependencyManagementServices.create(fileResolver,dependencyMetaDataProvider,projectFinder,context);
  RepositoryHandler repositoryHandler=services.getResolveRepositoryHandler();
  ConfigurationContainer configurationContainer=services.getConfigurationContainer();
  DependencyHandler dependencyHandler=services.getDependencyHandler();
  Collection<Object> key=Arrays.asList(scriptSource.getClassName(),parentClassLoader);
  ObservableUrlClassLoader classLoader=classLoaderCache.get(key);
  if (classLoader == null) {
    classLoader=new ObservableUrlClassLoader(parentClassLoader);
    classLoaderCache.put(key,classLoader);
    return new DefaultScriptHandler(scriptSource,repositoryHandler,dependencyHandler,configurationContainer,classLoader);
  }
  return new NoClassLoaderUpdateScriptHandler(classLoader,repositoryHandler,dependencyHandler,scriptSource,configurationContainer);
}
