{
  FileCollectionSnapshot lastExecutionOutputFiles;
  if (previousExecution == null || previousExecution.getOutputFilesSnapshot() == null) {
    lastExecutionOutputFiles=outputFilesSnapshotter.emptySnapshot();
  }
 else {
    lastExecutionOutputFiles=previousExecution.getOutputFilesSnapshot();
  }
  FileCollectionSnapshot newOutputFiles=outputFilesBefore.changesSince(lastExecutionOutputFiles).applyTo(lastExecutionOutputFiles,new ChangeListener<FileCollectionSnapshot.Merge>(){
    public void added(    FileCollectionSnapshot.Merge element){
      element.ignore();
    }
    public void removed(    FileCollectionSnapshot.Merge element){
    }
    public void changed(    FileCollectionSnapshot.Merge element){
    }
  }
);
  FileCollectionSnapshot outputFilesAfter=createSnapshot(outputFilesSnapshotter,task.getOutputs().getFiles());
  currentExecution.setOutputFilesSnapshot(outputFilesAfter.changesSince(outputFilesBefore).applyTo(newOutputFiles));
}
