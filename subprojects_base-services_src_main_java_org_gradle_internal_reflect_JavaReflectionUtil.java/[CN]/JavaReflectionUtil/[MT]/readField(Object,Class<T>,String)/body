{
  Class<?> objectType=target.getClass();
  while (objectType != null) {
    try {
      Field field=objectType.getDeclaredField(name);
      if (type.isAssignableFrom(field.getType())) {
        field.setAccessible(true);
        Object value;
        try {
          value=field.get(target);
        }
 catch (        IllegalAccessException e) {
          throw UncheckedException.throwAsUncheckedException(e);
        }
        if (type.isPrimitive()) {
          @SuppressWarnings("unchecked") T cast=(T)getWrapperTypeForPrimitiveType(type).cast(value);
          return cast;
        }
 else {
          return type.cast(value);
        }
      }
    }
 catch (    NoSuchFieldException ignore) {
    }
    objectType=objectType.getSuperclass();
  }
  throw UncheckedException.throwAsUncheckedException(new NoSuchFieldException("Could not find field '" + name + "' with type '"+ type.getClass()+ "' on class '"+ target.getClass()+ "'"));
}
