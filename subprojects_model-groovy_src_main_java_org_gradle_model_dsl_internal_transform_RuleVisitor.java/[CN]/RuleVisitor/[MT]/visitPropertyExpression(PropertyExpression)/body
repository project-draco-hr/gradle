{
  ArrayList<String> names=Lists.newArrayList();
  boolean propertyIsLiteral=extractPropertyPath(expression,names);
  if (names.isEmpty() || !names.get(0).equals("thing")) {
    super.visitPropertyExpression(expression);
  }
 else {
    String modelPath=ModelPath.pathString(names);
    ConstantExpression modelPathConstantExpression=new ConstantExpression(modelPath);
    inputs.put(modelPath,expression.getLineNumber());
    VariableExpression inputsVariable=new VariableExpression(accessVariable);
    Expression originalObjectExpression=expression.getObjectExpression();
    ArgumentListExpression modelPathArgumentExpression=new ArgumentListExpression(modelPathConstantExpression);
    expression.setObjectExpression(new TernaryExpression(new BooleanExpression(new MethodCallExpression(inputsVariable,HAS,modelPathArgumentExpression)),new MethodCallExpression(inputsVariable,propertyIsLiteral ? PROPERTY : INPUT,modelPathArgumentExpression),originalObjectExpression));
  }
}
