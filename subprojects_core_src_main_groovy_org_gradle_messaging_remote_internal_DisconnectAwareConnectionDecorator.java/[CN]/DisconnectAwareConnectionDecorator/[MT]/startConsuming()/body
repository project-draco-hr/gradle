{
  consumerExecutor.execute(new Runnable(){
    public void run(){
      LOGGER.info("starting disconnect aware consumer {}",this);
      while (true) {
        T message=DisconnectAwareConnectionDecorator.super.receive();
        if (message == null) {
          List<T> uncollected=new LinkedList<T>();
          if (!stopped) {
            List<MessageWrapper<T>> wrappers=new LinkedList<MessageWrapper<T>>();
            messages.drainTo(wrappers);
            for (            MessageWrapper<T> wrapper : wrappers) {
              uncollected.add(wrapper.message);
            }
          }
          put(null);
          if (!stopped) {
            invokeDisconnectAction(uncollected);
          }
          break;
        }
 else {
          put(message);
        }
      }
    }
  }
);
}
