{
  Set<Project> projectsWithIml=Sets.filter(project.getRootProject().getAllprojects(),new Predicate<Project>(){
    @Override public boolean apply(    Project project){
      return project.getPlugins().hasPlugin(IdeaPlugin.class);
    }
  }
);
  for (  Project project : projectsWithIml) {
    AfterEvaluateHelper.afterEvaluateOrExecute(project,new Action<Project>(){
      @Override public void execute(      Project project){
        ProjectLocalComponentProvider projectComponentProvider=((ProjectInternal)project).getServices().get(ProjectLocalComponentProvider.class);
        ProjectComponentIdentifier projectId=DefaultProjectComponentIdentifier.newId(project.getPath());
        projectComponentProvider.registerAdditionalArtifact(projectId,createImlArtifact(projectId,project));
      }
    }
);
  }
}
