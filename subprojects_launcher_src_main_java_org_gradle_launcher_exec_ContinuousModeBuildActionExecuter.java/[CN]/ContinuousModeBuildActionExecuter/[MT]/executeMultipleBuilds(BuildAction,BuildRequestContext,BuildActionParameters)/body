{
  Object lastResult=null;
  int counter=0;
  while (buildNotStopped(requestContext)) {
    if (++counter != 1) {
      requestContext.getBuildTimeClock().reset();
      logger.println("Change detected, executing build...").println();
    }
    FileSystemSubset.Builder fileSystemSubsetBuilder=FileSystemSubset.builder();
    try {
      lastResult=executeBuildAndAccumulateInputs(action,requestContext,actionParameters,fileSystemSubsetBuilder);
    }
 catch (    Throwable t) {
    }
    FileSystemSubset toWatch=fileSystemSubsetBuilder.build();
    if (toWatch.isEmpty()) {
      logger.println().withStyle(StyledTextOutput.Style.Failure).println("Exiting continuous building as no executed tasks declared file system inputs.");
      return lastResult;
    }
 else     if (buildNotStopped(requestContext)) {
      waiter.execute(toWatch,new Runnable(){
        @Override public void run(){
          logger.println().println("Waiting for changes to input files of tasks... (ctrl+c to exit)");
        }
      }
);
    }
  }
  logger.println("Build cancelled.");
  return lastResult;
}
