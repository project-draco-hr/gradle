{
  final Configuration playAppCompileClasspath=project.getConfigurations().create(PLAYAPP_COMPILE_CONFIGURATION_NAME);
  playAppCompileClasspath.setVisible(false);
  playAppCompileClasspath.setDescription("The dependencies to be used for scala compilation of play application.");
  playAppCompileClasspath.getIncoming().beforeResolve(new Action<ResolvableDependencies>(){
    public void execute(    ResolvableDependencies resolvableDependencies){
      DependencySet dependencies=playAppCompileClasspath.getDependencies();
      if (dependencies.isEmpty()) {
        dependencies.add(project.getDependencies().create(DEFAULT_PLAY_DEPENDENCY));
      }
    }
  }
);
  project.getTasks().withType(ScalaCompile.class).all(new Action<ScalaCompile>(){
    public void execute(    ScalaCompile scalaCompile){
      scalaCompile.getConventionMapping().map("classpath",new Callable<FileCollection>(){
        public FileCollection call() throws Exception {
          return project.getConfigurations().getByName(PLAYAPP_COMPILE_CONFIGURATION_NAME);
        }
      }
);
    }
  }
);
}
