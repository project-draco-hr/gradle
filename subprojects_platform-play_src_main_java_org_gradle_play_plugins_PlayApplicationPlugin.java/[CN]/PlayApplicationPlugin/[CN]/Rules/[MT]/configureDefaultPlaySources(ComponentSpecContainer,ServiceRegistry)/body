{
  final FileResolver fileResolver=serviceRegistry.get(FileResolver.class);
  final Instantiator instantiator=serviceRegistry.get(Instantiator.class);
  components.withType(PlayApplicationSpec.class).all(new Action<PlayApplicationSpec>(){
    public void execute(    PlayApplicationSpec playComponent){
      ScalaLanguageSourceSet scalaSources=BaseLanguageSourceSet.create(DefaultScalaLanguageSourceSet.class,"scala",playComponent.getName(),fileResolver,instantiator);
      scalaSources.getSource().srcDir("app");
      scalaSources.getSource().include("**/*.scala");
      FunctionalSourceSet sources=((ComponentSpecInternal)playComponent).getSources();
      sources.add(scalaSources);
      JavaSourceSet javaSources=BaseLanguageSourceSet.create(DefaultJavaLanguageSourceSet.class,"java",playComponent.getName(),fileResolver,instantiator);
      javaSources.getSource().srcDir("app");
      javaSources.getSource().include("**/*.java");
      sources.add(javaSources);
      DefaultSourceDirectorySet resourcesDirectorySet=new DefaultSourceDirectorySet("resources",fileResolver);
      JvmResourceSet appResources=instantiator.newInstance(DefaultJvmResourceSet.class,"resources",playComponent.getName(),resourcesDirectorySet);
      appResources.getSource().srcDirs("conf");
      sources.add(appResources);
    }
  }
);
}
