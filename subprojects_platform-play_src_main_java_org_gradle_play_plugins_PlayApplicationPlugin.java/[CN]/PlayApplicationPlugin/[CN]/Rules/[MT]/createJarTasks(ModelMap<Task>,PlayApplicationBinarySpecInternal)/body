{
  String jarTaskName=binary.getTasks().taskName("create","Jar");
  tasks.create(jarTaskName,Jar.class,new Action<Jar>(){
    public void execute(    Jar jar){
      jar.setDescription("Assembles the application jar for the " + binary.getDisplayName() + ".");
      jar.setDestinationDir(binary.getJarFile().getParentFile());
      jar.setArchiveName(binary.getJarFile().getName());
      jar.from(binary.getAssembly().getClassDirectories());
      jar.from(binary.getAssembly().getResourceDirectories());
      jar.dependsOn(binary.getAssembly());
    }
  }
);
  String assetsJarTaskName=binary.getTasks().taskName("create","assetsJar");
  tasks.create(assetsJarTaskName,Jar.class,new Action<Jar>(){
    public void execute(    Jar jar){
      jar.setDescription("Assembles the assets jar for the " + binary.getDisplayName() + ".");
      jar.setDestinationDir(binary.getAssetsJarFile().getParentFile());
      jar.setArchiveName(binary.getAssetsJarFile().getName());
      jar.setClassifier("assets");
      CopySpecInternal newSpec=jar.getRootSpec().addChild();
      newSpec.from(binary.getAssets().getAssetDirs());
      newSpec.into("public");
      jar.dependsOn(binary.getAssets());
    }
  }
);
}
