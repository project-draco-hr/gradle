{
  final String scalaCompileTaskName=binary.getTasks().taskName("compile","Scala");
  final JvmAssembly assembly=((PlayApplicationBinarySpecInternal)binary).getAssembly();
  tasks.create(scalaCompileTaskName,PlatformScalaCompile.class,new Action<PlatformScalaCompile>(){
    public void execute(    PlatformScalaCompile scalaCompile){
      ScalaLanguagePlugin.configureScalaTask(scalaCompile,assembly,"Compiles all scala and java source sets for the " + binary.getDisplayName() + ".");
      for (      LanguageSourceSet appSources : binary.getInputs().withType(ScalaLanguageSourceSet.class)) {
        ScalaLanguagePlugin.addSourceSetToCompile(scalaCompile,appSources);
      }
      for (      LanguageSourceSet appSources : binary.getInputs().withType(JavaSourceSet.class)) {
        ScalaLanguagePlugin.addSourceSetToCompile(scalaCompile,appSources);
      }
      for (      LanguageSourceSet generatedSourceSet : binary.getGeneratedScala().values()) {
        ScalaLanguagePlugin.addSourceSetToCompile(scalaCompile,generatedSourceSet);
      }
      scalaCompile.setPlatform(binary.getTargetPlatform().getScalaPlatform());
      scalaCompile.setClasspath(((PlayApplicationBinarySpecInternal)binary).getClasspath());
    }
  }
);
}
