{
  final String scalaCompileTaskName=String.format("scalaCompile%s",StringUtils.capitalize(binary.getName()));
  tasks.create(scalaCompileTaskName,PlatformScalaCompile.class,new Action<PlatformScalaCompile>(){
    public void execute(    PlatformScalaCompile scalaCompile){
      scalaCompile.setDestinationDir(binary.getClasses().getClassesDir());
      scalaCompile.setPlatform(binary.getTargetPlatform().getScalaPlatform());
      String targetCompatibility=binary.getTargetPlatform().getJavaPlatform().getTargetCompatibility().getMajorVersion();
      scalaCompile.setSourceCompatibility(targetCompatibility);
      scalaCompile.setTargetCompatibility(targetCompatibility);
      IncrementalCompileOptions incrementalOptions=scalaCompile.getScalaCompileOptions().getIncrementalOptions();
      incrementalOptions.setAnalysisFile(new File(buildDir,String.format("tmp/scala/compilerAnalysis/%s.analysis",scalaCompileTaskName)));
      for (      LanguageSourceSet appSources : binary.getSource().withType(ScalaLanguageSourceSet.class)) {
        scalaCompile.source(appSources.getSource());
        scalaCompile.dependsOn(appSources);
      }
      scalaCompile.source(binary.getGeneratedScala().getSource());
      scalaCompile.dependsOn(binary.getGeneratedScala());
      scalaCompile.setClasspath(binary.getClasspath());
      binary.getClasses().builtBy(scalaCompile);
    }
  }
);
}
