{
  project.getPlugins().apply(ComponentModelBasePlugin.class);
  project.getModelRegistry().create(new RepositoriesFactory("repositories",instantiator,fileResolver));
  ProjectComponentContainer components=project.getExtensions().getByType(ProjectComponentContainer.class);
  components.registerFactory(ProjectNativeExecutable.class,new ProjectNativeExecutableFactory(instantiator,project));
  NamedDomainObjectContainer<ProjectNativeExecutable> nativeExecutables=components.containerWithType(ProjectNativeExecutable.class);
  components.registerFactory(NativeLibrarySpec.class,new ProjectNativeLibraryFactory(instantiator,project));
  NamedDomainObjectContainer<NativeLibrarySpec> nativeLibraries=components.containerWithType(NativeLibrarySpec.class);
  project.getExtensions().create("nativeRuntime",DefaultNativeComponentExtension.class,nativeExecutables,nativeLibraries);
  project.getExtensions().add("nativeComponents",components.withType(ProjectNativeComponent.class));
  project.getExtensions().add("executables",nativeExecutables);
  project.getExtensions().add("libraries",nativeLibraries);
}
