{
  if (spec instanceof CppCompileSpec) {
    return castCompiler(createCppCompiler());
  }
  if (spec instanceof CCompileSpec) {
    return castCompiler(createCCompiler());
  }
  if (spec instanceof ObjectiveCppCompileSpec) {
    return castCompiler(createObjectiveCppCompiler());
  }
  if (spec instanceof ObjectiveCCompileSpec) {
    return castCompiler(createObjectiveCCompiler());
  }
  if (spec instanceof WindowsResourceCompileSpec) {
    throw new RuntimeException("Windows resource compiler is not available");
  }
  if (spec instanceof AssembleSpec) {
    return castCompiler(createAssembler());
  }
  if (spec instanceof LinkerSpec) {
    return castCompiler(createLinker());
  }
  if (spec instanceof StaticLibraryArchiverSpec) {
    return castCompiler(createStaticLibraryArchiver());
  }
  throw new IllegalArgumentException(String.format("Don't know how to compile from a spec of type %s.",spec.getClass().getSimpleName()));
}
