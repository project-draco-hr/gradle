{
  if (!isPrimitiveType(primitiveModelType)) {
    throw new IllegalArgumentException(primitiveModelType + " is not a primitive type.");
  }
  Class<?> primitiveClass=primitiveModelType.getRawClass();
  if (primitiveClass.equals(boolean.class)) {
    return false;
  }
  if (primitiveClass.equals(char.class)) {
    return '\u0000';
  }
  if (primitiveClass.equals(byte.class)) {
    return (byte)0;
  }
  if (primitiveClass.equals(short.class)) {
    return (short)0;
  }
  if (primitiveClass.equals(int.class)) {
    return 0;
  }
  if (primitiveClass.equals(float.class)) {
    return 0.0F;
  }
  if (primitiveClass.equals(long.class)) {
    return 0L;
  }
  if (primitiveClass.equals(double.class)) {
    return 0.0D;
  }
  throw new IllegalStateException("This should never happen, internal PrimitiveTypes must be broken, please report.");
}
