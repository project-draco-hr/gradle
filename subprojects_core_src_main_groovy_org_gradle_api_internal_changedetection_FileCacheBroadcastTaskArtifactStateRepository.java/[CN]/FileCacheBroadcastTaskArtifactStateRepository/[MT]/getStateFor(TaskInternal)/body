{
  final TaskArtifactState state=repository.getStateFor(task);
  return new TaskArtifactState(){
    public boolean isUpToDate(){
      listener.cacheable(task.getInputs().getFiles());
      listener.cacheable(task.getOutputs().getFiles());
      return state.isUpToDate();
    }
    public TaskExecutionContext getExecutionContext(){
      return state.getExecutionContext();
    }
    public void beforeTask(){
      if (task.getOutputs().getHasOutput()) {
        listener.invalidate(task.getOutputs().getFiles());
      }
 else {
        listener.invalidateAll();
      }
      state.beforeTask();
    }
    public void afterTask(){
      listener.cacheable(task.getOutputs().getFiles());
      state.afterTask();
    }
    public void finished(){
      state.finished();
    }
    public TaskExecutionHistory getExecutionHistory(){
      return state.getExecutionHistory();
    }
  }
;
}
