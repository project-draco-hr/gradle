{
  final BuildException failure=new BuildException();
  task.setDestinationDir(destDir);
  task.setSrcDirs(srcDirs);
  context.checking(new Expectations(){
{
      one(existingDirsFilter).checkDestDirAndFindExistingDirsAndThrowStopActionIfNone(destDir,srcDirs);
      will(returnValue(srcDirs));
      one(dependencyManager).resolveTask(AbstractTaskTest.TEST_TASK_NAME);
      will(returnValue(classpath));
      one(antJavadoc).execute(srcDirs,destDir,classpath,null,null,EMPTY_LIST,EMPTY_LIST,getProject().getAnt());
      will(throwException(failure));
    }
  }
);
  try {
    task.execute();
    fail();
  }
 catch (  GradleException e) {
    assertThat(e.getMessage(),endsWith("Javadoc generation failed."));
    assertThat(e.getCause(),sameInstance((Throwable)failure));
  }
}
