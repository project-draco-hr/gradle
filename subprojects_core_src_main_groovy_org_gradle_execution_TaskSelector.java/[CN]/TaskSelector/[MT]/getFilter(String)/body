{
  final ResolvedTaskPath taskPath=taskPathResolver.resolvePath(path,gradle.getDefaultProject());
  if (!taskPath.isQualified()) {
    ProjectInternal targetProject=taskPath.getProject();
    configurer.configure(targetProject);
    TaskSelectionResult tasks=taskNameResolver.selectWithName(taskPath.getTaskName(),taskPath.getProject(),false);
    if (tasks != null) {
      return new TaskPathSpec(targetProject,taskPath.getTaskName());
    }
  }
  final Set<Task> selectedTasks=getSelection(path,gradle.getDefaultProject()).getTasks();
  return new Spec<Task>(){
    public boolean isSatisfiedBy(    Task element){
      return !selectedTasks.contains(element);
    }
  }
;
}
