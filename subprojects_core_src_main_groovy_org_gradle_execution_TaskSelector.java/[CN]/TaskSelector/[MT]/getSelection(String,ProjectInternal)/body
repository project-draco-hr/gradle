{
  ResolvedTaskPath taskPath=taskPathResolver.resolvePath(path,project);
  evaluator.evaluateByPath(taskPath);
  TaskSelectionResult tasks=taskNameResolver.selectWithName(taskPath.getTaskName(),taskPath.getProject(),!taskPath.isQualified());
  if (tasks != null) {
    return new TaskSelection(taskPath.getProject().getPath(),path,tasks);
  }
  Map<String,TaskSelectionResult> tasksByName=taskNameResolver.selectAll(taskPath.getProject(),!taskPath.isQualified());
  NameMatcher matcher=new NameMatcher();
  String actualName=matcher.find(taskPath.getTaskName(),tasksByName.keySet());
  if (actualName != null) {
    return new TaskSelection(taskPath.getProject().getPath(),taskPath.getPrefix() + actualName,tasksByName.get(actualName));
  }
  throw new TaskSelectionException(matcher.formatErrorMessage("task",taskPath.getProject()));
}
