{
  Bean parent=new Bean();
  parent.setProperty("parentProperty","parentProperty");
  parent.setReadWriteProperty("ignore me");
  parent.doSetReadOnlyProperty("ignore me");
  Convention parentConvention=parent.helper.getConvention();
  parentConvention.getPlugins().put("parent",new ConventionBean());
  GroovyBean bean=new GroovyBean();
  bean.setProperty("additional","additional");
  bean.setReadWriteProperty("readWriteProperty");
  bean.doSetReadOnlyProperty("readOnlyProperty");
  bean.setGroovyProperty("groovyProperty");
  Convention convention=bean.helper.getConvention();
  ConventionBean conventionBean=new ConventionBean();
  conventionBean.setConventionProperty("conventionProperty");
  convention.getPlugins().put("bean",conventionBean);
  bean.setParent(parent);
  Map<String,Object> properties=bean.getProperties();
  assertThat(properties.get("properties"),sameInstance((Object)properties));
  assertThat(properties.get("readWriteProperty"),equalTo((Object)"readWriteProperty"));
  assertThat(properties.get("readOnlyProperty"),equalTo((Object)"readOnlyProperty"));
  assertThat(properties.get("parentProperty"),equalTo((Object)"parentProperty"));
  assertThat(properties.get("additional"),equalTo((Object)"additional"));
  assertThat(properties.get("groovyProperty"),equalTo((Object)"groovyProperty"));
  assertThat(properties.get("groovyDynamicProperty"),equalTo(null));
  assertThat(properties.get("conventionProperty"),equalTo((Object)"conventionProperty"));
}
