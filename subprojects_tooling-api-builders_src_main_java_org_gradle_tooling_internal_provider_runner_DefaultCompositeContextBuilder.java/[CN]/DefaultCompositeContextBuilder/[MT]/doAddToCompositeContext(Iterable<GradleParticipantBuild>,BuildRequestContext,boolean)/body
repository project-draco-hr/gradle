{
  GradleLauncherFactory gradleLauncherFactory=sharedServices.get(GradleLauncherFactory.class);
  CompositeBuildContext context=sharedServices.get(CompositeBuildContext.class);
  CompositeContextBuildActionRunner contextBuilder=new CompositeContextBuildActionRunner(context,propagateFailures);
  for (  GradleParticipantBuild participant : participantBuilds) {
    StartParameter participantStartParam=buildStartParam.newInstance();
    participantStartParam.setProjectDir(participant.getProjectDir());
    participantStartParam.setIncludedBuilds(Collections.<File>emptyList());
    participantStartParam.setConfigureOnDemand(false);
    if (participantStartParam.getLogLevel() == LogLevel.LIFECYCLE) {
      participantStartParam.setLogLevel(LogLevel.WARN);
      LOGGER.lifecycle("[composite-build] Configuring participant: " + participant.getProjectDir());
    }
    GradleLauncher gradleLauncher=createGradleLauncher(participantStartParam,requestContext,gradleLauncherFactory);
    contextBuilder.run(new GradleBuildController(gradleLauncher));
  }
}
