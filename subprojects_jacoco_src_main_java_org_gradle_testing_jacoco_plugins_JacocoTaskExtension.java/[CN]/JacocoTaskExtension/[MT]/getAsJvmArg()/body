{
  StringBuilder builder=new StringBuilder();
  ArgumentAppender argument=new ArgumentAppender(builder,task.getWorkingDir());
  ConventionValueSupplier convention=new ConventionValueSupplier(this);
  builder.append("-javaagent:");
  builder.append(GFileUtils.relativePath(task.getWorkingDir(),agent.getJar()));
  builder.append('=');
  argument.append("destfile",convention.get(destinationFile,"destinationFile"));
  argument.append("append",convention.get(append,"append"));
  argument.append("includes",convention.get(includes,"includes"));
  argument.append("excludes",convention.get(excludes,"excludes"));
  argument.append("exclclassloader",convention.get(excludeClassLoaders,"excludeClassLoaders"));
  if (agent.supportsInclNoLocationClasses()) {
    argument.append("inclnolocationclasses",convention.get(includeNoLocationClasses,"includeNoLocationClasses"));
  }
  argument.append("sessionid",convention.get(sessionId,"sessionId"));
  argument.append("dumponexit",convention.get(dumpOnExit,"dumpOnExit"));
  argument.append("output",convention.get(output,"output").getAsArg());
  argument.append("address",convention.get(address,"address"));
  argument.append("port",convention.get(port,"port"));
  argument.append("classdumpdir",classDumpFile);
  if (agent.supportsJmx()) {
    argument.append("jmx",convention.get(jmx,"jmx"));
  }
  return builder.toString();
}
