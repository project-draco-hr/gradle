{
  setMocks();
  final JavaVersion sourceCompatibility=JavaVersion.VERSION_1_5;
  context.checking(new Expectations(){
{
      one(projectMock).getProjectDir();
      will(returnValue(new File("projectDir")));
      one(projectMock).property("sourceCompatibility");
      will(returnValue(sourceCompatibility));
      one(testngOptionsMock).setAnnotationsOnSourceCompatibility(sourceCompatibility);
      one(testMock).getTestClassesDir();
      will(returnValue(testClassesDir));
      one(testMock).getClasspath();
      will(returnValue(classpathMock));
      one(classpathMock).getAsFileTree();
      will(returnValue(classpathAsFileTreeMock));
      one(classpathAsFileTreeMock).visit(with(aNonNull(FileVisitor.class)));
    }
  }
);
  testNGTestFrameworkInstance.initialize();
  assertNotNull(testNGTestFrameworkInstance.getOptions());
}
