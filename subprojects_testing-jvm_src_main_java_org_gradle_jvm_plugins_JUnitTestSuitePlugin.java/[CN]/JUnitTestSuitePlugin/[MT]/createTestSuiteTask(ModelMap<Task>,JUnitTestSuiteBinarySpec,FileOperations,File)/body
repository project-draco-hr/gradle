{
  String taskName=((BinarySpecInternal)binary).getProjectScopedName() + "Test";
  final JvmAssembly jvmAssembly=((WithJvmAssembly)binary).getAssembly();
  tasks.create(taskName,Test.class,new Action<Test>(){
    @Override public void execute(    final Test test){
      test.dependsOn(jvmAssembly);
      test.setTestClassesDir(binary.getClassesDir());
      FileCollection jvmAssemblyOutput=fileOperations.files(jvmAssembly.getClassDirectories(),jvmAssembly.getResourceDirectories());
      test.setClasspath(jvmAssemblyOutput);
      configureReports(test);
    }
    private File configureReports(    Test test){
      TestTaskReports reports=test.getReports();
      File reportsDirectory=new File(buildDir,"reports");
      File htmlDir=new File(reportsDirectory,"tests");
      File xmlDir=new File(buildDir,"test-results");
      File binDir=new File(xmlDir,"binary");
      reports.getHtml().setDestination(htmlDir);
      reports.getJunitXml().setDestination(xmlDir);
      test.setBinResultsDir(binDir);
      return reportsDirectory;
    }
  }
);
}
