{
  final List<JavaPlatform> javaPlatforms=resolvePlatforms(platformResolver);
  final JavaPlatform platform=javaPlatforms.get(0);
  final BinaryNamingScheme namingScheme=namingSchemeFor(testSuite,javaPlatforms,platform);
  testBinaries.create(namingScheme.getBinaryName(),JUnitTestSuiteBinarySpec.class,new Action<JUnitTestSuiteBinarySpec>(){
    @Override public void execute(    JUnitTestSuiteBinarySpec jUnitTestSuiteBinarySpec){
      final String jUnitVersion=testSuite.getJUnitVersion();
      ((BinarySpecInternal)jUnitTestSuiteBinarySpec).setNamingScheme(namingScheme);
      jUnitTestSuiteBinarySpec.setJUnitVersion(jUnitVersion);
      jUnitTestSuiteBinarySpec.setTargetPlatform(platform);
      testSuite.getSources().all(new Action<LanguageSourceSet>(){
        @Override public void execute(        LanguageSourceSet languageSourceSet){
          if (languageSourceSet instanceof DependentSourceSet) {
            ((DependentSourceSet)languageSourceSet).getDependencies().group("junit").module("junit").version(jUnitVersion);
          }
        }
      }
);
    }
  }
);
}
