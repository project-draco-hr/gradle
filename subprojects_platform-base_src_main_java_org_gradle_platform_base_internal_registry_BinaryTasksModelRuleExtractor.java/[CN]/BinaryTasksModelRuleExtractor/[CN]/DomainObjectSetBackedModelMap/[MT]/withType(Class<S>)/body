{
  if (type.equals(elementClass)) {
    return uncheckedCast(this);
  }
  if (elementClass.isAssignableFrom(type)) {
    Class<? extends T> castType=uncheckedCast(type);
    ModelMap<? extends T> subType=toSubtype(castType);
    return uncheckedCast(subType);
  }
  DomainObjectSet<S> cast=toNonSubtype(type);
  return new DomainObjectSetBackedModelMap<S>(binary,type,cast,new NamedEntityInstantiator<S>(){
    @Override public <D extends S>D create(    String name,    Class<D> type){
      throw new IllegalArgumentException(String.format("Cannot create an item of type %s as this is not a subtype of %s.",type,elementClass.toString()));
    }
  }
,namer);
}
