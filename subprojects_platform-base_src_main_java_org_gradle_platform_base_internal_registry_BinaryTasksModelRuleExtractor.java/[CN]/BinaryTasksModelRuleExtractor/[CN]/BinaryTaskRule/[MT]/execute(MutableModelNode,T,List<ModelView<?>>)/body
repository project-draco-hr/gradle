{
  ITaskFactory taskFactory=ModelViews.assertType(inputs.get(0),ModelType.of(ITaskFactory.class)).getInstance();
  NamedEntityInstantiator<Task> instantiator=new Instantiator(binary,taskFactory);
  DefaultCollectionBuilder<Task> collectionBuilder=new DefaultCollectionBuilder<Task>(ModelType.of(Task.class),instantiator,binary.getTasks(),getDescriptor(),modelNode){
    @Override public void create(    String name){
      super.create(name);
      get(name);
    }
    @Override public void create(    String name,    Action<? super Task> configAction){
      super.create(name,configAction);
      get(name);
    }
    @Override public <S extends Task>void create(    String name,    Class<S> type){
      super.create(name,type);
      get(name);
    }
    @Override public <S extends Task>void create(    String name,    Class<S> type,    Action<? super S> configAction){
      super.create(name,type,configAction);
      get(name);
    }
  }
;
  invoke(inputs,collectionBuilder,binary,taskFactory);
}
