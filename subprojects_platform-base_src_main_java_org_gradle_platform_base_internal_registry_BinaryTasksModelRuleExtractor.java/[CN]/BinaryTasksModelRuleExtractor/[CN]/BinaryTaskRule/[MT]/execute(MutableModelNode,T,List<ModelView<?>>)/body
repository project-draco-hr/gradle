{
  DefaultCollectionBuilder<TaskInternal> collectionBuilder=new DefaultCollectionBuilder<TaskInternal>(ModelType.of(TaskInternal.class),getDescriptor(),modelNode,DefaultCollectionBuilder.createAndStoreVia(ModelReference.of(ITaskFactory.class),ModelReference.of(modelNode.getPath().child("__tasks"),ModelTypes.collectionOf(Task.class)))){
    @Override protected <S extends TaskInternal>void onCreate(    final String name,    ModelType<S> type){
      Task task=get(name);
      binary.builtBy(task);
    }
  }
;
  CollectionBuilder<Task> cast=Cast.uncheckedCast(collectionBuilder);
  List<ModelView<?>> inputsWithBinary=new ArrayList<ModelView<?>>(inputs.size() + 1);
  inputsWithBinary.addAll(inputs);
  inputsWithBinary.add(new InstanceModelView<T>(getSubject().getPath(),getSubject().getType(),binary));
  invoke(inputsWithBinary,cast,binary,binary);
}
