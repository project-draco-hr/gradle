{
  NamedEntityInstantiator<Task> taskFactory=Cast.uncheckedCast(ModelViews.getInstance(inputs.get(0),ITaskFactory.class));
  ModelMap<Task> cast=DomainObjectSetBackedModelMap.wrap(Task.class,binary.getTasks(),taskFactory,new Namer<Object>(){
    @Override public String determineName(    Object object){
      return Cast.cast(Task.class,object).getName();
    }
  }
,new Action<Task>(){
    @Override public void execute(    Task task){
      binary.getTasks().add(task);
      binary.builtBy(task);
    }
  }
);
  List<ModelView<?>> inputsWithBinary=new ArrayList<ModelView<?>>(inputs.size());
  inputsWithBinary.addAll(inputs.subList(1,inputs.size()));
  inputsWithBinary.add(InstanceModelView.of(getSubject().getPath(),getSubject().getType(),binary));
  invoke(inputsWithBinary,cast,binary,binary);
}
