{
  ProtocolToModelAdapter adapter=new ProtocolToModelAdapter();
  List<InternalLaunchable> launchables=null;
  try {
    launchables=parameters.getLaunchables();
  }
 catch (  UnsupportedMethodException ume) {
  }
  if (launchables == null) {
    return parameters.getTasks();
  }
  List<String> allTasks=new ArrayList<String>();
  for (  InternalLaunchable launchable : launchables) {
    if (launchable instanceof Task) {
      allTasks.add(((Task)launchable).getPath());
    }
 else     if (launchable instanceof DefaultGradleTaskSelector) {
      allTasks.addAll(((DefaultGradleTaskSelector)launchable).getTasks());
    }
 else     if (DefaultGradleTaskSelector.class.getName().equals(launchable.getClass().getName())) {
      TaskListingLaunchable selector=adapter.adapt(TaskListingLaunchable.class,launchable);
      for (      String task : selector.getTasks()) {
        allTasks.add(task);
      }
    }
 else {
      throw new GradleException("Only Task or TaskSelector instances are supported. Found " + launchable.getClass());
    }
  }
  return allTasks;
}
