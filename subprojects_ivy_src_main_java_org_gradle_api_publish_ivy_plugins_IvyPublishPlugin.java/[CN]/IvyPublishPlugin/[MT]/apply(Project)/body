{
  project.getPlugins().apply(PublishingPlugin.class);
  final PublishingExtension extension=project.getExtensions().getByType(PublishingExtension.class);
  final PublicationContainerInternal publicationContainer=(PublicationContainerInternal)extension.getPublications();
  publicationContainer.registerFactory(IvyPublication.class,new IvyPublicationFactory(dependencyMetaDataProvider,instantiator,fileResolver));
  TaskContainer tasks=project.getTasks();
  IvyPublicationDynamicDescriptorGenerationTaskCreator descriptorGenerationTaskCreator=new IvyPublicationDynamicDescriptorGenerationTaskCreator(project);
  descriptorGenerationTaskCreator.monitor(extension.getPublications());
  Task publishLifecycleTask=tasks.getByName(PublishingPlugin.PUBLISH_LIFECYCLE_TASK_NAME);
  IvyPublishDynamicTaskCreator publishTaskCreator=new IvyPublishDynamicTaskCreator(tasks,publishLifecycleTask);
  publishTaskCreator.monitor(extension.getPublications(),extension.getRepositories());
}
