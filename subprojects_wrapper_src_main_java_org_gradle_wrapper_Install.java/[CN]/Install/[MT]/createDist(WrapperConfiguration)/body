{
  URI distributionUrl=configuration.getDistribution();
  boolean alwaysDownload=configuration.isAlwaysDownload();
  boolean alwaysUnpack=configuration.isAlwaysUnpack();
  PathAssembler.LocalDistribution localDistribution=pathAssembler.getDistribution(configuration);
  File localZipFile=localDistribution.getZipFile();
  boolean downloaded=false;
  if (alwaysDownload || !localZipFile.exists()) {
    String downloadId=UUID.randomUUID().toString();
    File tmpZipFile=new File(localZipFile.getParentFile(),localZipFile.getName() + "-" + downloadId+ ".part");
    tmpZipFile.delete();
    System.out.println("Downloading " + distributionUrl);
    download.download(distributionUrl,tmpZipFile);
    if (!localZipFile.exists() || alwaysDownload) {
      tmpZipFile.renameTo(localZipFile);
      downloaded=true;
    }
    tmpZipFile.delete();
  }
  File distDir=localDistribution.getDistributionDir();
  List<File> dirs=listDirs(distDir);
  if (downloaded || alwaysUnpack || dirs.isEmpty()) {
    for (    File dir : dirs) {
      System.out.println("Deleting directory " + dir.getAbsolutePath());
      deleteDir(dir);
    }
    System.out.println("Unzipping " + localZipFile.getAbsolutePath() + " to "+ distDir.getAbsolutePath());
    unzip(localZipFile,distDir);
    dirs=listDirs(distDir);
    if (dirs.isEmpty()) {
      throw new RuntimeException(String.format("Gradle distribution '%s' does not contain any directories. Expected to find exactly 1 directory.",distributionUrl));
    }
    setExecutablePermissions(dirs.get(0));
  }
  if (dirs.size() != 1) {
    throw new RuntimeException(String.format("Gradle distribution '%s' contains too many directories. Expected to find exactly 1 directory.",distributionUrl));
  }
  return dirs.get(0);
}
