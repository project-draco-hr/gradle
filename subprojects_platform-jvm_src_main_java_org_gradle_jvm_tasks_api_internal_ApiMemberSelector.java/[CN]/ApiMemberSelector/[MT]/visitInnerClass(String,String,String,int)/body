{
  if (innerName == null) {
    return;
  }
  if (isPackagePrivateMember(access) && !apiIncludesPackagePrivateMembers) {
    return;
  }
  innerClasses.add(new InnerClassMember(access,name,outerName,innerName));
  super.visitInnerClass(name,outerName,innerName,access);
}
