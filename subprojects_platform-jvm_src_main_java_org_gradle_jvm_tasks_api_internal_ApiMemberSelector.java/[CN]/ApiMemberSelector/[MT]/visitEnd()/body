{
  super.visitEnd();
  apiMemberAdapter.visit(classMember.getVersion(),classMember.getAccess(),classMember.getName(),classMember.getSignature(),classMember.getSuperName(),classMember.getInterfaces());
  visitAnnotationMembers(classMember.getAnnotations());
  for (  MethodMember method : methods) {
    MethodVisitor mv=apiMemberAdapter.visitMethod(method.getAccess(),method.getName(),method.getTypeDesc(),method.getSignature(),method.getExceptions().toArray(new String[0]));
    visitAnnotationMembers(mv,method.getAnnotations());
    visitAnnotationMembers(mv,method.getParameterAnnotations());
    mv.visitEnd();
  }
  for (  FieldMember field : fields) {
    FieldVisitor fieldVisitor=apiMemberAdapter.visitField(field.getAccess(),field.getName(),field.getTypeDesc(),field.getSignature(),null);
    visitAnnotationMembers(fieldVisitor,field.getAnnotations());
    fieldVisitor.visitEnd();
  }
  for (  InnerClassMember innerClass : innerClasses) {
    apiMemberAdapter.visitInnerClass(innerClass.getName(),innerClass.getOuterName(),innerClass.getInnerName(),innerClass.getAccess());
  }
  apiMemberAdapter.visitEnd();
}
