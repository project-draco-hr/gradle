{
  if ("<clinit>".equals(name)) {
    return null;
  }
  if (isCandidateApiMember(access,apiIncludesPackagePrivateMembers) || ("<init>".equals(name) && isInnerClass)) {
    final MethodMember methodMember=new MethodMember(access,name,desc,signature,exceptions);
    methods.add(methodMember);
    return new MethodVisitor(ASM5){
      @Override public AnnotationVisitor visitAnnotation(      String desc,      boolean visible){
        AnnotationMember ann=new AnnotationMember(desc,visible);
        methodMember.addAnnotation(ann);
        return new SortingAnnotationVisitor(ann,super.visitAnnotation(desc,visible));
      }
      @Override public AnnotationVisitor visitParameterAnnotation(      int parameter,      String desc,      boolean visible){
        ParameterAnnotationMember ann=new ParameterAnnotationMember(desc,visible,parameter);
        methodMember.addParameterAnnotation(ann);
        return new SortingAnnotationVisitor(ann,super.visitParameterAnnotation(parameter,desc,visible));
      }
    }
;
  }
  return null;
}
