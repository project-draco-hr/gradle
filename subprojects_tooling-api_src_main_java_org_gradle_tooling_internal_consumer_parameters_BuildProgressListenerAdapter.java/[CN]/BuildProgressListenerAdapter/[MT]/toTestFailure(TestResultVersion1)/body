{
  return new FailureOutcome(){
    @Override public long getStartTime(){
      return testResult.getStartTime();
    }
    @Override public long getEndTime(){
      return testResult.getEndTime();
    }
    @Override public List<Failure> getFailures(){
      List<? extends FailureVersion1> origFailures=testResult.getFailures();
      List<Failure> failures=new ArrayList<Failure>(origFailures.size());
      for (      FailureVersion1 origFailure : origFailures) {
        failures.add(toFailure(origFailure));
      }
      return failures;
    }
  }
;
}
