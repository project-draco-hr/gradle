{
  TestOperationDescriptor testDescriptor=removeTestDescriptor(event.getDescriptor());
  String eventDescription=event.getDisplayName();
  final long eventTime=event.getEventTime();
  if (event.getResult().getResultType().equals(TestResultVersion1.RESULT_FAILED)) {
    return new DefaultTestFinishEvent(eventTime,eventDescription,testDescriptor,new TestFailureResult(){
      @Override public FailureOutcome getOutcome(){
        return toTestFailure(event.getResult());
      }
    }
);
  }
 else   if (event.getResult().getResultType().equals(TestResultVersion1.RESULT_SKIPPED)) {
    return new DefaultTestFinishEvent(eventTime,eventDescription,testDescriptor,new TestSkippedResult(){
      @Override public Outcome getOutcome(){
        return toTestSuccess(event.getResult());
      }
    }
);
  }
 else   if (event.getResult().getResultType().equals(TestResultVersion1.RESULT_SUCCESSFUL)) {
    return new DefaultTestFinishEvent(eventTime,eventDescription,testDescriptor,new TestSuccessResult(){
      @Override public SuccessOutcome getOutcome(){
        return toTestSuccess(event.getResult());
      }
    }
);
  }
  throw new IllegalArgumentException("Cannot adapt progress event: " + event);
}
