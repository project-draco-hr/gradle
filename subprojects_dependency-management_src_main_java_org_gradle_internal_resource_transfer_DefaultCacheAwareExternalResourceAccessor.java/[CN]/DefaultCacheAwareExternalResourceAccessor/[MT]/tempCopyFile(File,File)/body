{
  try {
    if (srcFile == null) {
      throw new NullPointerException("Source must not be null");
    }
    if (destFile == null) {
      throw new NullPointerException("Destination must not be null");
    }
    if (!srcFile.exists()) {
      throw new FileNotFoundException("Source '" + srcFile + "' does not exist");
    }
    if (srcFile.isDirectory()) {
      throw new IOException("Source '" + srcFile + "' exists but is a directory");
    }
    if (srcFile.getCanonicalPath().equals(destFile.getCanonicalPath())) {
      throw new IOException("Source '" + srcFile + "' and destination '"+ destFile+ "' are the same");
    }
    if (destFile.getParentFile() != null && !destFile.getParentFile().exists()) {
      if (!destFile.getParentFile().mkdirs()) {
        throw new IOException("Destination '" + destFile + "' directory cannot be created");
      }
    }
    if (destFile.exists() && !destFile.canWrite()) {
      throw new IOException("Destination '" + destFile + "' exists but is read-only");
    }
    if (destFile.exists() && destFile.isDirectory()) {
      throw new IOException("Destination '" + destFile + "' exists but is a directory");
    }
    if (srcFile.length() == 0) {
      throw new IOException("Source '" + srcFile + "' has a 0 length");
    }
    FileInputStream input=new FileInputStream(srcFile);
    try {
      FileOutputStream output=new FileOutputStream(destFile);
      try {
        IOUtils.copy(input,output);
      }
  finally {
        output.close();
      }
    }
  finally {
      input.close();
    }
    if (!destFile.exists()) {
      throw new IOException("Failed to copy full contents from '" + srcFile + "' to '"+ destFile+ "' (destination does not exist)");
    }
    if (srcFile.length() != destFile.length()) {
      throw new IOException("Failed to copy full contents from '" + srcFile + "' (length: "+ srcFile.length()+ ") to '"+ destFile+ "' (length: "+ destFile.length()+ ")");
    }
    destFile.setLastModified(srcFile.lastModified());
  }
 catch (  IOException e) {
    throw new UncheckedIOException(e);
  }
}
