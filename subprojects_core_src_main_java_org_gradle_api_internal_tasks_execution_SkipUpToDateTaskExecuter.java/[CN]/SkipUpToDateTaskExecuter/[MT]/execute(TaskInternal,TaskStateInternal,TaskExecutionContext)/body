{
  LOGGER.debug("Determining if {} is up-to-date",task);
  Clock clock=new Clock();
  TaskArtifactState taskArtifactState=context.getTaskArtifactState();
  try {
    List<String> messages=LOGGER.isInfoEnabled() ? new ArrayList<String>() : null;
    if (taskArtifactState.isUpToDate(messages)) {
      LOGGER.info("Skipping {} as it is up-to-date (took {}).",task,clock.getTime());
      state.upToDate();
      return;
    }
    logOutOfDateMessages(messages,task,clock.getTime());
    task.getOutputs().setHistory(taskArtifactState.getExecutionHistory());
    taskArtifactState.beforeTask();
    try {
      executer.execute(task,state,context);
      if (state.getFailure() == null) {
        taskArtifactState.afterTask();
      }
    }
  finally {
      task.getOutputs().setHistory(null);
    }
  }
  finally {
    taskArtifactState.finished();
  }
}
