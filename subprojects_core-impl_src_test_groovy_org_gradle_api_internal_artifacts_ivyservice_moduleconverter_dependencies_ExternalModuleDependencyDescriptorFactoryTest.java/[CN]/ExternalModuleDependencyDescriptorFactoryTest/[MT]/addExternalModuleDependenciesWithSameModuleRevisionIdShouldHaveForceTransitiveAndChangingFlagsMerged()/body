{
  ExternalModuleDependency dependency1=new DefaultExternalModuleDependency("org.gradle","gradle-core","1.0",TEST_DEP_CONF);
  dependency1.setForce(false);
  dependency1.setTransitive(false);
  dependency1.setChanging(false);
  ExternalModuleDependency dependency2=new DefaultExternalModuleDependency("org.gradle","gradle-core","1.0",TEST_OTHER_DEP_CONF);
  dependency2.setForce(false);
  dependency2.setTransitive(false);
  dependency2.setChanging(false);
  externalModuleDependencyDescriptorFactory.addDependencyDescriptor(TEST_CONF,moduleDescriptor,dependency1);
  externalModuleDependencyDescriptorFactory.addDependencyDescriptor(TEST_CONF,moduleDescriptor,dependency2);
  DefaultDependencyDescriptor dependencyDescriptor=(DefaultDependencyDescriptor)moduleDescriptor.getDependencies()[0];
  assertThat(dependencyDescriptor.isForce(),is(false));
  assertThat(dependencyDescriptor.isTransitive(),is(false));
  assertThat(dependencyDescriptor.isChanging(),is(false));
  ExternalModuleDependency dependency3=new DefaultExternalModuleDependency("org.gradle","gradle-core","1.0",TEST_OTHER_DEP_CONF);
  dependency3.setForce(true);
  dependency3.setTransitive(true);
  dependency3.setChanging(true);
  externalModuleDependencyDescriptorFactory.addDependencyDescriptor(TEST_CONF,moduleDescriptor,dependency3);
  dependencyDescriptor=(DefaultDependencyDescriptor)moduleDescriptor.getDependencies()[0];
  assertThat(dependencyDescriptor.isForce(),is(true));
  assertThat(dependencyDescriptor.isTransitive(),is(true));
  assertThat(dependencyDescriptor.isChanging(),is(true));
}
