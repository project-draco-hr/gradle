{
  if (!baseInterface.getConcreteClass().isAssignableFrom(type)) {
    return;
  }
  Class<? extends T> superTypeClassAsBaseType=type.asSubclass(baseInterface.getConcreteClass());
  ModelType<? extends T> superTypeAsBaseType=ModelType.of(superTypeClassAsBaseType);
  TypeRegistration<? extends T> registration=getRegistration(superTypeAsBaseType);
  if (registration != null) {
    visitRegistration(registration);
  }
}
