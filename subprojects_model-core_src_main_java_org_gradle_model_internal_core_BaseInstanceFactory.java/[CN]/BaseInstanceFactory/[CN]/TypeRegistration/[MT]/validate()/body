{
  if (publicType.getConcreteClass().isAnnotationPresent(Managed.class)) {
    getManagedSubtypeImplementationInfo(publicType);
    return;
  }
  if (implementationRegistration == null) {
    throw new IllegalStateException(String.format("Factory registration for '%s' is invalid because no implementation was registered",publicType));
  }
  ModelType<? extends S> implementationType=implementationRegistration.getImplementationType();
  for (  InternalViewRegistration internalViewRegistration : internalViewRegistrations) {
    ModelType<?> internalView=internalViewRegistration.getInternalView();
    ModelType<?> asSubclass=internalView.asSubclass(implementationType);
    if (asSubclass == null) {
      throw new IllegalStateException(String.format("Factory registration for '%s' is invalid because the implementation type '%s' does not extend internal view '%s', " + "implementation type was registered by %s, " + "internal view was registered by %s",publicType,implementationType,internalView,implementationRegistration.getSource(),internalViewRegistration.getSource()));
    }
  }
}
