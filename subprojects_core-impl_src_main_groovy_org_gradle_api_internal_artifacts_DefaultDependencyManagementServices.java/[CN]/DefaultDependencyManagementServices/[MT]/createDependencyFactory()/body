{
  Instantiator instantiator=get(Instantiator.class);
  ProjectDependencyFactory projectDependencyFactory=new ProjectDependencyFactory(get(StartParameter.class).getProjectDependenciesBuildInstruction(),instantiator);
  ProjectDependencyNotationParser projParser=new ProjectDependencyNotationParser(get(StartParameter.class).getProjectDependenciesBuildInstruction(),instantiator);
  NotationParser<? extends Dependency> moduleMapParser=new ModuleDependencyMapNotationParser(instantiator,DefaultExternalModuleDependency.class);
  NotationParser<? extends Dependency> selfResolvingDependencyFactory=new DependencyFilesNotationParser(instantiator);
  Set<NotationParser<? extends Dependency>> notationParsers=WrapUtil.toSet(new ModuleDependencyStringNotationParser(instantiator),moduleMapParser,selfResolvingDependencyFactory,new DependencyClassPathNotationParser(instantiator,get(ClassPathRegistry.class),new IdentityFileResolver()),projParser);
  DependencyNotationParser dependencyNotationParser=new DependencyNotationParser(notationParsers);
  return new DefaultDependencyFactory(dependencyNotationParser,new DefaultClientModuleFactory(instantiator),projectDependencyFactory);
}
