{
  Instantiator instantiator=get(Instantiator.class);
  DefaultProjectDependencyFactory projectDependencyFactory=new DefaultProjectDependencyFactory(get(StartParameter.class).getProjectDependenciesBuildInstruction(),instantiator);
  NotationParser<? extends Dependency> selfResolvingDependencyFactory=new SelfResolvingDependencyFactory(instantiator);
  Set<NotationParser<? extends Dependency>> notationParsers=WrapUtil.toSet(new ModuleDependencyFactory(instantiator),selfResolvingDependencyFactory,new ClassPathDependencyNotationParser(instantiator,get(ClassPathRegistry.class),new IdentityFileResolver()),projectDependencyFactory);
  DependencyNotationParser dependencyNotationParser=new DependencyNotationParser(notationParsers);
  return new DefaultDependencyFactory(dependencyNotationParser,new DefaultClientModuleFactory(instantiator),projectDependencyFactory);
}
