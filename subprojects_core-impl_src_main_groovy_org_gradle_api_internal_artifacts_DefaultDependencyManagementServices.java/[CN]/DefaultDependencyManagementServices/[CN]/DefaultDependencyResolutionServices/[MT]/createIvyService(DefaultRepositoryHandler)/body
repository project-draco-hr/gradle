{
  DependencyDescriptorFactory dependencyDescriptorFactoryDelegate=createDependencyDescriptorFactory(ProjectDependencyDescriptorFactory.RESOLVE_DESCRIPTOR_STRATEGY);
  PublishModuleDescriptorConverter fileModuleDescriptorConverter=new PublishModuleDescriptorConverter(createResolveModuleDescriptorConverter(ProjectDependencyDescriptorFactory.IVY_FILE_DESCRIPTOR_STRATEGY),new DefaultArtifactsToModuleDescriptorConverter(DefaultArtifactsToModuleDescriptorConverter.IVY_FILE_STRATEGY));
  InternalRepository internalRepository=new DefaultInternalRepository(projectFinder,parent.get(ModuleDescriptorConverter.class));
  Factory<Ivy> resolveIvyFactory=new ResolveIvyFactory(parent.get(IvyFactory.class),resolverProvider,parent.get(SettingsConverter.class),internalRepository,clientModuleRegistry);
  return new ErrorHandlingIvyService(new EventBroadcastingIvyService(new ShortcircuitEmptyConfigsIvyService(new DefaultIvyService(resolverProvider,parent.get(SettingsConverter.class),parent.get(PublishModuleDescriptorConverter.class),fileModuleDescriptorConverter,parent.get(IvyFactory.class),new SelfResolvingDependencyResolver(new DefaultIvyDependencyResolver(new DefaultIvyReportConverter(dependencyDescriptorFactoryDelegate),parent.get(PublishModuleDescriptorConverter.class),resolveIvyFactory)),new DefaultIvyDependencyPublisher(new DefaultPublishOptionsFactory())))));
}
