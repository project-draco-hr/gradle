{
  ResolvedToolSearchFailure<T> notAvailableResult=new ResolvedToolSearchFailure<T>(String.format("No tool chains can provide a tool of type %s",toolType.getSimpleName()));
  for (  @SuppressWarnings("rawtypes") ToolChainInternal toolChain : toolChains) {
    @SuppressWarnings("unchecked") ToolProvider provider=toolChain.select(requirement);
    if (provider.isAvailable()) {
      return new DefaultResolvedTool<T>(provider,toolType);
    }
 else {
      notAvailableResult.addResult(provider);
    }
  }
  return notAvailableResult;
}
