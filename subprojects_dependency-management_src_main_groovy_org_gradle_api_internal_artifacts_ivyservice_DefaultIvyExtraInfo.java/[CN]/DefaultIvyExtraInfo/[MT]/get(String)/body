{
  List<Map.Entry<NamespaceId,String>> foundEntries=new ArrayList<Map.Entry<NamespaceId,String>>();
  for (  Map.Entry<NamespaceId,String> entry : extraInfo.entrySet()) {
    if (entry.getKey().getName().equals(name)) {
      foundEntries.add(entry);
    }
  }
  if (foundEntries.size() > 1) {
    String allNamespaces=Joiner.on(", ").join(CollectionUtils.collect(foundEntries,new Transformer<String,Map.Entry<NamespaceId,String>>(){
      public String transform(      Map.Entry<NamespaceId,String> original){
        return original.getKey().getNamespace();
      }
    }
));
    throw new InvalidUserDataException(String.format("Cannot get extra info element named '%s' by name since elements with this name were found from multiple namespaces (%s).  Use get(String namespace, String name) instead.",name,allNamespaces));
  }
  return foundEntries.size() == 0 ? null : foundEntries.get(0).getValue();
}
