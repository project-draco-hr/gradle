{
  assertEquals(expectedBuildFile,startParameter.getBuildFile());
  assertEquals(expectedTaskNames,startParameter.getTaskNames());
  assertEquals(buildProjectDependencies,startParameter.isBuildProjectDependencies());
  if (expectedCurrentDir != null) {
    assertEquals(expectedCurrentDir.getAbsoluteFile(),startParameter.getCurrentDir().getAbsoluteFile());
  }
  assertEquals(expectedProjectDir,startParameter.getProjectDir());
  assertEquals(expectedSearchUpwards,startParameter.isSearchUpwards());
  assertEquals(expectedProjectProperties,startParameter.getProjectProperties());
  assertEquals(expectedSystemProperties,startParameter.getSystemPropertiesArgs());
  assertEquals(expectedGradleUserHome.getAbsoluteFile(),startParameter.getGradleUserHomeDir().getAbsoluteFile());
  assertEquals(expectedLogLevel,startParameter.getLogLevel());
  assertEquals(expectedConsoleOutput,startParameter.getConsoleOutput());
  assertEquals(expectedDryRun,startParameter.isDryRun());
  assertEquals(expectedShowStackTrace,startParameter.getShowStacktrace());
  assertEquals(expectedExcludedTasks,startParameter.getExcludedTaskNames());
  assertEquals(expectedInitScripts,startParameter.getInitScripts());
  assertEquals(expectedProfile,startParameter.isProfile());
  assertEquals(expectedContinue,startParameter.isContinueOnFailure());
  assertEquals(expectedOffline,startParameter.isOffline());
  assertEquals(expectedRecompileScripts,startParameter.isRecompileScripts());
  assertEquals(expectedRerunTasks,startParameter.isRerunTasks());
  assertEquals(expectedRefreshDependencies,startParameter.isRefreshDependencies());
  assertEquals(expectedProjectCacheDir,startParameter.getProjectCacheDir());
  assertEquals(expectedConfigureOnDemand,startParameter.isConfigureOnDemand());
  assertEquals(expectedMaxWorkersCount,startParameter.getMaxWorkerCount());
  assertEquals(expectedContinuous,startParameter.isContinuous());
}
