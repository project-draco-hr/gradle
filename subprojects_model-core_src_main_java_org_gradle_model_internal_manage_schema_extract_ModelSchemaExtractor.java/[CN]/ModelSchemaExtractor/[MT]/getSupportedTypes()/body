{
  return Arrays.asList("interfaces and abstract classes annotated with " + Managed.class.getName(),"JDK value types: " + Joiner.on(", ").join(Iterables.transform(JdkValueTypeStrategy.TYPES,new Function<ModelType<?>,Object>(){
    public Object apply(    ModelType<?> input){
      return input.getRawClass().getSimpleName();
    }
  }
)),"Enum types",ModelMap.class.getName() + " of a managed type",ModelSet.class.getName() + " of a managed type");
}
