{
  if (currentLevel == logLevel) {
    return;
  }
  LoggerContext lc=(LoggerContext)LoggerFactory.getILoggerFactory();
  ch.qos.logback.classic.Logger rootLogger;
  if (currentLevel == null) {
    lc.reset();
    stdout.init(FileDescriptor.out,System.out);
    stderr.init(FileDescriptor.err,System.err);
    Console console=createConsole();
    consoleFormatter=console == null ? null : new ConsoleBackedFormatter(lc,console);
    nonConsoleFormatter=new BasicProgressLoggingAwareFormatter(lc,stdout.getBroadcast(),stderr.getBroadcast());
    errorAppender.setContext(lc);
    infoAppender.setContext(lc);
    rootLogger=lc.getLogger("ROOT");
    rootLogger.addAppender(infoAppender);
    rootLogger.addAppender(errorAppender);
  }
 else {
    rootLogger=lc.getLogger("ROOT");
  }
  currentLevel=logLevel;
  errorAppender.stop();
  infoAppender.stop();
  errorAppender.clearAllFilters();
  infoAppender.clearAllFilters();
  errorAppender.addFilter(createLevelFilter(lc,Level.ERROR,FilterReply.ACCEPT,FilterReply.DENY));
  Level level=Level.INFO;
  setLayouts(logLevel,errorAppender,infoAppender,lc);
  MarkerFilter quietFilter=new MarkerFilter(FilterReply.DENY,Logging.QUIET);
  infoAppender.addFilter(quietFilter);
  if (!(logLevel == LogLevel.QUIET)) {
    quietFilter.setOnMismatch(FilterReply.NEUTRAL);
    if (logLevel == LogLevel.DEBUG) {
      level=Level.DEBUG;
      infoAppender.addFilter(createLevelFilter(lc,Level.INFO,FilterReply.ACCEPT,FilterReply.NEUTRAL));
      infoAppender.addFilter(createLevelFilter(lc,Level.DEBUG,FilterReply.ACCEPT,FilterReply.NEUTRAL));
    }
 else {
      if (logLevel == LogLevel.INFO) {
        level=Level.INFO;
        infoAppender.addFilter(createLevelFilter(lc,Level.INFO,FilterReply.ACCEPT,FilterReply.NEUTRAL));
      }
 else {
        infoAppender.addFilter(new MarkerFilter(Logging.LIFECYCLE,Logging.PROGRESS));
      }
    }
    infoAppender.addFilter(createLevelFilter(lc,Level.WARN,FilterReply.ACCEPT,FilterReply.DENY));
  }
  rootLogger.setLevel(level);
  infoAppender.start();
  errorAppender.start();
}
