{
  names.putIfAbsent(name,new AtomicInteger());
  int count=names.get(name).getAndIncrement();
  T mock;
  if (count == 0) {
    mock=super.mock(typeToMock,name);
  }
 else {
    mock=super.mock(typeToMock,name + count);
  }
  if (mock instanceof ClassLoader) {
    for (    Field field : ClassLoader.class.getDeclaredFields()) {
      if (field.getName().equals("initialized")) {
        field.setAccessible(true);
        try {
          field.set(mock,true);
        }
 catch (        IllegalAccessException e) {
          throw new RuntimeException(e);
        }
        break;
      }
    }
  }
  return mock;
}
