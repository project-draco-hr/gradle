{
  lock.lock();
  int indexOfTaskToExecute=0;
  try {
    while (true) {
      if (cancellationToken.isCancellationRequested()) {
        if (abortExecution()) {
          tasksCancelled=true;
        }
      }
      TaskInfo nextMatching=null;
      boolean allTasksComplete=true;
      for (      TaskInfo taskInfo : executionQueue) {
        allTasksComplete=allTasksComplete && taskInfo.isComplete();
        if (taskInfo.isReady() && taskInfo.allDependenciesComplete() && canRunWithWithCurrentlyExecutedTasks(taskInfo)) {
          nextMatching=taskInfo;
          break;
        }
        ++indexOfTaskToExecute;
      }
      if (allTasksComplete) {
        return null;
      }
      if (nextMatching == null) {
        try {
          condition.await();
        }
 catch (        InterruptedException e) {
          throw new RuntimeException(e);
        }
      }
 else {
        executionQueue.remove(indexOfTaskToExecute);
        if (nextMatching.allDependenciesSuccessful()) {
          nextMatching.startExecution();
          recordTaskStarted(nextMatching);
          return nextMatching;
        }
 else {
          nextMatching.skipExecution();
          condition.signalAll();
        }
      }
    }
  }
  finally {
    lock.unlock();
  }
}
