{
  lock.lock();
  try {
    while (true) {
      if (cancellationToken.isCancellationRequested()) {
        if (abortExecution()) {
          tasksCancelled=true;
        }
      }
      TaskInfo nextMatching=null;
      boolean allTasksComplete=true;
      for (      TaskInfo taskInfo : executionPlan.values()) {
        allTasksComplete=allTasksComplete && taskInfo.isComplete();
        if (taskInfo.isReady() && taskInfo.allDependenciesComplete()) {
          TaskInternal task=taskInfo.getTask();
          String projectPath=task.getProject().getPath();
          if (!projectsWithRunningTasks.contains(projectPath) || (isParallelizable(task) && !projectsWithRunningNonParallelizableTasks.contains(projectPath))) {
            nextMatching=taskInfo;
            break;
          }
        }
      }
      if (allTasksComplete) {
        return null;
      }
      if (nextMatching == null) {
        try {
          condition.await();
        }
 catch (        InterruptedException e) {
          throw new RuntimeException(e);
        }
      }
 else {
        if (nextMatching.allDependenciesSuccessful()) {
          nextMatching.startExecution();
          recordTaskStarted(nextMatching.getTask());
          return nextMatching;
        }
 else {
          nextMatching.skipExecution();
          condition.signalAll();
        }
      }
    }
  }
  finally {
    lock.unlock();
  }
}
