{
  List<String> targetPlatforms=jvmLibrary.getTargetPlatforms();
  List<JavaPlatform> selectedPlatforms=platforms.chooseFromTargets(JavaPlatform.class,targetPlatforms,new DefaultJavaPlatform(JavaVersion.current()),defaultPlatforms);
  for (  JavaPlatform platform : selectedPlatforms) {
    JavaToolChain toolChain=toolChains.getForPlatform(platform);
    BinaryNamingSchemeBuilder componentBuilder=namingSchemeBuilder.withComponentName(jvmLibrary.getName()).withTypeString("jar");
    if (selectedPlatforms.size() > 1) {
      componentBuilder=componentBuilder.withVariantDimension(platform.getName());
    }
    BinaryNamingScheme namingScheme=componentBuilder.build();
    factory.createJarBinaries(jvmLibrary,namingScheme,toolChain,platform);
  }
}
