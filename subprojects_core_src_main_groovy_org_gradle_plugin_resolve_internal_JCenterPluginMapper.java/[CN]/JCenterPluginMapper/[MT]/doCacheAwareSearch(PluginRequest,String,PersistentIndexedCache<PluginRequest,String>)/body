{
  String cached=indexedCache.get(request);
  if (cached != null) {
    return cached;
  }
  Bintray bintrayClient=createBintrayClient();
  List<Pkg> results=bintrayClient.subject(GRADLE_PLUGINS_ORG).repository(GRADLE_PLUGINS_REPO).searchForPackage().byAttributeName(PLUGIN_ID_ATTRIBUTE_NAME).equals(pluginId).search();
  String systemId;
  if (results.isEmpty()) {
    systemId=NOT_FOUND;
  }
 else   if (request.getVersion() == null) {
    throw new InvalidPluginRequestException(request,String.format("No version number supplied for plugin '%s'. A version number must be supplied for plugins resolved from '%s'.",pluginId,getBintrayRepoUrl()));
  }
 else   if (results.size() > 1) {
    throw new InvalidPluginRequestException(request,"Found more than one plugin for plugin id " + pluginId);
  }
 else {
    Pkg pluginPackage=results.get(0);
    List<String> systemIds=pluginPackage.systemIds();
    if (systemIds.isEmpty()) {
      throw new InvalidPluginRequestException(request,"No artifacts in maven layout found for plugin id" + pluginId);
    }
    systemId=systemIds.get(0);
  }
  indexedCache.put(request,systemId);
  return systemId;
}
