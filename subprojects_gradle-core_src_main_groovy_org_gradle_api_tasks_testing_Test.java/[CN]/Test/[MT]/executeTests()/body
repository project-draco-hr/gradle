{
  final File testClassesDir=getTestClassesDir();
  final TestFramework testFramework=getTestFramework();
  testFramework.prepare(getProject(),this);
  final Set<String> includes=getIncludes();
  final Set<String> excludes=getExcludes();
  final TestClassScanner testClassScanner=new TestClassScanner(testClassesDir,includes,excludes,testFramework,scanForTestClasses);
  final Set<String> testClassNames=testClassScanner.getTestClassNames();
  Collection<String> toUseIncludes;
  Collection<String> toUseExcludes;
  if (testClassNames.isEmpty()) {
    toUseIncludes=includes;
    toUseExcludes=excludes;
  }
 else {
    toUseIncludes=testClassNames;
    toUseExcludes=new ArrayList<String>();
  }
  GFileUtils.createDirectoriesWhenNotExistent(getTestResultsDir());
  if (!(toUseIncludes.isEmpty() && toUseExcludes.isEmpty()))   testFramework.execute(getProject(),this,toUseIncludes,toUseExcludes);
 else   logger.debug("skipping test execution, because no tests were found");
  if (testReport) {
    testFramework.report(getProject(),this);
  }
  if (stopAtFailuresOrErrors && GUtil.isTrue(getProject().getAnt().getProject().getProperty(FAILURES_OR_ERRORS_PROPERTY))) {
    throw new GradleException("There were failing tests. See the report at " + getTestReportDir() + ".");
  }
}
