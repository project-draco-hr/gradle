{
  String[] segments=pathToTest.getSegments();
  int nextSegment=0;
  int nextPattern=0;
  boolean seenGreedy=false;
  while (nextSegment < segments.length && nextPattern < steps.size()) {
    String currentSegment=segments[nextSegment];
    nextSegment++;
    PatternStep currentPattern=steps.get(nextPattern);
    nextPattern++;
    if (currentPattern.isGreedy()) {
      seenGreedy=true;
      while (nextPattern < steps.size() && steps.get(nextPattern).isGreedy()) {
        nextPattern++;
      }
      if (nextPattern == steps.size()) {
        return true;
      }
      currentPattern=steps.get(nextPattern);
      nextPattern++;
      while (!currentPattern.matches(currentSegment)) {
        if (nextSegment == segments.length) {
          return partialMatchDirs && !pathToTest.isFile();
        }
        currentSegment=segments[nextSegment];
        nextSegment++;
      }
    }
 else {
      if (!currentPattern.matches(currentSegment)) {
        if (seenGreedy) {
          nextPattern--;
          while (!steps.get(nextPattern).isGreedy()) {
            nextPattern--;
          }
          nextSegment--;
        }
 else {
          return false;
        }
      }
    }
  }
  if (nextSegment == segments.length && nextPattern == steps.size()) {
    return true;
  }
  if (nextPattern == steps.size() - 1 && steps.get(nextPattern).isGreedy()) {
    return true;
  }
  return !pathToTest.isFile() && partialMatchDirs;
}
