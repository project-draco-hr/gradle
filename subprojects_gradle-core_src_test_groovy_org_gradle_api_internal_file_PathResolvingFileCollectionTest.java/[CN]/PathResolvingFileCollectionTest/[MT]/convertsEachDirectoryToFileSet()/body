{
  context.checking(new Expectations(){
{
      one(resolverMock).resolve("dir");
      will(returnValue(testDir));
      allowing(resolverMock).resolve(testDir);
      will(returnValue(testDir));
    }
  }
);
  FileCollection collection=new PathResolvingFileCollection(resolverMock,toList("dir"));
  FileTree fileTree=collection.getAsFileTree();
  assertThat(fileTree,instanceOf(CompositeFileTree.class));
  assertThat(((CompositeFileTree)fileTree).getSourceCollections().iterator().next(),instanceOf(FileSet.class));
}
