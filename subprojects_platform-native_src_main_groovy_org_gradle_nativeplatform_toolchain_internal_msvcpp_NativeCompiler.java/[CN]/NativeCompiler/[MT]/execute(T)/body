{
  boolean windowsPathLimitation=OperatingSystem.current().isWindows();
  MutableCommandLineToolInvocation invocation=baseInvocation.copy();
  invocation.setWorkDirectory(spec.getObjectFileDir());
  if (useCommandFile) {
    invocation.addPostArgsAction(getPostArgsAction(spec));
  }
  for (  File sourceFile : spec.getSourceFiles()) {
    SingleSourceCompileArgTransformer<T> argTransformer=new SingleSourceCompileArgTransformer<T>(sourceFile,objectFileSuffix,new ShortCircuitArgsTransformer<T>(argsTransFormer),windowsPathLimitation,outputFileArgTransformer);
    invocation.setArgs(argTransformer.transform(specTransformer.transform(spec)));
    commandLineTool.execute(invocation);
  }
  return new SimpleWorkResult(!spec.getSourceFiles().isEmpty());
}
