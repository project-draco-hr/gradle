{
  Properties properties=new Properties();
  if (!getPluginClasspath().isEmpty()) {
    List<String> paths=CollectionUtils.collect(getPluginClasspath(),new Transformer<String,File>(){
      @Override public String transform(      File file){
        return file.getAbsolutePath().replaceAll("\\\\","/");
      }
    }
);
    StringBuilder implementationClasspath=new StringBuilder();
    Joiner.on(File.pathSeparator).appendTo(implementationClasspath,paths);
    properties.setProperty(IMPLEMENTATION_CLASSPATH_PROP_KEY,implementationClasspath.toString());
    HashClassPathSnapshotter classPathSnapshotter=new HashClassPathSnapshotter(new DefaultHasher());
    long hash=classPathSnapshotter.snapshot(new DefaultClassPath(getPluginClasspath())).getHash();
    properties.setProperty(IMPLEMENTATION_CLASSPATH_HASH_PROP_KEY,Long.toString(hash));
  }
  File outputFile=new File(getOutputDirectory(),METADATA_FILE_NAME);
  try {
    OutputStream outputStream=new BufferedOutputStream(new FileOutputStream(outputFile));
    GUtil.savePropertiesNoDateComment(properties,outputStream);
  }
 catch (  IOException e) {
    throw new UncheckedIOException(e);
  }
}
