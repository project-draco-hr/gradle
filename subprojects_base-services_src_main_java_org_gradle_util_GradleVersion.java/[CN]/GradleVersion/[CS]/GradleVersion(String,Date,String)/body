{
  this.version=version;
  this.commitId=commitId;
  this.buildTime=buildTime == null ? null : formatBuildTime(buildTime);
  Matcher matcher=VERSION_PATTERN.matcher(version);
  if (!matcher.matches()) {
    throw new IllegalArgumentException(String.format("'%s' is not a valid Gradle version string (examples: '1.0', '1.0-rc-1')",version));
  }
  versionPart=matcher.group(1);
  majorPart=Integer.parseInt(matcher.group(2),10);
  if (matcher.group(4) != null) {
    int stageNumber;
    if (matcher.group(5).equals("milestone")) {
      stageNumber=STAGE_MILESTONE;
    }
 else     if (matcher.group(5).equals("preview")) {
      stageNumber=2;
    }
 else     if (matcher.group(5).equals("rc")) {
      stageNumber=3;
    }
 else {
      stageNumber=1;
    }
    String stageString=matcher.group(6);
    stage=new Stage(stageNumber,stageString);
  }
 else {
    stage=null;
  }
  if ("snapshot".equals(matcher.group(5))) {
    snapshot=0L;
  }
 else   if (matcher.group(8) == null) {
    snapshot=null;
  }
 else   if ("SNAPSHOT".equals(matcher.group(8))) {
    snapshot=0L;
  }
 else {
    try {
      if (matcher.group(9) != null) {
        snapshot=new SimpleDateFormat("yyyyMMddHHmmssZ").parse(matcher.group(8)).getTime();
      }
 else {
        SimpleDateFormat format=new SimpleDateFormat("yyyyMMddHHmmss");
        format.setTimeZone(TimeZone.getTimeZone("UTC"));
        snapshot=format.parse(matcher.group(8)).getTime();
      }
    }
 catch (    ParseException e) {
      throw UncheckedException.throwAsUncheckedException(e);
    }
  }
}
