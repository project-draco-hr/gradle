{
  matcher=new DefaultPatternMatcher(true,true,new String[]{"**","CVS","*"});
  path=new RelativePath(true,"CVS","Repository");
  assertTrue(matcher.isSatisfiedBy(path));
  path=new RelativePath(true,"org","gradle","CVS","Entries");
  assertTrue(matcher.isSatisfiedBy(path));
  path=new RelativePath(true,"org","gradle","CVS","foo","bar","Entries");
  assertFalse(matcher.isSatisfiedBy(path));
  matcher=new DefaultPatternMatcher(true,true,new String[]{"src","main","**"});
  path=new RelativePath(true,"src","main","groovy","org");
  assertTrue(matcher.isSatisfiedBy(path));
  path=new RelativePath(true,"src","test","groovy","org");
  assertFalse(matcher.isSatisfiedBy(path));
  matcher=new DefaultPatternMatcher(true,true,new String[]{"**","test","**"});
  path=new RelativePath(true,"src","main","test");
  assertTrue(matcher.isSatisfiedBy(path));
  path=new RelativePath(true,"src","test","main");
  assertTrue(matcher.isSatisfiedBy(path));
  path=new RelativePath(true,"src","main","fred");
  assertFalse(matcher.isSatisfiedBy(path));
}
