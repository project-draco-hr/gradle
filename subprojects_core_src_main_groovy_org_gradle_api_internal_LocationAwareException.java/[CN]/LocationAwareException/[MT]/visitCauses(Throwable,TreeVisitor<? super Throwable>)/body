{
  if (t instanceof MultiCauseException) {
    MultiCauseException multiCauseException=(MultiCauseException)t;
    List<? extends Throwable> causes=multiCauseException.getCauses();
    if (!causes.isEmpty()) {
      visitor.startChildren();
      for (      Throwable cause : causes) {
        visitor.node(cause);
        if (cause.getClass().getAnnotation(Contextual.class) != null) {
          visitCauses(cause,visitor);
        }
      }
      visitor.endChildren();
    }
    return;
  }
  if (t.getCause() != null) {
    visitor.startChildren();
    Throwable next=findNearestContextualCause(t);
    if (next != null) {
      visitor.node(next);
      visitCauses(next,visitor);
    }
 else {
      visitor.node(t.getCause());
    }
    visitor.endChildren();
  }
}
