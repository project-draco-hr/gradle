{
  Factory<BTreePersistentIndexedCache<K,V>> indexedCacheFactory=new Factory<BTreePersistentIndexedCache<K,V>>(){
    public BTreePersistentIndexedCache<K,V> create(){
      return doCreateCache(cacheFile,keySerializer,valueSerializer);
    }
  }
;
  MultiProcessSafePersistentIndexedCache<K,V> indexedCache=new MultiProcessSafePersistentIndexedCache<K,V>(indexedCacheFactory,fileAccess);
  lock.lock();
  try {
    caches.add(indexedCache);
    if (fileLock != null) {
      indexedCache.onStartWork(operationStack.get().getDescription());
    }
  }
  finally {
    lock.unlock();
  }
  return indexedCache;
}
