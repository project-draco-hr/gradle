{
  final File cacheFile=new File(baseDir,parameters.getCacheName() + ".bin");
  Factory<BTreePersistentIndexedCache<K,V>> indexedCacheFactory=new Factory<BTreePersistentIndexedCache<K,V>>(){
    public BTreePersistentIndexedCache<K,V> create(){
      return doCreateCache(cacheFile,parameters.getKeySerializer(),parameters.getValueSerializer());
    }
  }
;
  MultiProcessSafePersistentIndexedCache<K,V> indexedCache=new DefaultMultiProcessSafePersistentIndexedCache<K,V>(indexedCacheFactory,fileAccess);
  CacheDecorator decorator=parameters.getCacheDecorator();
  indexedCache=decorator == null ? indexedCache : decorator.decorate(cacheFile.getAbsolutePath(),indexedCache);
  lock.lock();
  try {
    caches.add(indexedCache);
    if (fileLock != null) {
      indexedCache.onStartWork(operations.getDescription(),stateAtOpen);
    }
  }
  finally {
    lock.unlock();
  }
  return indexedCache;
}
