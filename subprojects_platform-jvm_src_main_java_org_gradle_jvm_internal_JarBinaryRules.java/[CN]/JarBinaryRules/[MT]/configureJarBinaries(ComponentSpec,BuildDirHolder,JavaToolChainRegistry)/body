{
  final File binariesDir=new File(buildDirHolder.getBuildDir(),"jars");
  final File classesDir=new File(buildDirHolder.getBuildDir(),"classes");
  jvmLibrary.getBinaries().withType(JarBinarySpec.class).beforeEach(new Action<JarBinarySpec>(){
    @Override public void execute(    JarBinarySpec jarBinary){
      JarBinarySpecInternal jarBinaryInternal=(JarBinarySpecInternal)jarBinary;
      ((JarBinarySpecInternal)jarBinary).setBaseName(jvmLibrary.getName());
      File outputDir=new File(classesDir,jarBinary.getName());
      jarBinary.setClassesDir(outputDir);
      jarBinary.setResourcesDir(outputDir);
      jarBinary.setJarFile(new File(binariesDir,String.format("%s/%s.jar",jarBinary.getName(),jarBinaryInternal.getBaseName())));
      jarBinary.setToolChain(toolChains.getForPlatform(jarBinary.getTargetPlatform()));
    }
  }
);
}
