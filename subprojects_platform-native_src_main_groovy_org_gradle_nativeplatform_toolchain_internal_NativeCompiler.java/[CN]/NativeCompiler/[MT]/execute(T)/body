{
  final T transformedSpec=specTransformer.transform(spec);
  final List<String> genericArgs=getArguments(transformedSpec);
  final StoppableExecutor executor=getExecutor();
  for (  File sourceFile : transformedSpec.getSourceFiles()) {
    List<String> perFileArgs=Lists.newArrayList(genericArgs);
    addSourceArgs(perFileArgs,sourceFile);
    addOutputArgs(perFileArgs,getOutputFileDir(sourceFile,transformedSpec.getObjectFileDir()));
    MutableCommandLineToolInvocation perFileInvocation=baseInvocation.copy();
    perFileInvocation.clearPostArgsActions();
    perFileInvocation.setWorkDirectory(transformedSpec.getObjectFileDir());
    perFileInvocation.setArgs(perFileArgs);
    executor.execute(commandLineTool.toRunnableExecution(perFileInvocation));
  }
  executor.stop();
  return new SimpleWorkResult(!transformedSpec.getSourceFiles().isEmpty());
}
