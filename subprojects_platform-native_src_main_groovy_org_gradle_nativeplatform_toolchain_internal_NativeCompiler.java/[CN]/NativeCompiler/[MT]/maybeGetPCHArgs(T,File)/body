{
  if (spec.getPreCompiledHeader() == null) {
    return Lists.newArrayList();
  }
  final SourceIncludes includes=spec.getSourceFileIncludes().get(sourceFile);
  String header=spec.getPreCompiledHeader();
  if (header.startsWith("<")) {
    header=header.substring(1,header.length() - 1);
  }
  List<String> headers=includes.getAllIncludeStrings();
  boolean usePCH=!headers.isEmpty() && header.equals(headers.get(0));
  if (usePCH) {
    return getPCHArgs(spec);
  }
 else {
    if (headers.contains(header)) {
      logger.log(LogLevel.WARN,getCantUsePCHMessage(spec.getPreCompiledHeader(),sourceFile));
    }
    return Lists.newArrayList();
  }
}
