{
  final JvmLanguagePlugin jvmLanguagePlugin=target.getPlugins().apply(JvmLanguagePlugin.class);
  JvmBinaryContainer jvmBinaryContainer=jvmLanguagePlugin.getJvmBinaryContainer();
  jvmBinaryContainer.all(new Action<ClassDirectoryBinary>(){
    public void execute(    final ClassDirectoryBinary binary){
      binary.getSource().withType(JavaSourceSet.class).all(new Action<JavaSourceSet>(){
        public void execute(        JavaSourceSet javaSourceSet){
          JavaCompile compileTask=target.getTasks().add(binary.getTaskName("compile","java"),JavaCompile.class);
          configureCompileTask(compileTask,javaSourceSet,binary);
          binary.getClassesTask().dependsOn(compileTask);
        }
      }
);
    }
  }
);
  ProjectSourceSet projectSourceSet=target.getExtensions().getByType(DefaultProjectSourceSet.class);
  projectSourceSet.all(new Action<FunctionalSourceSet>(){
    public void execute(    final FunctionalSourceSet functionalSourceSet){
      functionalSourceSet.registerFactory(JavaSourceSet.class,new NamedDomainObjectFactory<JavaSourceSet>(){
        public JavaSourceSet create(        String name){
          return instantiator.newInstance(DefaultJavaSourceSet.class,name,instantiator.newInstance(DefaultSourceDirectorySet.class),instantiator.newInstance(DefaultClasspath.class),functionalSourceSet);
        }
      }
);
    }
  }
);
}
