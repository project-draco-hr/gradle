{
  MetaMethod metaMethod=getMetaClass().getMetaMethod(name,arguments);
  if (metaMethod != null) {
    result.result(metaMethod.doMethodInvoke(bean,arguments));
    return;
  }
  if (!implementsMissing) {
    return;
  }
  try {
    try {
      result.result(invokeOpaqueMethod(name,arguments));
    }
 catch (    InvokerInvocationException e) {
      if (e.getCause() instanceof RuntimeException) {
        throw (RuntimeException)e.getCause();
      }
      throw e;
    }
  }
 catch (  MissingMethodException e) {
    if (!e.getMethod().equals(name) || !Arrays.equals(e.getArguments(),arguments)) {
      throw e;
    }
  }
}
