{
  if (!includeProperties) {
    return;
  }
  MetaProperty property=getMetaClass().hasProperty(bean,name);
  if (property == null) {
    try {
      result.result(getOpaqueProperty(name));
    }
 catch (    MissingPropertyException e) {
      if (!name.equals(e.getProperty())) {
        throw e;
      }
    }
    return;
  }
  if (property instanceof MetaBeanProperty && ((MetaBeanProperty)property).getGetter() == null) {
    throw new GroovyRuntimeException(String.format("Cannot get the value of write-only property '%s' on %s.",name,getDisplayName()));
  }
  try {
    result.result(property.getProperty(bean));
  }
 catch (  InvokerInvocationException e) {
    if (e.getCause() instanceof RuntimeException) {
      throw (RuntimeException)e.getCause();
    }
    throw e;
  }
}
