{
  ModuleId parentModuleId=new ModuleId(parentOrganisation,parentModule);
  ModuleRevisionId parentMrid=new ModuleRevisionId(parentModuleId,parentRevision);
  File cacheFile=settings.getResolutionCacheManager().getResolvedIvyFileInCache(ModuleRevisionId.newInstance(parentMrid,Ivy.getWorkingRevision()));
  if (cacheFile.exists() && cacheFile.length() > 0) {
    ModuleDescriptor md;
    try {
      Message.debug("Trying to load included ivy file from cache");
      URL parentUrl=cacheFile.toURI().toURL();
      md=parseOtherIvyFileOnFileSystem(parentUrl.toString());
      return md;
    }
 catch (    IOException e) {
      Message.error(e.getLocalizedMessage());
    }
  }
  DependencyDescriptor dd=new DefaultDependencyDescriptor(parentMrid,true);
  ResolveData data=IvyContext.getContext().getResolveData();
  if (data == null) {
    ResolveEngine engine=IvyContext.getContext().getIvy().getResolveEngine();
    ResolveOptions options=new ResolveOptions();
    options.setDownload(false);
    data=new ResolveData(engine,options);
  }
  DependencyResolver resolver=getSettings().getResolver(parentMrid);
  if (resolver == null) {
    return null;
  }
 else {
    dd=NameSpaceHelper.toSystem(dd,getSettings().getContextNamespace());
    ResolvedModuleRevision otherModule=resolver.getDependency(dd,data);
    if (otherModule == null) {
      throw new ParseException("Unable to find " + parentMrid.toString(),0);
    }
    return otherModule.getDescriptor();
  }
}
