{
  state=State.DEP;
  String org=settings.substitute(attributes.getValue("org"));
  if (org == null) {
    org=getMd().getModuleRevisionId().getOrganisation();
  }
  boolean force=Boolean.valueOf(settings.substitute(attributes.getValue("force"))).booleanValue();
  boolean changing=Boolean.valueOf(settings.substitute(attributes.getValue("changing"))).booleanValue();
  String transitiveValue=settings.substitute(attributes.getValue("transitive"));
  boolean transitive=(transitiveValue == null) ? true : Boolean.valueOf(attributes.getValue("transitive")).booleanValue();
  String name=settings.substitute(attributes.getValue("name"));
  String branch=settings.substitute(attributes.getValue("branch"));
  String branchConstraint=settings.substitute(attributes.getValue("branchConstraint"));
  String rev=settings.substitute(attributes.getValue("rev"));
  String revConstraint=settings.substitute(attributes.getValue("revConstraint"));
  Map extraAttributes=ExtendableItemHelper.getExtraAttributes(settings,attributes,DEPENDENCY_REGULAR_ATTRIBUTES);
  ModuleRevisionId revId=ModuleRevisionId.newInstance(org,name,branch,rev,extraAttributes);
  ModuleRevisionId dynamicId=null;
  if ((revConstraint == null) && (branchConstraint == null)) {
    dynamicId=ModuleRevisionId.newInstance(org,name,branch,rev,extraAttributes,false);
  }
 else {
    if (branchConstraint == null) {
      dynamicId=ModuleRevisionId.newInstance(org,name,null,revConstraint,extraAttributes,false);
    }
 else {
      dynamicId=ModuleRevisionId.newInstance(org,name,branchConstraint,revConstraint,extraAttributes);
    }
  }
  dd=new DefaultDependencyDescriptor(getMd(),revId,dynamicId,force,changing,transitive);
  getMd().addDependency(dd);
  String confs=settings.substitute(attributes.getValue("conf"));
  if (confs != null && confs.length() > 0) {
    parseDepsConfs(confs,dd);
  }
}
