{
  state=State.DEP;
  String org=substitute(attributes.getValue("org"));
  if (org == null) {
    org=getMd().getModuleRevisionId().getOrganisation();
  }
  boolean force=Boolean.valueOf(substitute(attributes.getValue("force")));
  boolean changing=Boolean.valueOf(substitute(attributes.getValue("changing")));
  String transitiveValue=substitute(attributes.getValue("transitive"));
  boolean transitive=(transitiveValue == null) ? true : Boolean.valueOf(transitiveValue);
  String name=substitute(attributes.getValue("name"));
  String branch=substitute(attributes.getValue("branch"));
  String branchConstraint=substitute(attributes.getValue("branchConstraint"));
  String rev=substitute(attributes.getValue("rev"));
  String revConstraint=substitute(attributes.getValue("revConstraint"));
  String[] ignoredAttributeNames=DEPENDENCY_REGULAR_ATTRIBUTES;
  Map extraAttributes=getExtraAttributes(attributes,ignoredAttributeNames);
  ModuleRevisionId revId=createModuleRevisionId(org,name,branch,rev,extraAttributes);
  ModuleRevisionId dynamicId;
  if ((revConstraint == null) && (branchConstraint == null)) {
    dynamicId=createModuleRevisionId(org,name,branch,rev,extraAttributes,false);
  }
 else {
    if (branchConstraint == null) {
      dynamicId=createModuleRevisionId(org,name,null,revConstraint,extraAttributes,false);
    }
 else {
      dynamicId=createModuleRevisionId(org,name,branchConstraint,revConstraint,extraAttributes);
    }
  }
  dd=new DefaultDependencyDescriptor(getMd(),revId,dynamicId,force,changing,transitive);
  getMd().addDependency(dd);
  String confs=substitute(attributes.getValue("conf"));
  if (confs != null && confs.length() > 0) {
    parseDepsConfs(confs,dd);
  }
}
