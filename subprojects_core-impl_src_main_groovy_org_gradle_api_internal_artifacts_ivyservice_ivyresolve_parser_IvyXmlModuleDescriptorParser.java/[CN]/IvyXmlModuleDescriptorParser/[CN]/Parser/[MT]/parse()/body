{
  try {
    URL schemaURL=validate ? getSchemaURL() : null;
    InputStream xmlStream=URLHandlerRegistry.getDefault().openStream(descriptorURL);
    try {
      InputSource inSrc=new InputSource(xmlStream);
      inSrc.setSystemId(descriptorURL.toExternalForm());
      XMLHelper.parse(inSrc,schemaURL,this,null);
    }
  finally {
      try {
        xmlStream.close();
      }
 catch (      IOException e) {
      }
    }
    checkConfigurations();
    replaceConfigurationWildcards();
    getMd().setModuleArtifact(DefaultArtifact.newIvyArtifact(getMd().getResolvedModuleRevisionId(),getMd().getPublicationDate()));
    if (!artifactsDeclared) {
      String[] configurationNames=getMd().getConfigurationsNames();
      for (      String configurationName : configurationNames) {
        getMd().addArtifact(configurationName,new MDArtifact(getMd(),getMd().getModuleRevisionId().getName(),"jar","jar"));
      }
    }
    getMd().check();
  }
 catch (  ParserConfigurationException ex) {
    throw new IllegalStateException(ex.getMessage() + " in " + getResource().getName(),ex);
  }
catch (  Exception ex) {
    checkErrors();
    ParseException pe=new ParseException(ex.getMessage() + " in " + getResource().getName(),0);
    pe.initCause(ex);
    throw pe;
  }
}
