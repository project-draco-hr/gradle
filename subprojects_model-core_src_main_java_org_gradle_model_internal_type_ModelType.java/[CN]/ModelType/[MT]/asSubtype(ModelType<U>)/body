{
  if (isWildcard()) {
    throw new IllegalStateException(this + " is a wildcard type");
  }
  if (modelType.isWildcard()) {
    throw new IllegalArgumentException(modelType + " is a wildcard type");
  }
  if (modelType.getRawClass().isAssignableFrom(getRawClass())) {
    return Cast.uncheckedCast(this);
  }
 else {
    throw new ClassCastException(String.format("'%s' cannot be cast as a subtype of '%s'",this,modelType));
  }
}
