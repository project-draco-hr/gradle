{
  Iterable<TypeToken<? super T>> superTypes=Iterables.filter(typeToken.getTypes(),new Predicate<TypeToken<? super T>>(){
    public boolean apply(    TypeToken<? super T> type){
      return !typeToken.equals(type);
    }
  }
);
  return Iterables.transform(superTypes,new Function<TypeToken<? super T>,ModelType<? super T>>(){
    public ModelType<? super T> apply(    TypeToken<? super T> superType){
      return ModelType.toModelType(superType);
    }
  }
);
}
