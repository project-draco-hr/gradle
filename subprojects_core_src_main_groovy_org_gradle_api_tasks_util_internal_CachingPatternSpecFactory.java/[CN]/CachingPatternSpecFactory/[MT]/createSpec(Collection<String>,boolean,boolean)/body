{
  final SpecKey key=new SpecKey(ImmutableList.copyOf(patterns),include,caseSensitive);
  try {
    return Cast.uncheckedCast(specInstanceCache.get(key,new Callable<Spec<FileTreeElement>>(){
      @Override public Spec<FileTreeElement> call() throws Exception {
        Spec<FileTreeElement> spec=CachingPatternSpecFactory.super.createSpec(patterns,include,caseSensitive);
        return new CachingSpec(key,spec);
      }
    }
));
  }
 catch (  ExecutionException e) {
    throw UncheckedException.throwAsUncheckedException(e);
  }
}
