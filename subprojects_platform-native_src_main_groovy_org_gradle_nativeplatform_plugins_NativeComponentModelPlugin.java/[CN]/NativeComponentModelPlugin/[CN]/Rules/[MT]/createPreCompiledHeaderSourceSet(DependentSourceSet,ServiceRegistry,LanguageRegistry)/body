{
  FileResolver fileResolver=serviceRegistry.get(FileResolver.class);
  Instantiator instantiator=serviceRegistry.get(Instantiator.class);
  for (  LanguageRegistration<?> languageRegistration : languageRegistry) {
    if (languageRegistration.getSourceSetType().isAssignableFrom(targetSourceSet.getClass())) {
      NamedDomainObjectFactory<? extends LanguageSourceSet> sourceSetFactory=languageRegistration.getSourceSetFactory("");
      return sourceSetFactory.create(targetSourceSet.getName().concat("PreCompiledHeader"));
    }
  }
  throw new GradleException("Unable to generate a pre-compiled header source set for type ".concat(targetSourceSet.getClass().getSimpleName()));
}
