{
  Instantiator instantiator=serviceRegistry.get(Instantiator.class);
  NativeDependencyResolver resolver=serviceRegistry.get(NativeDependencyResolver.class);
  Action<NativeBinarySpec> configureBinaryAction=new NativeBinarySpecInitializer(buildDir);
  Action<NativeBinarySpec> setToolsAction=new ToolSettingNativeBinaryInitializer(languageTransforms);
  @SuppressWarnings("unchecked") Action<NativeBinarySpec> initAction=Actions.composite(configureBinaryAction,setToolsAction);
  NativeBinariesFactory factory=new DefaultNativeBinariesFactory(instantiator,initAction,resolver);
  BinaryNamingSchemeBuilder namingSchemeBuilder=new DefaultBinaryNamingSchemeBuilder();
  Action<NativeComponentSpec> createBinariesAction=new NativeComponentSpecInitializer(factory,namingSchemeBuilder,toolChains,platforms,buildTypes,flavors);
  for (  NativeComponentSpec component : nativeComponents) {
    createBinariesAction.execute(component);
    binaries.addAll(component.getBinaries());
  }
}
