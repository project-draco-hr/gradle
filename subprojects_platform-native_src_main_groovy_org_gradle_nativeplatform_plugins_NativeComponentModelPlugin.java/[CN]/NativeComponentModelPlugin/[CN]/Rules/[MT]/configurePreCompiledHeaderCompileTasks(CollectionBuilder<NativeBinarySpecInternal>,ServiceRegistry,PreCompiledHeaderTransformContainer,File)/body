{
  binaries.all(new Action<NativeBinarySpecInternal>(){
    @Override public void execute(    final NativeBinarySpecInternal nativeBinarySpec){
      for (      final LanguageTransform<?,?> transform : pchTransformContainer) {
        nativeBinarySpec.getSource().withType(transform.getSourceSetType(),new Action<LanguageSourceSet>(){
          @Override public void execute(          final LanguageSourceSet languageSourceSet){
            final DependentSourceSet dependentSourceSet=(DependentSourceSet)languageSourceSet;
            if (CollectionUtils.isNotEmpty(dependentSourceSet.getPreCompiledHeaders())) {
              final SourceTransformTaskConfig taskConfig=transform.getTransformTask();
              String pchTaskName=String.format("%s%s%sPreCompiledHeader",taskConfig.getTaskPrefix(),StringUtils.capitalize(nativeBinarySpec.getName()),StringUtils.capitalize(dependentSourceSet.getName()));
              nativeBinarySpec.getTasks().create(pchTaskName,taskConfig.getTaskType(),new Action<DefaultTask>(){
                @Override public void execute(                DefaultTask task){
                  taskConfig.configureTask(task,nativeBinarySpec,dependentSourceSet);
                }
              }
);
            }
          }
        }
);
      }
    }
  }
);
}
