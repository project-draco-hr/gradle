{
  binaries.all(new Action<NativeBinarySpecInternal>(){
    @Override public void execute(    final NativeBinarySpecInternal nativeBinarySpec){
      for (      final PchEnabledLanguageTransform<?> transform : languageTransforms.withType(PchEnabledLanguageTransform.class)) {
        nativeBinarySpec.getSource().withType(transform.getSourceSetType(),new Action<LanguageSourceSet>(){
          @Override public void execute(          final LanguageSourceSet languageSourceSet){
            final DependentSourceSet dependentSourceSet=(DependentSourceSet)languageSourceSet;
            if (dependentSourceSet.getPreCompiledHeader() != null) {
              final SourceTransformTaskConfig pchTransformTaskConfig=transform.getPchTransformTask();
              String pchTaskName=String.format("%s%s%sPreCompiledHeader",pchTransformTaskConfig.getTaskPrefix(),StringUtils.capitalize(nativeBinarySpec.getName()),StringUtils.capitalize(dependentSourceSet.getName()));
              nativeBinarySpec.getTasks().create(pchTaskName,pchTransformTaskConfig.getTaskType(),new Action<DefaultTask>(){
                @Override public void execute(                DefaultTask task){
                  pchTransformTaskConfig.configureTask(task,nativeBinarySpec,dependentSourceSet);
                }
              }
);
            }
          }
        }
);
      }
    }
  }
);
}
