{
  return new TaskStateChanges(){
    public Iterator<TaskStateChange> iterator(){
      if (snapshotAccess.getPrevious() == null) {
        return Collections.<TaskStateChange>singleton(new DescriptiveChange(inputFileType + " file history is not available.")).iterator();
      }
      return new AbstractIterator<TaskStateChange>(){
        final FileCollectionSnapshot.ChangeIterator<String> changeIterator=snapshotAccess.getCurrent().iterateChangesSince(snapshotAccess.getPrevious());
        final ChangeListenerAdapter listenerAdapter=new ChangeListenerAdapter(inputFileType);
        @Override protected TaskStateChange computeNext(){
          if (changeIterator.next(listenerAdapter)) {
            return listenerAdapter.lastChange;
          }
          return endOfData();
        }
      }
;
    }
    public void snapshotAfterTask(){
      snapshotAccess.saveCurrent();
    }
  }
;
}
