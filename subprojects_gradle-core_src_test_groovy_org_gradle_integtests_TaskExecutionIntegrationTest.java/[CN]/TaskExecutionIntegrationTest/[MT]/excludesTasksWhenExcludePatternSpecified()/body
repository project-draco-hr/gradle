{
  testFile("settings.gradle").write("include 'sub'");
  TestFile buildFile=testFile("build.gradle");
  buildFile.writelns("task a","task b(dependsOn: a)","task c(dependsOn: [a, b])","task d(dependsOn: c)","defaultTasks 'd'");
  testFile("sub/build.gradle").writelns("task c","task d(dependsOn: c)");
  usingBuildFile(buildFile).withTasks(":d").withArguments("-x","c").run().assertTasksExecuted(":d");
  usingBuildFile(buildFile).withTasks(":d").withArguments("-x","b").run().assertTasksExecuted(":a",":c",":d");
  usingBuildFile(buildFile).withTasks("d").withArguments("-x","c").run().assertTasksExecuted(":d",":sub:d");
  usingBuildFile(buildFile).withTasks("d").withArguments("-x","sub:c").run().assertTasksExecuted(":a",":b",":c",":d",":sub:d");
  usingBuildFile(buildFile).withTasks("d").withArguments("-x",":sub:c").run().assertTasksExecuted(":a",":b",":c",":d",":sub:d");
  usingBuildFile(buildFile).withTasks("d").withArguments("-x","d").run().assertTasksExecuted();
  usingBuildFile(buildFile).withArguments("-x","b").run().assertTasksExecuted(":a",":c",":d",":sub:c",":sub:d");
  usingBuildFile(buildFile).withTasks("d").withArguments("-x","unknown").runWithFailure().assertThatDescription(startsWith("Task 'unknown' not found in root project"));
}
