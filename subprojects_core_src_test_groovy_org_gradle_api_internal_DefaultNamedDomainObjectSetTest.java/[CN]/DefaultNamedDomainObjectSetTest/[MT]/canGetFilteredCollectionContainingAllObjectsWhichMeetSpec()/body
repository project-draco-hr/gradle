{
  final Bean bean1=new Bean("a");
  Bean bean2=new Bean("b");
  Bean bean3=new Bean("c");
  Spec<Bean> spec=new Spec<Bean>(){
    public boolean isSatisfiedBy(    Bean element){
      return element != bean1;
    }
  }
;
  TestClosure testClosure=new TestClosure(){
    public Object call(    Object param){
      return param != bean1;
    }
  }
;
  container.add(bean1);
  container.add(bean2);
  container.add(bean3);
  assertThat(toList(container.matching(spec)),equalTo(toList(bean2,bean3)));
  assertThat(toList(container.matching(HelperUtil.toClosure(testClosure))),equalTo(toList(bean2,bean3)));
  assertThat(container.matching(spec).findByName("a"),nullValue());
  assertThat(container.matching(spec).findByName("b"),sameInstance(bean2));
}
