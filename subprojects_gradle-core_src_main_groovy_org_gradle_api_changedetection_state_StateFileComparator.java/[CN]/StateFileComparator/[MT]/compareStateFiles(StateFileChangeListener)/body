{
  boolean stateFileChanged=false;
  StateFileReader oldDirectoriesLevelStateReader=null;
  StateFileReader newDirectoriesLevelStateReader=null;
  boolean readNextOldItem=true;
  StateFileItem oldItem=null;
  boolean readNextNewItem=true;
  StateFileItem newItem=null;
  try {
    oldDirectoriesLevelStateReader=stateFileUtil.getStateFileReader(oldStateFile);
    newDirectoriesLevelStateReader=stateFileUtil.getStateFileReader(newStateFile);
    while (readNextNewItem || readNextOldItem) {
      if (readNextOldItem) {
        oldItem=oldDirectoriesLevelStateReader.readStateFileItem();
      }
      if (readNextNewItem) {
        newItem=newDirectoriesLevelStateReader.readStateFileItem();
      }
      if (oldItem == null) {
        if (newItem == null) {
          readNextOldItem=false;
          readNextNewItem=false;
        }
 else {
          stateFileChanged=true;
          stateFileChangeListener.itemCreated(newItem);
          readNextOldItem=false;
          readNextNewItem=true;
        }
      }
 else {
        if (newItem == null) {
          stateFileChanged=true;
          stateFileChangeListener.itemDeleted(oldItem);
          readNextOldItem=true;
          readNextNewItem=false;
        }
 else {
          final String oldItemKey=oldItem.getKey();
          final String newItemKey=newItem.getKey();
          final int keyComparisonResult=oldItemKey.compareTo(newItemKey);
          if (keyComparisonResult == 0) {
            final String oldItemDigest=oldItem.getDigest();
            final String newItemDigest=newItem.getDigest();
            if (!oldItemDigest.equals(newItemDigest)) {
              stateFileChanged=true;
              stateFileChangeListener.itemChanged(oldItem,newItem);
            }
            readNextOldItem=true;
            readNextNewItem=true;
          }
 else           if (keyComparisonResult < 0) {
            stateFileChanged=true;
            stateFileChangeListener.itemDeleted(oldItem);
            readNextOldItem=true;
            readNextNewItem=false;
          }
 else           if (keyComparisonResult > 0) {
            stateFileChanged=true;
            stateFileChangeListener.itemCreated(newItem);
            readNextOldItem=false;
            readNextNewItem=true;
          }
        }
      }
    }
  }
  finally {
    if (oldDirectoriesLevelStateReader != null) {
      oldDirectoriesLevelStateReader.lastStateFileItemRead();
    }
    if (newDirectoriesLevelStateReader != null) {
      newDirectoriesLevelStateReader.lastStateFileItemRead();
    }
  }
  return stateFileChanged;
}
