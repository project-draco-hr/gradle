{
  GradleConnectionBuilder builder=GradleConnector.newGradleConnectionBuilder();
  File gradleHome=new File(args[0]);
  File gradleUserHome=new File(args[1]);
  builder.useInstallation(gradleHome);
  builder.useGradleUserHomeDir(gradleUserHome);
  for (int i=2; i < args.length; i++) {
    File projectDir=new File(args[i]);
    builder.newParticipant(projectDir).useInstallation(gradleHome).create();
  }
  GradleConnection connection=builder.build();
  try {
    Iterable<ModelResult<EclipseProject>> modelResults=connection.getModels(EclipseProject.class);
    for (    ModelResult<EclipseProject> modelResult : modelResults) {
      EclipseProject eclipseProject=modelResult.getModel();
      EclipseProject rootProject=findRootProject(eclipseProject);
      String rootProjectName=rootProject.getGradleProject().getName();
      GradleProject gradleProject=eclipseProject.getGradleProject();
      String projectPath=gradleProject.getPath();
      String projectDir=getProjectDirectory(gradleProject);
      String sourceLanguageLevel=getJavaVersion(eclipseProject);
      System.out.println("Project: " + rootProjectName + ":"+ projectPath);
      System.out.println("Source Language Level: " + sourceLanguageLevel);
      System.out.println("Project Directory: " + projectDir);
    }
  }
  finally {
    connection.close();
  }
}
