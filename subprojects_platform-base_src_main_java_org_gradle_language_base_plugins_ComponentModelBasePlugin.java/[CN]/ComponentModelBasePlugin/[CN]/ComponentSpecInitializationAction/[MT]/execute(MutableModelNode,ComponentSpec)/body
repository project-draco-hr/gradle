{
  ModelType<DomainObjectSet<LanguageSourceSet>> sourceType=new ModelType<DomainObjectSet<LanguageSourceSet>>(){
  }
;
  final String sourceNodeName="source";
  ModelReference<DomainObjectSet<LanguageSourceSet>> sourceReference=ModelReference.of(componentModelNode.getPath().child(sourceNodeName),sourceType);
  String containerCreatorDescriptor=new StandardDescriptorFactory(componentModelNode.getDescriptor()).transform(sourceNodeName);
  final StandardDescriptorFactory itemCreatorDescriptorFactory=new StandardDescriptorFactory(containerCreatorDescriptor);
  final DomainObjectSet<LanguageSourceSet> source=componentSpec.getSource();
  componentModelNode.addLink(ModelCreators.bridgedInstance(sourceReference,source,new BiAction<MutableModelNode,List<ModelView<?>>>(){
    @Override public void execute(    final MutableModelNode sourceModelNode,    List<ModelView<?>> modelViews){
      source.all(new Action<LanguageSourceSet>(){
        @Override public void execute(        LanguageSourceSet languageSourceSet){
          String name=languageSourceSet.getName();
          ModelType<LanguageSourceSet> itemType=ModelType.typeOf(languageSourceSet);
          ModelReference<LanguageSourceSet> itemReference=ModelReference.of(sourceModelNode.getPath().child(name),itemType);
          ModelCreator itemCreator=ModelCreators.bridgedInstance(itemReference,languageSourceSet).descriptor(itemCreatorDescriptorFactory.transform(name)).build();
          sourceModelNode.addLink(itemCreator);
        }
      }
);
    }
  }
).descriptor(containerCreatorDescriptor).build());
}
