{
  for (  LanguageTransform<?,?> language : languageTransforms) {
    for (    final BinarySpecInternal binary : binaries.withType(BinarySpecInternal.class)) {
      if (binary.isLegacyBinary() || !language.applyToBinary(binary)) {
        continue;
      }
      final SourceTransformTaskConfig taskConfig=language.getTransformTask();
      binary.getSource().withType(language.getSourceSetType(),new Action<LanguageSourceSet>(){
        public void execute(        LanguageSourceSet languageSourceSet){
          LanguageSourceSetInternal sourceSet=(LanguageSourceSetInternal)languageSourceSet;
          if (sourceSet.getMayHaveSources()) {
            String taskName=taskConfig.getTaskPrefix() + capitalize(binary.getName()) + capitalize(sourceSet.getFullName());
            Task task=tasks.create(taskName,taskConfig.getTaskType());
            taskConfig.configureTask(task,binary,sourceSet);
            task.dependsOn(sourceSet);
            binary.getTasks().add(task);
          }
        }
      }
);
    }
  }
}
