{
  project.getPluginManager().apply(LanguageBasePlugin.class);
  String descriptor=ComponentModelBasePlugin.class.getName() + ".apply()";
  ModelCreator componentsCreator=CollectionBuilderCreators.specialized("components",ComponentSpec.class,ComponentSpecContainer.class,new Transformer<ComponentSpecContainer,CollectionBuilder<ComponentSpec>>(){
    @Override public ComponentSpecContainer transform(    CollectionBuilder<ComponentSpec> componentSpecs){
      return new DefaultComponentSpecContainer(componentSpecs);
    }
  }
,descriptor,BiActions.doNothing());
  modelRegistry.create(componentsCreator);
  ((MutableModelNode)modelRegistry.node(ModelPath.ROOT)).applyToAllLinksTransitive(ModelActionRole.Defaults,DirectNodeModelAction.of(ModelReference.of(ComponentSpec.class),new SimpleModelRuleDescriptor(descriptor),ComponentSpecInitializer.action()));
}
