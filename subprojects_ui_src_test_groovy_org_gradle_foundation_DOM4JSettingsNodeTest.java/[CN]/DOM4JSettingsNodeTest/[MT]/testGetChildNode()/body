{
  SettingsNode childNode1=rootNode.addChild(SAMPLE_NAME_1);
  SettingsNode childNode2=rootNode.addChild(SAMPLE_NAME_2);
  SettingsNode childNode3=rootNode.addChild(SAMPLE_NAME_3);
  SettingsNode childNode4=rootNode.addChild(SAMPLE_NAME_2);
  assertNotNull(Dom4JUtility.getChild(rootElement,DOM4JSettingsNode.TAG_NAME,DOM4JSettingsNode.NAME_ATTRIBUTE,SAMPLE_NAME_1));
  assertNotNull(Dom4JUtility.getChild(rootElement,DOM4JSettingsNode.TAG_NAME,DOM4JSettingsNode.NAME_ATTRIBUTE,SAMPLE_NAME_2));
  assertNotNull(Dom4JUtility.getChild(rootElement,DOM4JSettingsNode.TAG_NAME,DOM4JSettingsNode.NAME_ATTRIBUTE,SAMPLE_NAME_3));
  assertNotNull(rootNode.getChildNode(SAMPLE_NAME_1));
  assertNotNull(rootNode.getChildNode(SAMPLE_NAME_2));
  assertNotNull(rootNode.getChildNode(SAMPLE_NAME_3));
  SettingsNode foundNode1=rootNode.getChildNode(SAMPLE_NAME_1);
  assertEquals(foundNode1,childNode1);
  SettingsNode foundNode2=rootNode.getChildNode(SAMPLE_NAME_2);
  assertEquals(foundNode2,childNode2);
  SettingsNode foundNode3=rootNode.getChildNode(SAMPLE_NAME_3);
  assertEquals(foundNode3,childNode3);
  SettingsNode foundNode2B=rootNode.getChildNode(SAMPLE_NAME_2);
  assertEquals(foundNode2B,childNode2);
  SettingsNode foundNode4=rootNode.getChildNode("notpresent");
  assertNull(foundNode4);
}
