{
  prepareResolveReport();
  final Dependency dependencyDummy=context.mock(Dependency.class);
  final Set<File> expectedClasspath=toSet(new File(""));
  final String configurationName=configurationStub.getName();
  context.checking(new Expectations(){
{
      allowing(configurationStub).getAllDependencies();
      will(returnValue(WrapUtil.toSet(dependencyDummy)));
      allowing(report2ClasspathStub).getClasspath(resolveReportMock,WrapUtil.toSet(dependencyDummy));
      will(returnValue(expectedClasspath));
    }
  }
);
  ModuleDescriptor moduleDescriptor=createAnonymousModuleDescriptor();
  prepareTestsThatRetrieveDependencies(moduleDescriptor);
  assertSame(expectedClasspath,ivyDependencyResolver.resolve(configurationStub,ivyStub,moduleDescriptor).getFiles(Specs.SATISFIES_ALL));
}
