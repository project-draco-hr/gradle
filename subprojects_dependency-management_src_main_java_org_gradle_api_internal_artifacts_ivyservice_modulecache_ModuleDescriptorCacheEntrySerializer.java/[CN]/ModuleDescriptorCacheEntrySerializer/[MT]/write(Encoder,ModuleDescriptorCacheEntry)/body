{
  encoder.writeByte(value.type);
switch (value.type) {
case ModuleDescriptorCacheEntry.TYPE_MISSING:
    encoder.writeLong(value.createTimestamp);
  break;
case ModuleDescriptorCacheEntry.TYPE_IVY:
encoder.writeBoolean(value.isChanging);
encoder.writeLong(value.createTimestamp);
moduleSourceSerializer.write(encoder,value.moduleSource);
byte[] hash=value.moduleDescriptorHash.toByteArray();
encoder.writeBinary(hash);
break;
case ModuleDescriptorCacheEntry.TYPE_MAVEN:
MavenModuleCacheEntry mavenCacheEntry=(MavenModuleCacheEntry)value;
encoder.writeBoolean(value.isChanging);
encoder.writeNullableString(mavenCacheEntry.packaging);
encoder.writeNullableString(mavenCacheEntry.snapshotTimestamp);
encoder.writeLong(value.createTimestamp);
moduleSourceSerializer.write(encoder,value.moduleSource);
hash=value.moduleDescriptorHash.toByteArray();
encoder.writeBinary(hash);
break;
default :
throw new IllegalArgumentException("Don't know how to serialize meta-data entry: " + value);
}
}
