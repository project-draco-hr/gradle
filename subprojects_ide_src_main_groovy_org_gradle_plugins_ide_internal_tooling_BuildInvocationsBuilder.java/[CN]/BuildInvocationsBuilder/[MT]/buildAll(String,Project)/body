{
  if (!canBuild(modelName)) {
    throw new GradleException("Unknown model name " + modelName);
  }
  List<LaunchableGradleTaskSelector> selectors=Lists.newArrayList();
  Map<String,LaunchableGradleTaskSelector> selectorsByName=Maps.newTreeMap(Ordering.natural());
  Set<String> visibleTasks=Sets.newLinkedHashSet();
  findTasks(project,selectorsByName,visibleTasks);
  for (  String selectorName : selectorsByName.keySet()) {
    LaunchableGradleTaskSelector selector=selectorsByName.get(selectorName);
    selectors.add(selector.setName(selectorName).setTaskName(selectorName).setProjectPath(project.getPath()).setDisplayName(selectorName + " in " + project+ " and subprojects.").setPublic(visibleTasks.contains(selectorName)));
  }
  List<LaunchableGradleTask> projectTasks=tasks(project);
  return new DefaultBuildInvocations().setSelectors(selectors).setTasks(projectTasks);
}
