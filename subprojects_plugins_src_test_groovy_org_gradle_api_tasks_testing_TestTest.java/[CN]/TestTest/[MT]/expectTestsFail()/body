{
  context.checking(new Expectations(){
{
      final TestResult result=context.mock(TestResult.class);
      allowing(result).getResultType();
      will(returnValue(TestResult.ResultType.FAILURE));
      ignoring(result);
      final TestDescriptorInternal testDescriptor=context.mock(TestDescriptorInternal.class);
      allowing(testDescriptor).getName();
      will(returnValue("test"));
      allowing(testDescriptor).getParent();
      will(returnValue(null));
      allowing(testDescriptor).getId();
      will(returnValue(0));
      ignoring(testDescriptor);
      one(testExecuterMock).execute(with(sameInstance(test)),with(notNullValue(TestResultProcessor.class)));
      will(new Action(){
        public void describeTo(        Description description){
          description.appendText("fail tests");
        }
        public Object invoke(        Invocation invocation) throws Throwable {
          return null;
        }
      }
);
    }
  }
);
}
