{
  final ModelType<I> itemModelType=ModelType.of(itemType);
  final ModelType<ModelMap<I>> modelMapType=DefaultModelMap.modelMapTypeOf(itemModelType);
  return ModelCreators.of(ModelReference.of(path,modelMapType),new BiAction<MutableModelNode,List<ModelView<?>>>(){
    @Override public void execute(    MutableModelNode node,    List<ModelView<?>> inputs){
      node.setPrivateData(modelMapType,new DefaultModelMap<I>(itemModelType,descriptor,node,DefaultModelMap.createVia(instantiator)));
    }
  }
).withProjection(new UnmanagedModelProjection<ModelMap<I>>(modelMapType,true,true)).descriptor(descriptor).ephemeral(ephemeral).build();
}
