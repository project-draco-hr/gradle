{
  if (newestFirst.isEmpty()) {
    return Collections.emptyList();
  }
  final CrossVersionPerformanceResults mostRecent=newestFirst.get(0);
  return Lists.transform(getKnownVersions(),new Function<String,ScenarioDefinition>(){
    @Override public ScenarioDefinition apply(    final String input){
      return new ScenarioDefinition(){
        @Override public String getDisplayName(){
          return input;
        }
        @Override public String getTestProject(){
          return mostRecent.getTestProject();
        }
        @Override public List<String> getTasks(){
          return Arrays.asList(mostRecent.getTasks());
        }
        @Override public List<String> getArgs(){
          return Arrays.asList(mostRecent.getArgs());
        }
        @Nullable @Override public List<String> getGradleOpts(){
          return mostRecent.getGradleOpts() == null ? null : Arrays.asList(mostRecent.getGradleOpts());
        }
        @Nullable @Override public Boolean getDaemon(){
          return mostRecent.getDaemon();
        }
      }
;
    }
  }
);
}
