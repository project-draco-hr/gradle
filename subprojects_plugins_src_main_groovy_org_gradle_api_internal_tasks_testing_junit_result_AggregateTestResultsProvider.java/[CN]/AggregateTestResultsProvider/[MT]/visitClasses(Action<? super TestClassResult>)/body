{
  classOutputProviders=new HashMap<Long,TestResultsProvider>();
  idMappings=new HashMap<Long,Long>();
  final Set<String> seenClasses=new HashSet<String>();
  final long[] newIdCounter={1};
  for (  final TestResultsProvider provider : providers) {
    provider.visitClasses(new Action<TestClassResult>(){
      public void execute(      TestClassResult classResult){
        if (!seenClasses.add(classResult.getClassName())) {
          LOGGER.warn("Discarding duplicate results for test class {}.",classResult.getClassName());
          return;
        }
        long newId=newIdCounter[0]++;
        classOutputProviders.put(newId,provider);
        idMappings.put(newId,classResult.getId());
        TestClassResult newIdResult=new OverlayedIdTestClassResult(newId,classResult);
        visitor.execute(newIdResult);
      }
    }
);
  }
}
