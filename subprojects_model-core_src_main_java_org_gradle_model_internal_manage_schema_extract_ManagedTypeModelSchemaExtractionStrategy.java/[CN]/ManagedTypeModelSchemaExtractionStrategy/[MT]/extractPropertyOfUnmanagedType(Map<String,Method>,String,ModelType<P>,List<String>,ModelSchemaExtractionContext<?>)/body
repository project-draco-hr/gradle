{
  Class<?> boxedType=BOXED_REPLACEMENTS.get(propertyType);
  if (boxedType != null) {
    throw invalidMethod(extractionContext,getterName,String.format("%s is not a supported property type, use %s instead",propertyType,boxedType.getName()));
  }
  if (!isSupportedUnmanagedType(propertyType)) {
    String supportedTypes=Joiner.on(", ").join(SUPPORTED_UNMANAGED_TYPES);
    String message=String.format("%s is not a supported property type, only managed and the following unmanaged types are supported: %s",propertyType,supportedTypes);
    throw invalidMethod(extractionContext,getterName,message);
  }
  String propertyNameCapitalized=getterName.substring(3);
  final String propertyName=StringUtils.uncapitalize(propertyNameCapitalized);
  String setterName="set" + propertyNameCapitalized;
  if (!methods.containsKey(setterName)) {
    throw invalidMethod(extractionContext,getterName,"no corresponding setter for getter");
  }
  validateSetter(extractionContext,propertyType,methods.get(setterName));
  handled.add(setterName);
  return new ModelProperty<P>(propertyName,propertyType);
}
