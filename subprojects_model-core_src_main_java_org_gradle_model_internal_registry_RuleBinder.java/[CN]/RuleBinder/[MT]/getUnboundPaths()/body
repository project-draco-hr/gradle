{
  Set<ModelPath> subjectUnboundPath=Collections.emptySet();
  if (subjectReference != null && subjectReference.getPath() != null && subjectBinding == null) {
    subjectUnboundPath=Collections.singleton(subjectReference.getPath());
  }
  return Iterables.concat(subjectUnboundPath,FluentIterable.from(getInputReferences()).filter(new Predicate<ModelReference<?>>(){
    public boolean apply(    final ModelReference<?> reference){
      return reference.getPath() != null && !Iterables.any(getInputBindings(),new Predicate<ModelBinding<?>>(){
        public boolean apply(        @Nullable ModelBinding<?> binding){
          return binding != null && binding.getReference() == reference;
        }
      }
);
    }
  }
).transform(new Function<ModelReference<?>,ModelPath>(){
    public ModelPath apply(    ModelReference<?> input){
      return input.getPath();
    }
  }
));
}
