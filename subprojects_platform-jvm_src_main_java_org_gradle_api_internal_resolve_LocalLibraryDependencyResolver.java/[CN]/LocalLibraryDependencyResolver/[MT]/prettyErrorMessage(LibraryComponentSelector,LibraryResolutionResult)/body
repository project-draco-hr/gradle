{
  boolean hasLibraries=result.hasLibraries();
  List<String> candidateLibraries=formatLibraryNames(result.getCandidateLibraries());
  String projectPath=selector.getProjectPath();
  String libraryName=selector.getLibraryName();
  StringBuilder sb=new StringBuilder("Project '").append(projectPath).append("'");
  if (Strings.isNullOrEmpty(libraryName) || !hasLibraries) {
    if (result.isProjectNotFound()) {
      sb.append(" not found.");
    }
 else     if (!hasLibraries) {
      sb.append(" doesn't define any library.");
    }
 else {
      sb.append(" contains more than one library. Please select one of ");
      Joiner.on(", ").appendTo(sb,candidateLibraries);
    }
  }
 else {
    LibrarySpec notMatchingRequirements=result.getNonMatchingLibrary();
    if (notMatchingRequirements != null) {
      sb.append(" contains a library named '").append(libraryName).append("' but it is not a ").append(JvmLibrarySpec.class.getSimpleName());
    }
 else {
      sb.append(" does not contain library '").append(libraryName).append("'. Did you want to use ");
      if (candidateLibraries.size() == 1) {
        sb.append(candidateLibraries.get(0));
      }
 else {
        sb.append("one of ");
        Joiner.on(", ").appendTo(sb,candidateLibraries);
      }
      sb.append("?");
    }
  }
  return sb.toString();
}
