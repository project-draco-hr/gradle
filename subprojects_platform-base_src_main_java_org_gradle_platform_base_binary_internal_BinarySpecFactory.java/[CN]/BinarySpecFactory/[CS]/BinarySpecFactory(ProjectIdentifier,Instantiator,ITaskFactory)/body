{
  super(BinarySpec.class);
  registerFactory(BaseBinarySpec.class,new ImplementationFactory<BinarySpec,BaseBinarySpec>(){
    @Override public <T extends BaseBinarySpec>T create(    ModelType<? extends BinarySpec> publicType,    ModelType<T> implementationType,    String name,    MutableModelNode binaryNode){
      MutableModelNode componentBinariesNode=binaryNode.getParent();
      MutableModelNode componentNode=componentBinariesNode.getParent();
      return BaseBinarySpec.create(publicType.getConcreteClass(),implementationType.getConcreteClass(),new DefaultComponentSpecIdentifier(projectIdentifier.getPath(),name),binaryNode,componentNode,instantiator,taskFactory);
    }
  }
);
}
