{
  String resourceName="META-INF/services/" + serviceType.getName();
  Enumeration<URL> resources=classLoader.getResources(resourceName);
  Set<String> implementationClassNames=new HashSet<String>();
  List<Class<? extends T>> implementations=new ArrayList<Class<? extends T>>();
  while (resources.hasMoreElements()) {
    URL resource=resources.nextElement();
    String implementationClassName;
    try {
      implementationClassName=extractImplementationClassName(resource);
      if (implementationClassName == null) {
        throw new RuntimeException(String.format("No implementation class for service '%s' specified.",serviceType.getName()));
      }
    }
 catch (    Exception e) {
      throw new ServiceLookupException(String.format("Could not determine implementation class for service '%s' specified in resource '%s'.",serviceType.getName(),resource),e);
    }
    if (!implementationClassNames.add(implementationClassName)) {
      continue;
    }
    try {
      Class<?> implClass=classLoader.loadClass(implementationClassName);
      if (!serviceType.isAssignableFrom(implClass)) {
        throw new RuntimeException(String.format("Implementation class '%s' is not assignable to service class '%s'.",implementationClassName,serviceType.getName()));
      }
      implementations.add(implClass.asSubclass(serviceType));
    }
 catch (    Exception e) {
      throw new ServiceLookupException(String.format("Could not load implementation class '%s' for service '%s' specified in resource '%s'.",implementationClassName,serviceType.getName(),resource),e);
    }
  }
  return implementations;
}
