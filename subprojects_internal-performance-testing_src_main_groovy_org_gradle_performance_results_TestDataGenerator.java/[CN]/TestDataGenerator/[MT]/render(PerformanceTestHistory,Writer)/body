{
  PrintWriter out=new PrintWriter(output);
  List<? extends PerformanceTestExecution> sortedResults=Lists.reverse(testHistory.getExecutions());
  out.println("{");
  out.println("\"executionLabels\": [");
  for (int i=0; i < sortedResults.size(); i++) {
    PerformanceTestExecution results=sortedResults.get(i);
    if (i > 0) {
      out.println(", ");
    }
    out.print("{");
    out.print("\"date\":\"" + format.date(new Date(results.getStartTime())) + "\"");
    out.print(", \"branch\":\"" + results.getVcsBranch() + "\"");
    out.print(", \"commits\":[\"");
    out.print(Joiner.on("\",\"").join(results.getVcsCommits()));
    out.print("\"]");
    out.print("}");
  }
  out.println("],");
  out.print("\"totalTime\":");
  render(testHistory,new Transformer<String,MeasuredOperationList>(){
    public String transform(    MeasuredOperationList original){
      return format.seconds(original.getTotalTime().getAverage());
    }
  }
,out);
  out.println(",");
  out.print("\"configurationTime\":");
  render(testHistory,new Transformer<String,MeasuredOperationList>(){
    public String transform(    MeasuredOperationList original){
      return format.seconds(original.getConfigurationTime().getAverage());
    }
  }
,out);
  out.println(",");
  out.print("\"executionTime\":");
  render(testHistory,new Transformer<String,MeasuredOperationList>(){
    public String transform(    MeasuredOperationList original){
      return format.seconds(original.getExecutionTime().getAverage());
    }
  }
,out);
  out.println(",");
  out.print("\"compileTotalTime\":");
  render(testHistory,new Transformer<String,MeasuredOperationList>(){
    public String transform(    MeasuredOperationList original){
      return format.seconds(original.getCompileTotalTime().getAverage());
    }
  }
,out);
  out.println(",");
  out.print("\"gcTotalTime\":");
  render(testHistory,new Transformer<String,MeasuredOperationList>(){
    public String transform(    MeasuredOperationList original){
      return format.seconds(original.getGcTotalTime().getAverage());
    }
  }
,out);
  out.println(",");
  out.print("\"miscTime\":");
  render(testHistory,new Transformer<String,MeasuredOperationList>(){
    public String transform(    MeasuredOperationList original){
      Amount<Duration> miscTime=original.getTotalTime().getAverage().minus(original.getConfigurationTime().getAverage()).minus(original.getExecutionTime().getAverage());
      return format.seconds(miscTime);
    }
  }
,out);
  out.println(",");
  out.print("\"heapUsage\":");
  render(testHistory,new Transformer<String,MeasuredOperationList>(){
    public String transform(    MeasuredOperationList original){
      return format.megabytes(original.getTotalMemoryUsed().getAverage());
    }
  }
,out);
  out.println("}");
  out.flush();
}
