{
  if (path instanceof File) {
    return path;
  }
  if (path instanceof URL) {
    try {
      path=((URL)path).toURI();
    }
 catch (    URISyntaxException e) {
      throw new UncheckedIOException(e);
    }
  }
  if (path instanceof URI) {
    URI uri=(URI)path;
    if (uri.getScheme().equals("file")) {
      return new File(uri.getPath());
    }
    return uri;
  }
  String str=path.toString();
  if (str.startsWith("file:")) {
    return new File(uriDecode(str.substring(5)));
  }
  for (  File file : File.listRoots()) {
    String rootPath=file.getAbsolutePath();
    String normalisedStr=str;
    if (!fileSystem.isCaseSensitive()) {
      rootPath=rootPath.toLowerCase();
      normalisedStr=normalisedStr.toLowerCase();
    }
    if (normalisedStr.startsWith(rootPath) || normalisedStr.startsWith(rootPath.replace(File.separatorChar,'/'))) {
      return new File(str);
    }
  }
  if (URI_SCHEME.matcher(str).matches()) {
    try {
      return new URI(str);
    }
 catch (    URISyntaxException e) {
      throw new UncheckedIOException(e);
    }
  }
  return new File(str);
}
