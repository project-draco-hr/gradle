{
  final List<ModelReference<?>> references=this.ruleDefinition.getReferences().subList(1,this.ruleDefinition.getReferences().size());
  final List<ModelReference<?>> filteredReferences=CollectionUtils.filter(references,new Spec<ModelReference<?>>(){
    public boolean isSatisfiedBy(    ModelReference<?> element){
      if (element.getType().equals(ModelType.of(baseType))) {
        baseTypeParameterIndex=references.indexOf(element) + 1;
        return false;
      }
      return true;
    }
  }
);
  ImmutableList.Builder<ModelReference<?>> allInputs=ImmutableList.builder();
  allInputs.addAll(modelReferences);
  allInputs.addAll(filteredReferences);
  return allInputs.build();
}
