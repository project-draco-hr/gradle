{
  boolean changed=false;
  if (processed.containsKey(file)) {
    return processed.get(file);
  }
  if (!file.exists()) {
    return true;
  }
  processed.put(file,false);
  FileState state=findState(file);
  if (state == null) {
    state=new FileState();
  }
  byte[] currentHash=snapshotter.snapshot(file).getHash();
  if (hasChanged(state,currentHash)) {
    changed=true;
    state.setHash(currentHash);
    state.setDependencies(dependencyParser.parseDependencies(file));
    saveState(file,state);
  }
  for (  SourceDependency dep : state.getDependencies()) {
    if (dep.isUnknown()) {
      LOGGER.info(String.format("Cannot determine changed state of included '%s' in source file '%s'. Assuming changed.",dep.getInclude(),file.getName()));
      changed=true;
    }
 else {
      boolean depChanged=checkChangedAndUpdateState(dep.getFile());
      changed=changed || depChanged;
    }
  }
  processed.put(file,changed);
  return changed;
}
