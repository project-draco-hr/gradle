{
  ImmutableSortedMap.Builder<String,ManagedProperty<?>> managedPropertiesBuilder=ImmutableSortedMap.naturalOrder();
  for (  Map.Entry<String,Multimap<PropertyAccessorType,StructMethodBinding>> propertyEntry : propertyBindings.entrySet()) {
    String propertyName=propertyEntry.getKey();
    Multimap<PropertyAccessorType,StructMethodBinding> accessorBindings=propertyEntry.getValue();
    if (isManagedProperty(extractionContext,propertyName,accessorBindings)) {
      boolean foundGetter=accessorBindings.containsKey(GET_GETTER) || accessorBindings.containsKey(IS_GETTER);
      boolean foundSetter=accessorBindings.containsKey(SETTER);
      if (foundSetter && !foundGetter) {
        extractionContext.add(propertyName,"it must both have an abstract getter and a setter");
        continue;
      }
      ModelType<?> propertyType=determineManagedPropertyType(extractionContext,propertyName,accessorBindings);
      ModelSchema<?> propertySchema=schemaStore.getSchema(propertyType);
      managedPropertiesBuilder.put(propertyName,createManagedProperty(extractionContext,propertyName,propertySchema,accessorBindings));
    }
  }
  return managedPropertiesBuilder.build();
}
