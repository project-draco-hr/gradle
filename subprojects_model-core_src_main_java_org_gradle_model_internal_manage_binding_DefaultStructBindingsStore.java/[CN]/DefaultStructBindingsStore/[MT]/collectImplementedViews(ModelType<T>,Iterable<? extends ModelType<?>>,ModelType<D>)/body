{
  final Set<ModelType<?>> viewsToImplement=Sets.newLinkedHashSet();
  viewsToImplement.add(publicType);
  Iterables.addAll(viewsToImplement,internalViewTypes);
  if (delegateType != null) {
    walkTypeHierarchy(delegateType.getConcreteClass(),new TypeVisitor<D>(){
      @Override public void visitType(      Class<? super D> type){
        if (type.isInterface()) {
          viewsToImplement.add(ModelType.of(type));
        }
      }
    }
);
  }
  return ModelTypes.collectHierarchy(viewsToImplement);
}
