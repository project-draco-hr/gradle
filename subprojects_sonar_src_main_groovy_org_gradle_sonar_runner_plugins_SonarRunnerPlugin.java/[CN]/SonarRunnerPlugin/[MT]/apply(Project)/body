{
  SingleMessageLogger.nagUserOfReplacedPlugin("sonar-runner","org.sonarqube");
  targetProject=project;
  final Map<Project,ActionBroadcast<SonarProperties>> actionBroadcastMap=Maps.newHashMap();
  SonarRunner sonarRunnerTask=createTask(project,actionBroadcastMap);
  ActionBroadcast<SonarProperties> actionBroadcast=addBroadcaster(actionBroadcastMap,project);
  project.subprojects(new Action<Project>(){
    public void execute(    Project project){
      ActionBroadcast<SonarProperties> actionBroadcast=addBroadcaster(actionBroadcastMap,project);
      project.getExtensions().create(SonarRunnerExtension.SONAR_RUNNER_EXTENSION_NAME,SonarRunnerExtension.class,actionBroadcast);
    }
  }
);
  SonarRunnerRootExtension rootExtension=project.getExtensions().create(SonarRunnerExtension.SONAR_RUNNER_EXTENSION_NAME,SonarRunnerRootExtension.class,actionBroadcast);
  addConfiguration(project,rootExtension);
  rootExtension.setForkOptions(sonarRunnerTask.getForkOptions());
}
