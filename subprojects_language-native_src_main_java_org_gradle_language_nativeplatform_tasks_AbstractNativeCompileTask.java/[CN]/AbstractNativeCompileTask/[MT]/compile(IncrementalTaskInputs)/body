{
  BuildOperationLogger operationLogger=getOperationLoggerFactory().newOperationLogger(getName(),getTemporaryDir());
  NativeCompileSpec spec=createCompileSpec();
  spec.setTargetPlatform(targetPlatform);
  spec.setTempDir(getTemporaryDir());
  spec.setObjectFileDir(getObjectFileDir());
  spec.include(getIncludes());
  spec.source(getSource());
  spec.setMacros(getMacros());
  spec.args(getCompilerArgs());
  spec.setPositionIndependentCode(isPositionIndependentCode());
  spec.setIncrementalCompile(inputs.isIncremental());
  spec.setOperationLogger(operationLogger);
  if (!preCompiledHeaderInclude.isEmpty()) {
    File pchDir=PCHObjectDirectoryGeneratorUtil.generatePCHObjectDirectory(spec.getTempDir(),getPrefixHeaderFile(),preCompiledHeaderInclude.getSingleFile());
    spec.setPrefixHeaderFile(new File(pchDir,prefixHeaderFile.getName()));
    spec.setPreCompiledHeaderObjectFile(new File(pchDir,preCompiledHeaderInclude.getSingleFile().getName()));
    spec.setPreCompiledHeader(getPreCompiledHeader());
  }
  PlatformToolProvider platformToolProvider=toolChain.select(targetPlatform);
  setDidWork(doCompile(spec,platformToolProvider).getDidWork());
}
