{
  List<ModelType<?>> typeVariables=type.getTypeVariables();
  if (typeVariables.isEmpty()) {
    throw new InvalidManagedModelElementTypeException(type,String.format("type parameter of %s has to be specified",ManagedSet.class.getName()),context);
  }
  if (type.isHasWildcardTypeVariables()) {
    throw new InvalidManagedModelElementTypeException(type,String.format("type parameter of %s cannot be a wildcard",ManagedSet.class.getName()),context);
  }
  if (MANAGED_SET_MODEL_TYPE.isAssignableFrom(typeVariables.get(0))) {
    throw new InvalidManagedModelElementTypeException(type,String.format("%1$s cannot be used as type parameter of %1$s",ManagedSet.class.getName()),context);
  }
  ModelSchema<R> schema=createSchema(type,cache);
  return new ModelSchemaExtractionResult<R>(schema,ImmutableList.of(new ManagedSetElementTypeExtractionContext(type,context)));
}
