{
  target.getPlugins().apply(LanguageBasePlugin.class);
  BinaryContainer binaryContainer=target.getExtensions().getByType(BinaryContainer.class);
  binaryContainer.registerFactory(ClassDirectoryBinarySpec.class,new NamedDomainObjectFactory<ClassDirectoryBinarySpec>(){
    public ClassDirectoryBinarySpec create(    String name){
      return instantiator.newInstance(DefaultClassDirectoryBinarySpec.class,name,toolChain);
    }
  }
);
  binaryContainer.withType(ClassDirectoryBinarySpecInternal.class).all(new Action<ClassDirectoryBinarySpecInternal>(){
    public void execute(    ClassDirectoryBinarySpecInternal binary){
      createBinaryLifecycleTask(binary,target);
      createProcessResourcesTaskForBinary(binary,target);
      createCompileJavaTaskForBinary(binary,target);
    }
  }
);
}
