{
  final LoggingSystem.Snapshot snapshot=context.mock(LoggingSystem.Snapshot.class);
  context.checking(new Expectations(){
{
      ignoring(stdOutLoggingSystem);
      ignoring(stdErrLoggingSystem);
      ignoring(javaUtilLoggingSystem);
      one(loggingSystem).snapshot();
      will(returnValue(snapshot));
    }
  }
);
  loggingManager.start();
  context.checking(new Expectations(){
{
      ignoring(stdOutLoggingSystem);
      one(loggingSystem).on(LogLevel.LIFECYCLE,LogLevel.LIFECYCLE);
      will(returnValue(context.mock(LoggingSystem.Snapshot.class)));
    }
  }
);
  loggingManager.setLevel(LogLevel.LIFECYCLE);
  context.checking(new Expectations(){
{
      one(loggingSystem).restore(snapshot);
    }
  }
);
  loggingManager.stop();
}
