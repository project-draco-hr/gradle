{
  lock.lock();
  try {
    final UUID id=idGenerator.generateId();
    Protocol<Message> workerProtocol=new WorkerProtocol(dispatch);
    Protocol<Message> receiveProtocol=new ReceiveProtocol(id,nodeName,channel);
    ProtocolStack<Message> workerStack=new ProtocolStack<Message>(incomingExecutor,failureHandler,failureHandler,workerProtocol);
    workers.add(workerStack);
    ProtocolStack<Message> stack=new ProtocolStack<Message>(incomingExecutor,failureHandler,failureHandler,new BufferingProtocol(200),receiveProtocol);
    handlers.add(stack);
    workerStack.getBottom().dispatchTo(stack.getTop());
    stack.getTop().dispatchTo(workerStack.getBottom());
    AsyncConnection<Message> incomingEndpoint=router.createLocalConnection();
    stack.getBottom().dispatchTo(incomingEndpoint);
    incomingEndpoint.dispatchTo(stack.getBottom());
  }
  finally {
    lock.unlock();
  }
}
