{
  if (resolver != null && componentSpec instanceof VariantComponentSpec) {
    VariantComponentSpec variantComponentSpec=(VariantComponentSpec)componentSpec;
    LinkedHashSet<DependentComponentsRenderableDependency> children=Sets.newLinkedHashSet();
    for (    BinarySpecInternal binarySpec : variantComponentSpec.getBinaries().withType(BinarySpecInternal.class)) {
      DependentBinariesResolutionResult resolvedBinary=resolver.resolve(binarySpec);
      children.add(DependentComponentsRenderableDependency.of(resolvedBinary.getRoot()));
    }
    return DependentComponentsRenderableDependency.of(componentSpec,internalProtocol,children);
  }
 else {
    return DependentComponentsRenderableDependency.of(componentSpec,internalProtocol);
  }
}
