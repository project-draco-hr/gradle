{
  Set<IDependencyImplementationFactory> dependencyImpls=WrapUtil.toSet(new ModuleDependencyFactory(),new ProjectDependencyFactory());
  File buildResolverDir=new File(settingsFinder.getSettingsDir(),Project.TMP_DIR_NAME + "/" + DependencyManager.BUILD_RESOLVER_NAME);
  if (cacheUsage != CacheUsage.ON) {
    GradleUtil.deleteDir(buildResolverDir);
  }
  DefaultConfigurationContainer configurationContainer=new DefaultConfigurationContainer();
  DefaultBuildResolverHandler buildResolverHandler=new DefaultBuildResolverHandler(buildResolverDir,new LocalReposCacheHandler());
  DefaultIvyHandler ivyHandler=new DefaultIvyHandler(new DefaultSettingsConverter(),new DefaultModuleDescriptorConverter(new DefaultModuleDescriptorFactory(),new DefaultConfigurationsToModuleDescriptorConverter(),new DefaultDependenciesToModuleDescriptorConverter(),new DefaultArtifactsToModuleDescriptorConverter()),new DefaultIvyFactory(),buildResolverHandler,new DefaultIvyDependencyResolver(new DefaultResolveOptionsFactory(),new Report2Classpath()),new DefaultIvyDependencyPublisher(new DefaultPublishOptionsFactory()));
  DefaultResolverFactory resolverFactory=new DefaultResolverFactory(new File(project.getBuildDir(),DependencyManager.TMP_CACHE_DIR_NAME));
  DefaultDependencyManager dependencyManager=new DefaultDependencyManager(project,new DefaultDependencyContainer(project,configurationContainer,new DependencyFactory(dependencyImpls),new DefaultExcludeRuleContainer(),new HashMap<String,ModuleDescriptor>()),new DefaultArtifactContainer(configurationContainer),configurationContainer,new DefaultConfigurationResolverFactory(ivyHandler,gradleUserHomeDir),new ResolverContainer(resolverFactory),resolverFactory,buildResolverHandler,ivyHandler);
  return dependencyManager;
}
