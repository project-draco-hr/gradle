{
  if (dependencyGraphListener != null) {
    DependencyGraphNode id=new DependencyGraphNode(resolvedConfiguration.configurationName,toId(resolvedConfiguration));
    List<DependencyEdge> out=Lists.newLinkedList(resolvedConfiguration.outgoingEdges);
    List<DependencyModule> to=Lists.transform(out,new Function<DependencyEdge,DependencyModule>(){
      public DependencyModule apply(      DependencyEdge input){
        List<String> targetConfigurations=Lists.transform(Lists.newLinkedList(input.targetConfigurations),new Function<ConfigurationNode,String>(){
          public String apply(          ConfigurationNode input){
            return input.configurationName;
          }
        }
);
        return new DependencyModule(new DefaultModuleVersionIdentifier(input.dependencyDescriptor.getDependencyRevisionId().getOrganisation(),input.dependencyDescriptor.getDependencyRevisionId().getName(),input.dependencyDescriptor.getDependencyRevisionId().getRevision()),toId(input.targetModuleRevision),new LinkedHashSet<String>(targetConfigurations));
      }
    }
);
    dependencyGraphListener.resolvedDependency(root,id,to);
  }
}
