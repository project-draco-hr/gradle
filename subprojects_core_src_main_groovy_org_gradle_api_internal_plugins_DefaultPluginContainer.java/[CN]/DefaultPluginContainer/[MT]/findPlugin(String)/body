{
  try {
    PotentialPlugin potentialPlugin=pluginRegistry.lookup(id);
    Class<? extends Plugin<?>> pluginClass=potentialPlugin.asImperativeClass();
    if (pluginClass == null) {
      throw new IllegalArgumentException("Plugin implementation '" + potentialPlugin.asClass().getName() + "' does not implement the Plugin interface. This plugin cannot be applied directly via the PluginContainer.");
    }
 else {
      return findPlugin(potentialPlugin.asImperativeClass());
    }
  }
 catch (  UnknownPluginException e) {
    return null;
  }
}
