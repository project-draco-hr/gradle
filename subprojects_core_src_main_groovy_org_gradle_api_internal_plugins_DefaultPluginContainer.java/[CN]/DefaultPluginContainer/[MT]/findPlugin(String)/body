{
  PotentialPluginWithId potentialPlugin=pluginRegistry.lookup(id);
  if (potentialPlugin == null) {
    return null;
  }
  Class<? extends Plugin<?>> pluginClass=potentialPlugin.asImperativeClass();
  if (pluginClass == null) {
    throw new IllegalArgumentException("Plugin implementation '" + potentialPlugin.asClass().getName() + "' does not implement the Plugin interface. This plugin cannot be applied directly via the PluginContainer.");
  }
 else {
    return findPlugin(potentialPlugin.asImperativeClass());
  }
}
