{
  logger.debug("Starting to execute Task: {}",path);
  if (!isSkipped()) {
    logger.info(Logging.LIFECYCLE,"Executing Task: {}",path);
    StandardOutputCapture finalCapture=standardOutputCapture;
    finalCapture.start();
    for (    TaskAction action : actions) {
      logger.debug("Executing Action:");
      try {
        doExecute(action);
      }
 catch (      StopExecutionException e) {
        logger.info("Execution stopped by some action with message: {}",e.getMessage());
        break;
      }
catch (      StopActionException e) {
        logger.debug("Action stopped by some action with message: {}",e.getMessage());
        continue;
      }
catch (      Throwable t) {
        finalCapture.stop();
        throw new GradleScriptException(String.format("Execution failed for task %s.",getPath()),t,project.getBuildScriptSource());
      }
    }
    finalCapture.stop();
  }
  executed=true;
  logger.debug("Finished executing Task: {}",path);
}
