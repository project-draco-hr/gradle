{
  executing=true;
  logger.debug("Starting to execute Task: {}",path);
  if (!isSkipped()) {
    logger.info(Logging.LIFECYCLE,"{}",path);
    standardOutputCapture.start();
    for (    TaskAction action : actions) {
      logger.debug("Executing Action:");
      try {
        doExecute(action);
      }
 catch (      StopExecutionException e) {
        logger.info("Execution stopped by some action with message: {}",e.getMessage());
        break;
      }
catch (      StopActionException e) {
        logger.debug("Action stopped by some action with message: {}",e.getMessage());
        continue;
      }
catch (      Throwable t) {
        executing=false;
        standardOutputCapture.stop();
        throw new GradleScriptException(String.format("Execution failed for %s.",this),t,project.getBuildScriptSource());
      }
    }
    standardOutputCapture.stop();
  }
  executing=false;
  executed=true;
  logger.debug("Finished executing Task: {}",path);
}
