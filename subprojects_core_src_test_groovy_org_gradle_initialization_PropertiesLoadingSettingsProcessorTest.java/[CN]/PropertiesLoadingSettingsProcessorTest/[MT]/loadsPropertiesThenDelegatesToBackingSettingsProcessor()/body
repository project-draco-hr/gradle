{
  final SettingsProcessor delegate=context.mock(SettingsProcessor.class);
  final URLClassLoader urlClassLoader=new URLClassLoader(new URL[0]);
  final IGradlePropertiesLoader propertiesLoader=context.mock(IGradlePropertiesLoader.class);
  final StartParameter startParameter=new StartParameter();
  final SettingsInternal settings=context.mock(SettingsInternal.class);
  final File settingsDir=new File("root");
  final ScriptSource settingsScriptSource=context.mock(ScriptSource.class);
  final GradleInternal gradle=context.mock(GradleInternal.class);
  final SettingsLocation settingsLocation=new SettingsLocation(settingsDir,settingsScriptSource);
  PropertiesLoadingSettingsProcessor processor=new PropertiesLoadingSettingsProcessor(delegate);
  context.checking(new Expectations(){
{
      one(propertiesLoader).loadProperties(settingsDir,startParameter);
      one(delegate).process(gradle,settingsLocation,urlClassLoader,startParameter,propertiesLoader);
      will(returnValue(settings));
    }
  }
);
  assertThat(processor.process(gradle,settingsLocation,urlClassLoader,startParameter,propertiesLoader),sameInstance(settings));
}
