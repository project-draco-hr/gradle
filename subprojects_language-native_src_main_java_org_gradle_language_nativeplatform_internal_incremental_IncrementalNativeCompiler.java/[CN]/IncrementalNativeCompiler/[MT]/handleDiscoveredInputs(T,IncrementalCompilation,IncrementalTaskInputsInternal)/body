{
  for (  File includeFile : compilation.getIncludeCandidates()) {
    taskInputs.newInput(includeFile);
  }
  if (sourceFilesUseMacroIncludes(spec.getSourceFiles(),compilation.getFinalState())) {
    logger.info("The path to some #include files could not be determined.  Falling back to slow path which includes all files in the include search path as inputs for {}.",task.getName());
    for (    final File includeRoot : spec.getIncludeRoots()) {
      logger.info("adding files in {} to discovered inputs for {}",includeRoot,task.getName());
      new DirectoryFileTree(includeRoot).visit(new EmptyFileVisitor(){
        @Override public void visitFile(        FileVisitDetails fileDetails){
          taskInputs.newInput(fileDetails.getFile());
        }
      }
);
    }
  }
}
