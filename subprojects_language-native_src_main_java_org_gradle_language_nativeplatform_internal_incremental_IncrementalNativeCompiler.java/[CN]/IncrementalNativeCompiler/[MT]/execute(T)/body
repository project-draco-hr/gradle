{
  IncrementalCompilation compilation=cacheAccess.useCache("process source files",new Factory<IncrementalCompilation>(){
    public IncrementalCompilation create(){
      DefaultSourceIncludesParser sourceIncludesParser=new DefaultSourceIncludesParser(sourceParser,importsAreIncludes);
      PersistentStateCache<CompilationState> compileStateCache=compilationStateCacheFactory.create(task.getPath());
      IncrementalCompileProcessor processor=createProcessor(compileStateCache,sourceIncludesParser,spec.getIncludeRoots());
      IncrementalCompilation incrementalCompilation=processor.processSourceFiles(spec.getSourceFiles());
      spec.setSourceFileIncludes(mapIncludes(spec.getSourceFiles(),compileStateCache.get()));
      return incrementalCompilation;
    }
  }
);
  if (spec.isIncrementalCompile()) {
    return doIncrementalCompile(compilation,spec);
  }
  return doCleanIncrementalCompile(spec);
}
