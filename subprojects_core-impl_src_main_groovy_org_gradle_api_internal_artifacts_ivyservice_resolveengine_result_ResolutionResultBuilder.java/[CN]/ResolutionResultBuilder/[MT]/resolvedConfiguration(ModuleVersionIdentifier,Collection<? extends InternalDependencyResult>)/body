{
  for (  InternalDependencyResult d : dependencies) {
    DefaultResolvedModuleVersionResult from=modules.get(id);
    if (from == null) {
      throw new IllegalStateException("Something went wrong with building the dependency graph. Module [" + id + "] should have been visited.");
    }
    DefaultResolvedModuleVersionResult selected=createOrGet(d);
    DependencyResult dependency;
    if (d.getFailure() != null) {
      dependency=dependencyResultFactory.createUnresolvedDependency(d.getRequested(),from,selected,d.getFailure());
    }
 else {
      dependency=dependencyResultFactory.createResolvedDependency(d.getRequested(),from,selected);
    }
    from.addDependency(dependency);
    if (selected != null) {
      selected.addDependent(dependency);
    }
  }
}
