{
  for (  InternalDependencyResult d : dependencies) {
    DefaultResolvedModuleVersionResult from=modules.get(id);
    if (from == null) {
      throw new IllegalStateException("Something went wrong with building the dependency graph. Module [" + id + "] should have been visited.");
    }
    if (d.getFailure() != null) {
      from.addDependency(dependencyResultFactory.createUnresolvedDependency(d.getRequested(),from,d.getFailure()));
    }
 else {
      DefaultResolvedModuleVersionResult selected=createOrGet(d.getSelected().getSelectedId(),d.getSelected().getSelectionReason());
      DependencyResult dependency=dependencyResultFactory.createResolvedDependency(d.getRequested(),from,selected);
      from.addDependency(dependency);
      selected.addDependent((ResolvedDependencyResult)dependency);
    }
  }
}
