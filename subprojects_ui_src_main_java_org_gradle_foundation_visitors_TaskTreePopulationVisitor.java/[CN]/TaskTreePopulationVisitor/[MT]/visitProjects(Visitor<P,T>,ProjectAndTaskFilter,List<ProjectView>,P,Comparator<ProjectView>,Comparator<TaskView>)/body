{
  List<P> projectObjects=new ArrayList<P>();
  sourceProjects=CollectionUtils.sort(sourceProjects,projectSorter);
  Iterator<ProjectView> iterator=sourceProjects.iterator();
  int index=0;
  while (iterator.hasNext()) {
    ProjectView project=iterator.next();
    if (filter.doesAllowProject(project)) {
      P userProjectObject=visitor.visitProject(project,index,parentProjectObject);
      projectObjects.add(userProjectObject);
      List<P> subProjectObjects=visitProjects(visitor,filter,project.getSubProjects(),userProjectObject,projectSorter,taskSorter);
      List<T> taskObjects=visitTasks(visitor,filter,project,subProjectObjects.size(),userProjectObject,taskSorter);
      visitor.completedVisitingProject(userProjectObject,subProjectObjects,taskObjects);
    }
    index++;
  }
  return projectObjects;
}
