{
  final Set<File> classpath=new LinkedHashSet<File>();
  classpath.addAll(sourceSet.getCompileClasspath().getFiles().getFiles());
  DefaultJavaSourceSetResolveContext resolveContext=createResolveContext();
  final List<Throwable> notFound=new LinkedList<Throwable>();
  resolve(resolveContext,new Action<ResolverResults>(){
    @Override public void execute(    ResolverResults resolverResults){
      ResolvedArtifactResults resolve=resolverResults.getArtifactsBuilder().resolve();
      for (      ResolvedArtifact resolvedArtifact : resolve.getArtifacts()) {
        classpath.add(resolvedArtifact.getFile());
      }
      resolverResults.getResolutionResult().allDependencies(new Action<DependencyResult>(){
        @Override public void execute(        DependencyResult dependencyResult){
          if (dependencyResult instanceof UnresolvedDependencyResult) {
            UnresolvedDependencyResult unresolved=(UnresolvedDependencyResult)dependencyResult;
            notFound.add(unresolved.getFailure());
          }
        }
      }
);
    }
  }
);
  if (!notFound.isEmpty()) {
    throw new LibraryResolveException("Could not resolve all dependencies for source set '" + sourceSet.getDisplayName() + "'",notFound);
  }
  return classpath;
}
