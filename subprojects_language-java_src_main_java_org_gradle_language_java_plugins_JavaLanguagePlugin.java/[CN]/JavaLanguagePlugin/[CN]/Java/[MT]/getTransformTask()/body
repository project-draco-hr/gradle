{
  return new SourceTransformTaskConfig(){
    public String getTaskPrefix(){
      return "compile";
    }
    public Class<? extends DefaultTask> getTaskType(){
      return PlatformJavaCompile.class;
    }
    public void configureTask(    Task task,    BinarySpec binarySpec,    LanguageSourceSet sourceSet){
      PlatformJavaCompile compile=(PlatformJavaCompile)task;
      JavaSourceSet javaSourceSet=(JavaSourceSet)sourceSet;
      JvmBinarySpec binary=(JvmBinarySpec)binarySpec;
      GradleInternal gradle=(GradleInternal)task.getProject().getGradle();
      ArtifactDependencyResolver dependencyResolver=gradle.getServices().get(ArtifactDependencyResolver.class);
      ProjectInternal project=(ProjectInternal)task.getProject();
      compile.setDescription(String.format("Compiles %s.",javaSourceSet));
      compile.setDestinationDir(binary.getClassesDir());
      compile.setPlatform(binary.getTargetPlatform());
      compile.setSource(javaSourceSet.getSource());
      compile.setClasspath(new DependencyResolvingClasspath(project.getPath(),javaSourceSet,dependencyResolver));
      compile.setTargetCompatibility(binary.getTargetPlatform().getTargetCompatibility().toString());
      compile.setSourceCompatibility(binary.getTargetPlatform().getTargetCompatibility().toString());
      compile.setDependencyCacheDir(new File(compile.getProject().getBuildDir(),"jvm-dep-cache"));
      compile.dependsOn(javaSourceSet);
      binary.getTasks().getJar().dependsOn(compile);
    }
  }
;
}
