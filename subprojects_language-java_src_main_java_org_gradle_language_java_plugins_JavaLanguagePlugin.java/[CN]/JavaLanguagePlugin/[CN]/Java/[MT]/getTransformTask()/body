{
  return new SourceTransformTaskConfig(){
    public String getTaskPrefix(){
      return "compile";
    }
    public Class<? extends DefaultTask> getTaskType(){
      return PlatformJavaCompile.class;
    }
    public void configureTask(    Task task,    BinarySpec binary,    LanguageSourceSet sourceSet,    ServiceRegistry serviceRegistry){
      PlatformJavaCompile compile=(PlatformJavaCompile)task;
      JavaSourceSet javaSourceSet=(JavaSourceSet)sourceSet;
      JvmAssembly assembly=((WithJvmAssembly)binary).getAssembly();
      assembly.builtBy(compile);
      compile.setDescription(String.format("Compiles %s.",javaSourceSet));
      compile.setDestinationDir(conventionalCompilationOutputDirFor(assembly));
      compile.setDependencyCacheDir(new File(compile.getProject().getBuildDir(),"jvm-dep-cache"));
      compile.dependsOn(javaSourceSet);
      compile.setSource(javaSourceSet.getSource());
      JavaPlatform targetPlatform=assembly.getTargetPlatform();
      String targetCompatibility=targetPlatform.getTargetCompatibility().toString();
      compile.setPlatform(targetPlatform);
      compile.setToolChain(assembly.getToolChain());
      compile.setTargetCompatibility(targetCompatibility);
      compile.setSourceCompatibility(targetCompatibility);
      DependencyResolvingClasspath classpath=classpathFor(binary,javaSourceSet,serviceRegistry);
      compile.setClasspath(classpath);
    }
  }
;
}
