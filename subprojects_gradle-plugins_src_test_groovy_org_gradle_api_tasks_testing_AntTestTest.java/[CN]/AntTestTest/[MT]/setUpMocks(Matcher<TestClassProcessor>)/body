{
  context.checking(new Expectations(){
{
      one(testFrameworkMock).getInstance(test);
      will(returnValue(testFrameworkInstanceMock));
      one(testFrameworkInstanceMock).initialize();
    }
  }
);
  test.useTestFramework(testFrameworkMock);
  test.setScanForTestClasses(false);
  test.setTestClassScannerFactory(testClassScannerFactoryMock);
  test.setTestClassesDir(classesDir);
  test.setTestResultsDir(resultsDir);
  test.setTestReportDir(reportDir);
  test.setClasspath(classpathMock);
  test.setTestSrcDirs(Collections.<File>emptyList());
  context.checking(new Expectations(){
{
      one(testFrameworkInstanceMock).getProcessorFactory();
      will(returnValue(testProcessorFactoryMock));
      one(testClassScannerFactoryMock).createTestClassScanner(with(sameInstance(test)),with(testClassProcessorMatcher));
      will(returnValue(testClassScannerMock));
      one(testClassScannerMock).run();
      one(testFrameworkInstanceMock).report();
    }
  }
);
}
