{
  return new ImmutableMap.Builder<String,Callable<Object>>().put("deprecation",new Callable<Object>(){
    public Object call() throws Exception {
      return toOnOffString(isDeprecation());
    }
  }
).put("unchecked",new Callable<Object>(){
    public Object call() throws Exception {
      return toOnOffString(isUnchecked());
    }
  }
).put("optimize",new Callable<Object>(){
    public Object call() throws Exception {
      return toOnOffString(isOptimize());
    }
  }
).put("targetCompatibility",new Callable<Object>(){
    public Object call() throws Exception {
      return String.format("jvm-%s",getTargetCompatibility());
    }
  }
).put("loggingPhases",new Callable<Object>(){
    public Object call() throws Exception {
      return getLoggingPhases().isEmpty() ? " " : Joiner.on(',').join(getLoggingPhases());
    }
  }
).put("additionalParameters",new Callable<Object>(){
    public Object call() throws Exception {
      return getAdditionalParameters().isEmpty() ? " " : Joiner.on(' ').join(getAdditionalParameters());
    }
  }
).build();
}
