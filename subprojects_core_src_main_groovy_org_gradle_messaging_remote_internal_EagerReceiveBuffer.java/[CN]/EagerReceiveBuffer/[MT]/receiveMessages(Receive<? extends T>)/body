{
  while (true) {
    T message=null;
    try {
      message=receiver.receive();
    }
 catch (    Exception e) {
      LOGGER.error("receiver {} threw exception {}",receiver,e);
      return;
    }
    lock.lock();
    try {
      if (message == null) {
        if (numActiveReceivers == 1) {
          onReceiversExhausted();
        }
        return;
      }
      while (queue.size() == bufferSize && state == State.Started) {
        try {
          notFullOrStop.await();
        }
 catch (        InterruptedException e) {
          throw UncheckedException.asUncheckedException(e);
        }
      }
      queue.add(message);
      notEmptyOrNoReceivers.signalAll();
      if (state != State.Started) {
        return;
      }
    }
  finally {
      lock.unlock();
    }
  }
}
