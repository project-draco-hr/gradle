{
  Supplier<PersistentIndexedCache<PluginRequest,String>> cacheSupplier=Suppliers.wrap(Suppliers.ofQuietlyClosed(new Factory<PersistentCache>(){
    public PersistentCache create(){
      return cacheRepository.cache("plugins").withLockOptions(LockOptionsBuilder.mode(FileLockManager.LockMode.Exclusive)).open();
    }
  }
),new Transformer<PersistentIndexedCache<PluginRequest,String>,PersistentCache>(){
    public PersistentIndexedCache<PluginRequest,String> transform(    PersistentCache original){
      PersistentIndexedCacheParameters<PluginRequest,String> cacheParams=new PersistentIndexedCacheParameters<PluginRequest,String>("jcenter",new PluginRequestSerializer(),BaseSerializerFactory.STRING_SERIALIZER);
      return original.createCache(cacheParams);
    }
  }
);
  final JCenterPluginMapper mapper=new JCenterPluginMapper(cacheSupplier);
  return new ModuleMappingPluginResolver("jcenter plugin resolver",dependencyResolutionServices,instantiator,mapper,new JCenterRepositoryConfigurer()){
    @Override public String getDescriptionForNotFoundMessage(){
      return String.format("Gradle Bintray Plugin Repository (listing: %s)",mapper.getBintrayRepoUrl());
    }
  }
;
}
