{
  ModelType<?> managedType=managedSchema.getType();
  Class<?> managedTypeClass=managedType.getConcreteClass();
  declareClass(visitor,interfaceInternalNames,generatedType,superclassType);
  declareStateField(visitor);
  declareManagedTypeField(visitor);
  declareCanCallSettersField(visitor);
  writeStaticConstructor(visitor,generatedType,managedTypeClass);
  writeConstructor(visitor,generatedType,superclassType,delegateSchema);
  writeToString(visitor,generatedType,managedTypeClass);
  writeManagedInstanceMethods(visitor,generatedType);
  if (delegateSchema != null) {
    declareDelegateField(visitor,delegateSchema);
    writeDelegateMethods(visitor,generatedType,delegateSchema,typesToDelegate);
  }
  writeGroovyMethods(visitor,managedTypeClass);
  writePropertyMethods(visitor,generatedType,managedSchema,delegateSchema);
  writeHashCodeMethod(visitor,generatedType);
  writeEqualsMethod(visitor,generatedType);
  visitor.visitEnd();
}
