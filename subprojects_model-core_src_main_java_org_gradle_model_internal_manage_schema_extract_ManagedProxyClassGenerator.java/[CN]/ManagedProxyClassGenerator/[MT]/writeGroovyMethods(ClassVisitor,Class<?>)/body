{
  MethodVisitor methodVisitor=declareMethod(visitor,"propertyMissing",GET_PROPERTY_MISSING_METHOD_DESCRIPTOR,CONCRETE_SIGNATURE);
  methodVisitor.visitTypeInsn(NEW,MISSING_PROPERTY_EXCEPTION_TYPE);
  methodVisitor.visitInsn(DUP);
  putFirstMethodArgumentOnStack(methodVisitor);
  putClassOnStack(methodVisitor,viewClass);
  methodVisitor.visitMethodInsn(INVOKESPECIAL,MISSING_PROPERTY_EXCEPTION_TYPE,"<init>",MISSING_PROPERTY_CONSTRUCTOR_DESCRIPTOR,false);
  finishVisitingMethod(methodVisitor,ATHROW);
  methodVisitor=declareMethod(visitor,"propertyMissing",SET_PROPERTY_MISSING_METHOD_DESCRIPTOR,CONCRETE_SIGNATURE);
  methodVisitor.visitTypeInsn(NEW,MISSING_PROPERTY_EXCEPTION_TYPE);
  methodVisitor.visitInsn(DUP);
  putFirstMethodArgumentOnStack(methodVisitor);
  putClassOnStack(methodVisitor,viewClass);
  methodVisitor.visitMethodInsn(INVOKESPECIAL,MISSING_PROPERTY_EXCEPTION_TYPE,"<init>",MISSING_PROPERTY_CONSTRUCTOR_DESCRIPTOR,false);
  finishVisitingMethod(methodVisitor,ATHROW);
  methodVisitor=declareMethod(visitor,"methodMissing",METHOD_MISSING_METHOD_DESCRIPTOR,CONCRETE_SIGNATURE);
  methodVisitor.visitTypeInsn(NEW,MISSING_METHOD_EXCEPTION_TYPE);
  methodVisitor.visitInsn(DUP);
  putMethodArgumentOnStack(methodVisitor,1);
  putClassOnStack(methodVisitor,viewClass);
  putMethodArgumentOnStack(methodVisitor,2);
  methodVisitor.visitTypeInsn(CHECKCAST,OBJECT_ARRAY_TYPE);
  methodVisitor.visitMethodInsn(INVOKESPECIAL,MISSING_METHOD_EXCEPTION_TYPE,"<init>",MISSING_METHOD_EXCEPTION_CONSTRUCTOR_DESCRIPTOR,false);
  finishVisitingMethod(methodVisitor,ATHROW);
}
