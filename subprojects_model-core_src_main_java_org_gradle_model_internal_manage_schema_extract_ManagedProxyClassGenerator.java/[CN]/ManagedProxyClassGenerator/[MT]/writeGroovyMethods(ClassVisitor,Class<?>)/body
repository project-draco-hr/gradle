{
  MethodVisitor methodVisitor=visitor.visitMethod(Opcodes.ACC_PUBLIC,"propertyMissing",GET_PROPERTY_MISSING_METHOD_DESCRIPTOR,CONCRETE_SIGNATURE,NO_EXCEPTIONS);
  methodVisitor.visitCode();
  methodVisitor.visitTypeInsn(Opcodes.NEW,MISSING_PROPERTY_EXCEPTION_TYPE);
  methodVisitor.visitInsn(Opcodes.DUP);
  putFirstMethodArgumentOnStack(methodVisitor);
  putClassOnStack(methodVisitor,managedTypeClass);
  methodVisitor.visitMethodInsn(Opcodes.INVOKESPECIAL,MISSING_PROPERTY_EXCEPTION_TYPE,"<init>",MISSING_PROPERTY_CONSTRUCTOR_DESCRIPTOR,false);
  finishVisitingMethod(methodVisitor,Opcodes.ATHROW);
  methodVisitor=visitor.visitMethod(Opcodes.ACC_PUBLIC,"propertyMissing",SET_PROPERTY_MISSING_METHOD_DESCRIPTOR,CONCRETE_SIGNATURE,NO_EXCEPTIONS);
  methodVisitor.visitCode();
  methodVisitor.visitTypeInsn(Opcodes.NEW,MISSING_PROPERTY_EXCEPTION_TYPE);
  methodVisitor.visitInsn(Opcodes.DUP);
  putFirstMethodArgumentOnStack(methodVisitor);
  putClassOnStack(methodVisitor,managedTypeClass);
  methodVisitor.visitMethodInsn(Opcodes.INVOKESPECIAL,MISSING_PROPERTY_EXCEPTION_TYPE,"<init>",MISSING_PROPERTY_CONSTRUCTOR_DESCRIPTOR,false);
  finishVisitingMethod(methodVisitor,Opcodes.ATHROW);
  methodVisitor=visitor.visitMethod(Opcodes.ACC_PUBLIC,"methodMissing",METHOD_MISSING_METHOD_DESCRIPTOR,CONCRETE_SIGNATURE,NO_EXCEPTIONS);
  methodVisitor.visitCode();
  methodVisitor.visitTypeInsn(Opcodes.NEW,MISSING_METHOD_EXCEPTION_TYPE);
  methodVisitor.visitInsn(Opcodes.DUP);
  putMethodArgumentOnStack(methodVisitor,1);
  putClassOnStack(methodVisitor,managedTypeClass);
  putMethodArgumentOnStack(methodVisitor,2);
  methodVisitor.visitTypeInsn(Opcodes.CHECKCAST,OBJECT_ARRAY_TYPE);
  methodVisitor.visitMethodInsn(Opcodes.INVOKESPECIAL,MISSING_METHOD_EXCEPTION_TYPE,"<init>",MISSING_METHOD_EXCEPTION_CONSTRUCTOR_DESCRIPTOR,false);
  finishVisitingMethod(methodVisitor,Opcodes.ATHROW);
}
