{
  String modelName=determineModelName(ruleDefinition);
  List<ModelReference<?>> references=ruleDefinition.getReferences();
  if (references.isEmpty()) {
    throw new InvalidModelRuleDeclarationException(ruleDefinition.getDescriptor(),"a void returning model element creation rule has to take a managed model element instance as the first argument");
  }
  ModelType<?> managedType=references.get(0).getType();
  if (!store.isManaged(managedType)) {
    String description=String.format("a void returning model element creation rule has to take an instance of a %s annotated type as the first argument",Managed.class.getName());
    throw new InvalidModelRuleDeclarationException(ruleDefinition.getDescriptor(),description);
  }
  modelRegistry.create(buildModelCreatorForManagedType(managedType,ruleDefinition,ModelPath.path(modelName)));
}
