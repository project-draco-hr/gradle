{
  if (ruleDefinition.getReferences().size() == 0) {
    throw new InvalidComponentModelException(String.format("%s method must have a parameter of type '%s'.",annotationType.getSimpleName(),CollectionBuilder.class.getName()));
  }
  ModelType<?> builder=ruleDefinition.getReferences().get(0).getType();
  if (!ModelType.of(CollectionBuilder.class).isAssignableFrom(builder)) {
    throw new InvalidComponentModelException(String.format("%s method first parameter must be of type '%s'.",annotationType.getSimpleName(),CollectionBuilder.class.getName()));
  }
  if (builder.getTypeVariables().size() != 1) {
    throw new InvalidComponentModelException(String.format("Parameter of type '%s' must declare a type parameter extending '%s'.",CollectionBuilder.class.getSimpleName(),typeParameter.getSimpleName()));
  }
  ModelType<?> subType=builder.getTypeVariables().get(0);
  if (subType.isWildcard()) {
    throw new InvalidComponentModelException(String.format("%s type '%s' cannot be a wildcard type (i.e. cannot use ? super, ? extends etc.).",typeParameter.getName(),subType.toString()));
  }
}
