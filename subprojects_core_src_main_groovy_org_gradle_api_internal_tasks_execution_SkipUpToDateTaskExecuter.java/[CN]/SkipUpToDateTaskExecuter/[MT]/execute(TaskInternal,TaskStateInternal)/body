{
  LOGGER.debug("Determining if {} is up-to-date",task);
  TaskArtifactState taskArtifactState=repository.getStateFor(task);
  try {
    if (taskArtifactState.isUpToDate()) {
      LOGGER.info("Skipping {} as it is up-to-date",task);
      state.upToDate();
      return;
    }
    LOGGER.debug("{} is not up-to-date",task);
    taskArtifactState.beforeTask();
    task.getOutputs().setHistory(taskArtifactState.getExecutionHistory());
    try {
      executer.execute(task,state);
      if (state.getFailure() == null) {
        taskArtifactState.afterTask();
      }
    }
  finally {
      task.getOutputs().setHistory(null);
    }
  }
  finally {
    taskArtifactState.finished();
  }
}
