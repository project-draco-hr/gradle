{
  collector.args(spec.getSystemArgs());
  for (  String userArg : spec.getArgs()) {
    collector.args("-Xlinker",userArg);
  }
  if (spec instanceof SharedLibraryLinkerSpec) {
    collector.args("-shared");
    if (!OperatingSystem.current().isWindows()) {
      String installName=((SharedLibraryLinkerSpec)spec).getInstallName();
      if (OperatingSystem.current().isMacOsX()) {
        collector.args("-Wl,-install_name," + installName);
      }
 else {
        collector.args("-Wl,-soname," + installName);
      }
    }
  }
  collector.args("-o",spec.getOutputFile().getAbsolutePath());
  for (  File file : spec.getObjectFiles()) {
    collector.args(file.getAbsolutePath());
  }
  for (  File file : spec.getLibraries()) {
    collector.args(file.getAbsolutePath());
  }
  for (  File pathEntry : spec.getLibraryPath()) {
    throw new UnsupportedOperationException("Library Path not yet supported on GCC");
  }
}
