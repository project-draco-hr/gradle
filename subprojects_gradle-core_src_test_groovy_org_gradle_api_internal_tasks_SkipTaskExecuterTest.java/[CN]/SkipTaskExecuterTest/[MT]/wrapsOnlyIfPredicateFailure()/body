{
  final Throwable failure=new RuntimeException();
  context.checking(new Expectations(){
{
      allowing(task).getEnabled();
      will(returnValue(true));
      one(spec).isSatisfiedBy(task);
      will(throwException(failure));
    }
  }
);
  TaskExecutionResult result=executer.execute(task,state);
  GradleException exception=(GradleException)result.getFailure();
  assertThat(exception.getMessage(),equalTo("Could not evaluate onlyIf predicate for <task>."));
  assertThat(exception.getCause(),sameInstance(failure));
  assertThat(result.getSkipMessage(),nullValue());
  assertTrue(state.isExecuted());
  assertFalse(state.isDidWork());
}
