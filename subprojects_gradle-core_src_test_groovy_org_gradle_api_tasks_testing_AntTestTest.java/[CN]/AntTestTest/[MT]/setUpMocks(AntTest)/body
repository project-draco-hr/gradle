{
  test.setTestClassesDir(classesDir);
  test.setTestResultsDir(resultsDir);
  test.setTestReportDir(reportDir);
  test.setClasspath(classpathMock);
  test.setTestClassProcessor(testClassProcessorMock);
  test.setTestSrcDirs(Collections.<File>emptyList());
  context.checking(new Expectations(){
{
      one(testFrameworkInstanceMock).getDetector();
      will(returnValue(testFrameworkDetectorMock));
      one(testClassScannerFactoryMock).createTestClassScanner(test,testFrameworkDetectorMock,testClassProcessorMock);
      will(returnValue(testClassScannerMock));
      one(testClassScannerMock).executeScan();
      one(testClassProcessorMock).getTestClassNames();
      will(returnValue(okTestClassNames));
      one(testFrameworkInstanceMock).execute(getProject(),test,okTestClassNames,new ArrayList<String>());
    }
  }
);
}
