{
  this.requested=dependencyState.getRequested();
  this.changing=dependencyState.isChanging();
  this.transitive=dependencyState.isTransitive();
  this.force=dependencyState.isForce();
  this.dynamicConstraintVersion=dependencyState.getDynamicConstraintVersion();
  this.confs=Maps.newLinkedHashMap();
  Map<String,List<String>> configMappings=dependencyState.getConfMappings();
  for (  String config : configMappings.keySet()) {
    List<String> mappings=new ArrayList<String>(configMappings.get(config));
    confs.put(config,mappings);
  }
  dependencyArtifacts=Maps.newLinkedHashMap();
  for (  Artifact dependencyArtifact : dependencyState.getDependencyArtifacts()) {
    dependencyArtifacts.put(dependencyArtifact.getArtifactName(),dependencyArtifact.getConfigurations());
  }
  excludes=Maps.newLinkedHashMap();
  for (  Exclude exclude : dependencyState.getDependencyExcludes()) {
    excludes.put(exclude,Sets.newHashSet(exclude.getConfigurations()));
  }
}
