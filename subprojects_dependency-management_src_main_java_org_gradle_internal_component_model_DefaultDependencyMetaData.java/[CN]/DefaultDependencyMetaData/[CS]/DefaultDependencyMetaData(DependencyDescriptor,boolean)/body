{
  this.requested=DefaultModuleVersionSelector.newSelector(dependencyDescriptor.getDependencyRevisionId());
  this.changing=dependencyDescriptor.isChanging();
  this.transitive=dependencyDescriptor.isTransitive();
  this.force=force;
  this.dynamicConstraintVersion=dependencyDescriptor.getDynamicConstraintDependencyRevisionId().getRevision();
  this.confs=Maps.newLinkedHashMap();
  Map<String,List<String>> configMappings=readConfigMappings(dependencyDescriptor);
  for (  String config : configMappings.keySet()) {
    List<String> mappings=new ArrayList<String>(configMappings.get(config));
    confs.put(config,mappings);
  }
  dependencyArtifacts=Maps.newLinkedHashMap();
  for (  DependencyArtifactDescriptor dependencyArtifactDescriptor : dependencyDescriptor.getAllDependencyArtifacts()) {
    IvyArtifactName ivyArtifactName=DefaultIvyArtifactName.forIvyArtifact(dependencyArtifactDescriptor);
    dependencyArtifacts.put(ivyArtifactName,Sets.newHashSet(dependencyArtifactDescriptor.getConfigurations()));
  }
  excludeRules=Maps.newLinkedHashMap();
  for (  ExcludeRule excludeRule : dependencyDescriptor.getAllExcludeRules()) {
    excludeRules.put(excludeRule,Sets.newHashSet(excludeRule.getConfigurations()));
  }
}
