{
  String myExtension1=".mytxtextension";
  String myExtension2=".othertxtextension";
  assertFalse("Fake extension 1 already present. This test is not setup correctly!",definitionLord.getFileExtensions().contains(myExtension1));
  assertFalse("Fake extension 2 already present. This test is not setup correctly!",definitionLord.getFileExtensions().contains(myExtension2));
  definitionLord.addFileExtension(myExtension1,":");
  definitionLord.addFileExtension(myExtension2,null);
  assertTrue("Fake extension 1 was not added. ",definitionLord.getFileExtensions().contains(myExtension1));
  assertTrue("Fake extension 2 was not added. ",definitionLord.getFileExtensions().contains(myExtension2));
  FileLink fileLink1=new FileLink(new File("/home/user/gradle/subprojects/gradle-open-api/src/integTest/groovy/org/gradle/integtests/GradleRunnerFactoryTest.mytxtextension"),183,313,24);
  FileLink fileLink2=new FileLink(new File("/home/user/gradle/subprojects/gradle-open-api/src/integTest/groovy/org/gradle/integtests/GradleRunnerFactoryTest.othertxtextension"),488,618,-1);
  FileLink fileLink3=new FileLink(new File("/home/user/modules/gradle/subprojects/gradle-core/src/main/groovy/org/gradle/util/exec/ExecHandleShutdownHookAction.java"),632,755,38);
  appendTextWithoutFileLinks(":distributionDiskResources SKIPPED\n");
  appendTextWithoutFileLinks(":installDiskResources SKIPPED\n");
  appendTextWithoutFileLinks(":idea-plugins:ideagradle:compileJava\n\n");
  appendTextWithoutFileLinks("org.codehaus.groovy.control.MultipleCompilationErrorsException: startup failed:\n");
  appendTextWithFileLinks("/home/user/gradle/subprojects/gradle-open-api/src/integTest/groovy/org/gradle/integtests/GradleRunnerFactoryTest.mytxtextension:24: unable to find class 'DistributionIntegrationTestRunner.class' for annotation attribute constant\n",fileLink1);
  appendTextWithoutFileLinks(" @ line 24, column 10.\n");
  appendTextWithoutFileLinks("   @RunWith(DistributionIntegrationTestRunner.class)\n");
  appendTextWithFileLinks("/home/user/gradle/subprojects/gradle-open-api/src/integTest/groovy/org/gradle/integtests/GradleRunnerFactoryTest.othertxtextension: other error\n",fileLink2);
  appendTextWithFileLinks("/home/user/modules/gradle/subprojects/gradle-core/src/main/groovy/org/gradle/util/exec/ExecHandleShutdownHookAction.java:38: 'if' construct must use '{}'s.\n",fileLink3);
}
