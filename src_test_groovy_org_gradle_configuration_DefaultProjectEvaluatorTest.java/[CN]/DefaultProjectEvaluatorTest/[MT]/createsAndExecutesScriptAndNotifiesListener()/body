{
  final ScriptSource expectedScriptSource=new ImportsScriptSource(scriptSource,importsReader,rootDir);
  context.checking(new Expectations(){
{
      allowing(build).getProjectEvaluationBroadcaster();
      will(returnValue(listener));
    }
  }
);
  evaluator.projectsLoaded(build);
  context.checking(new Expectations(){
{
      one(listener).beforeEvaluate(project);
      one(scriptProcessor).createScript(with(Matchers.reflectionEquals(expectedScriptSource)),with(same(classLoader)),with(equal(ProjectScript.class)));
      will(returnValue(buildScript));
      one(projectScriptMetaData).applyMetaData(buildScript,project);
      one(project).setBuildScript(buildScript);
      one(standardOutputRedirector).on(LogLevel.QUIET);
      one(buildScript).run();
      one(standardOutputRedirector).flush();
      one(listener).afterEvaluate(project);
    }
  }
);
  evaluator.evaluate(project);
}
