{
  EnumMap<UsageKind,Iterable<DependencySpec>> dependenciesPerUsage=new EnumMap<UsageKind,Iterable<DependencySpec>>(UsageKind.class);
  EnumMap<UsageKind,TaskDependency> buildDependenciesPerUsage=new EnumMap<UsageKind,TaskDependency>(UsageKind.class);
  populateUsageMetadata(UsageKind.API,assembly,Collections.<DependencySpec>emptyList(),dependenciesPerUsage,buildDependenciesPerUsage);
  populateUsageMetadata(UsageKind.RUNTIME,assembly,Collections.<DependencySpec>emptyList(),dependenciesPerUsage,buildDependenciesPerUsage);
  DefaultLibraryLocalComponentMetaData metadata=newResolvedLibraryMetadata(selectedBinary.getId(),buildDependenciesPerUsage,dependenciesPerUsage,projectPath);
  addArtifact(UsageKind.API,assembly.getClassDirectories(),metadata);
  addArtifact(UsageKind.RUNTIME,Sets.union(assembly.getClassDirectories(),assembly.getResourceDirectories()),metadata);
  return metadata;
}
