{
  if (pluginRequest.getId().equals(NOOP_PLUGIN_ID)) {
    result.found("noop resolver",new SimplePluginResolution(PotentialPluginWithId.of(NOOP_PLUGIN_ID,new PotentialPlugin<NoopPlugin>(){
      @Override public Class<NoopPlugin> asClass(){
        return NoopPlugin.class;
      }
      @Override public boolean isImperative(){
        return true;
      }
      @Override public boolean isHasRules(){
        return false;
      }
      @Override public Type getType(){
        return Type.IMPERATIVE_CLASS;
      }
    }
)));
  }
}
