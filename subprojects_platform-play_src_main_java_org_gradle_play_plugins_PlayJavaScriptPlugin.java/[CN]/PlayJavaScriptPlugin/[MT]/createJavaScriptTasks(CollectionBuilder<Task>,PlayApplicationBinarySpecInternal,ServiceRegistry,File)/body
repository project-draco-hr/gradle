{
  for (  final JavaScriptSourceSet javaScriptSourceSet : binary.getSource().withType(JavaScriptSourceSet.class)) {
    if (((LanguageSourceSetInternal)javaScriptSourceSet).getMayHaveSources()) {
      final String processTaskName="process" + capitalize(binary.getName()) + capitalize(javaScriptSourceSet.getName());
      final File javascriptOutputDirectory=new File(buildDir,String.format("%s/src/%s",binary.getName(),processTaskName));
      tasks.create(processTaskName,JavaScriptProcessResources.class,new Action<JavaScriptProcessResources>(){
        @Override public void execute(        JavaScriptProcessResources javaScriptProcessResources){
          javaScriptProcessResources.from(javaScriptSourceSet.getSource());
          javaScriptProcessResources.setDestinationDir(javascriptOutputDirectory);
          binary.getAssets().builtBy(javaScriptProcessResources);
          binary.getAssets().addAssetDir(javascriptOutputDirectory);
        }
      }
);
      final String minifyTaskName="minify" + capitalize(binary.getName()) + capitalize(javaScriptSourceSet.getName());
      final File minifyOutputDirectory=new File(buildDir,String.format("%s/src/%s",binary.getName(),minifyTaskName));
      tasks.create(minifyTaskName,JavaScriptMinify.class,new Action<JavaScriptMinify>(){
        @Override public void execute(        JavaScriptMinify javaScriptMinify){
          javaScriptMinify.setSource(javaScriptSourceSet.getSource());
          javaScriptMinify.setDestinationDir(minifyOutputDirectory);
          binary.getAssets().builtBy(javaScriptMinify);
          binary.getAssets().addAssetDir(minifyOutputDirectory);
        }
      }
);
    }
  }
}
