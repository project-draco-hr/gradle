{
  gradlePluginLord.startExecutionQueue();
  final AtomicBoolean isComplete=new AtomicBoolean();
  GradlePluginLord.RequestObserver observer=new GradlePluginLord.RequestObserver(){
    public void executionRequestAdded(    ExecutionRequest request){
    }
    public void refreshRequestAdded(    RefreshTaskListRequest request){
      request.setExecutionInteraction(executionInteraction);
    }
    public void aboutToExecuteRequest(    Request request){
    }
    public void requestExecutionComplete(    Request request,    int result,    String output){
      isComplete.set(true);
    }
  }
;
  gradlePluginLord.addRequestObserver(observer,false);
  Request request=gradlePluginLord.addRefreshRequestToQueue();
  Assert.assertNotNull(request);
  int totalWaitTime=0;
  while (!isComplete.get() && totalWaitTime <= maximumWaitSeconds) {
    try {
      Thread.sleep(1000);
    }
 catch (    InterruptedException e) {
      e.printStackTrace();
    }
    totalWaitTime+=1;
  }
  gradlePluginLord.removeRequestObserver(observer);
  if (!isComplete.get()) {
    request.cancel();
    throw new AssertionFailedError("Failed to complete refresh in alotted time: " + maximumWaitSeconds + " seconds. Considering this failed.");
  }
}
