{
  Type dynamicObjectType=Type.getType(DynamicObject.class);
  String propertyMissingDesc=Type.getMethodDescriptor(Type.VOID_TYPE,new Type[]{Type.getType(String.class),Type.getType(Object.class)});
  MethodVisitor methodVisitor=visitor.visitMethod(Opcodes.ACC_PUBLIC,"propertyMissing",propertyMissingDesc,null,new String[0]);
  methodVisitor.visitCode();
  methodVisitor.visitVarInsn(Opcodes.ALOAD,0);
  String getAsDynamicObjectDesc=Type.getMethodDescriptor(DynamicObjectAware.class.getDeclaredMethod("getAsDynamicObject"));
  methodVisitor.visitMethodInsn(Opcodes.INVOKEVIRTUAL,generatedType.getInternalName(),"getAsDynamicObject",getAsDynamicObjectDesc);
  methodVisitor.visitVarInsn(Opcodes.ALOAD,1);
  methodVisitor.visitVarInsn(Opcodes.ALOAD,2);
  methodVisitor.visitMethodInsn(Opcodes.INVOKEINTERFACE,dynamicObjectType.getInternalName(),"setProperty",propertyMissingDesc);
  methodVisitor.visitInsn(Opcodes.RETURN);
  methodVisitor.visitMaxs(0,0);
  methodVisitor.visitEnd();
  propertyMissingDesc=Type.getMethodDescriptor(Type.getType(Object.class),new Type[]{Type.getType(String.class)});
  methodVisitor=visitor.visitMethod(Opcodes.ACC_PUBLIC,"propertyMissing",propertyMissingDesc,null,new String[0]);
  methodVisitor.visitCode();
  methodVisitor.visitVarInsn(Opcodes.ALOAD,0);
  methodVisitor.visitMethodInsn(Opcodes.INVOKEVIRTUAL,generatedType.getInternalName(),"getAsDynamicObject",getAsDynamicObjectDesc);
  methodVisitor.visitVarInsn(Opcodes.ALOAD,1);
  methodVisitor.visitMethodInsn(Opcodes.INVOKEINTERFACE,dynamicObjectType.getInternalName(),"getProperty",propertyMissingDesc);
  methodVisitor.visitInsn(Opcodes.ARETURN);
  methodVisitor.visitMaxs(0,0);
  methodVisitor.visitEnd();
  String methodMissingDesc=Type.getMethodDescriptor(Type.getType(Object.class),new Type[]{Type.getType(String.class),Type.getType(Object.class)});
  String invokeMethodDesc=Type.getMethodDescriptor(Type.getType(Object.class),new Type[]{Type.getType(String.class),Type.getType(Object[].class)});
  methodVisitor=visitor.visitMethod(Opcodes.ACC_PUBLIC,"methodMissing",methodMissingDesc,null,new String[0]);
  methodVisitor.visitCode();
  methodVisitor.visitVarInsn(Opcodes.ALOAD,0);
  methodVisitor.visitMethodInsn(Opcodes.INVOKEVIRTUAL,generatedType.getInternalName(),"getAsDynamicObject",getAsDynamicObjectDesc);
  methodVisitor.visitVarInsn(Opcodes.ALOAD,1);
  methodVisitor.visitVarInsn(Opcodes.ALOAD,2);
  methodVisitor.visitTypeInsn(Opcodes.CHECKCAST,Type.getType(Object[].class).getDescriptor());
  methodVisitor.visitMethodInsn(Opcodes.INVOKEINTERFACE,dynamicObjectType.getInternalName(),"invokeMethod",invokeMethodDesc);
  methodVisitor.visitInsn(Opcodes.ARETURN);
  methodVisitor.visitMaxs(0,0);
  methodVisitor.visitEnd();
}
