{
  Throwable actualException=findDeepest(exception);
  if (actualException == null) {
    return exception;
  }
  if (actualException instanceof ScriptCompilationException) {
    return actualException;
  }
  ScriptSource source=null;
  Integer lineNumber=null;
  for (Throwable currentException=actualException; currentException != null; currentException=currentException.getCause()) {
    for (    StackTraceElement element : currentException.getStackTrace()) {
      if (scripts.containsKey(element.getFileName())) {
        source=scripts.get(element.getFileName());
        lineNumber=element.getLineNumber() >= 0 ? element.getLineNumber() : null;
        break;
      }
    }
  }
  if (source == null) {
    if (!(actualException instanceof TaskExecutionException)) {
      return actualException;
    }
    TaskExecutionException taskExecutionException=(TaskExecutionException)actualException;
    source=((ProjectInternal)taskExecutionException.getTask().getProject()).getBuildScriptSource();
  }
  return new GradleScriptException(actualException.getMessage(),actualException,source,lineNumber);
}
