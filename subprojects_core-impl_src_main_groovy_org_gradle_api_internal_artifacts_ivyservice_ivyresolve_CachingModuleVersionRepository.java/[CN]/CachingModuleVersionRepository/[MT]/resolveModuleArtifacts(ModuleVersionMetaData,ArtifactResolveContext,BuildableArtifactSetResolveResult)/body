{
  ModuleArtifactsCache.CachedArtifacts cachedModuleArtifacts=moduleArtifactsCache.getCachedArtifacts(delegate,moduleMetaData.getId(),context.getId());
  final CachingModuleSource cachedModuleSource=(CachingModuleSource)moduleMetaData.getSource();
  BigInteger moduleDescriptorHash=cachedModuleSource.getDescriptorHash();
  if (cachedModuleArtifacts != null) {
    if (!cachePolicy.mustRefreshModuleArtifacts(moduleMetaData.getId(),null,cachedModuleArtifacts.getAgeMillis(),cachedModuleSource.isChangingModule(),moduleDescriptorHash.equals(cachedModuleArtifacts.getDescriptorHash()))) {
      Set<ModuleVersionArtifactMetaData> artifactMetaDataSet=CollectionUtils.collect(cachedModuleArtifacts.getArtifacts(),new ArtifactIdToMetaData());
      result.resolved(artifactMetaDataSet);
      return;
    }
    LOGGER.debug("Artifact listing has expired: will perform fresh resolve of '{}' for '{}' in '{}'",context.getDescription(),moduleMetaData.getId(),delegate.getName());
  }
  delegate.resolveModuleArtifacts(moduleMetaData,context,result);
  if (result.getFailure() == null) {
    Set<ModuleVersionArtifactIdentifier> artifactIdentifierSet=CollectionUtils.collect(result.getArtifacts(),new ArtifactMetaDataToId());
    moduleArtifactsCache.cacheArtifacts(delegate,moduleMetaData.getId(),context.getId(),moduleDescriptorHash,artifactIdentifierSet);
  }
}
