{
  ModuleVersionSelector requested=dependency.getRequested();
  ModuleIdentifier moduleId=moduleExtractor.transform(requested);
  ModuleVersionsCache.CachedModuleVersionList cachedModuleVersionList=moduleVersionsCache.getCachedModuleResolution(delegate,moduleId);
  if (cachedModuleVersionList != null) {
    ModuleVersions versionList=cachedModuleVersionList.getModuleVersions();
    ModuleVersionIdentifier requestedId=new DefaultModuleVersionIdentifier(requested.getGroup(),requested.getName(),requested.getVersion());
    if (cachePolicy.mustRefreshDynamicVersion(requested,requestedId,cachedModuleVersionList.getAgeMillis())) {
      LOGGER.debug("Version listing in dynamic revision cache is expired: will perform fresh resolve of '{}' in '{}'",requested,delegate.getName());
    }
 else {
      if (versionList.isEmpty()) {
        if (cachedModuleVersionList.getAgeMillis() == 0) {
          result.noVersions();
        }
 else {
          result.probablyNoVersions();
        }
      }
 else {
        result.listed(versionList);
      }
    }
  }
}
