{
  String modelName=determineModelName(ruleDefinition);
  try {
    ModelPath.validatePath(modelName);
  }
 catch (  Exception e) {
    throw new InvalidModelRuleDeclarationException(String.format("Path of declared model element created by rule %s is invalid.",ruleDefinition.getDescriptor()),e);
  }
  ModelType<T> returnType=ruleDefinition.getReturnType();
  ModelPath path=ModelPath.path(modelName);
  List<ModelReference<?>> references=ruleDefinition.getReferences();
  ModelRuleDescriptor descriptor=ruleDefinition.getDescriptor();
  Transformer<T,Inputs> transformer=new ModelRuleInvokerBackedTransformer<T>(ruleDefinition.getRuleInvoker(),descriptor,references);
  modelRegistry.create(ModelCreators.of(ModelReference.of(path,returnType),transformer).descriptor(descriptor).inputs(references).build());
}
