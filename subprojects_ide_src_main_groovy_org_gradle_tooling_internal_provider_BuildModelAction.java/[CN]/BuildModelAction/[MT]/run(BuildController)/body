{
  GradleLauncher launcher=buildController.getLauncher();
  final BuildsModel builder=new DefaultToolingModelBuilderRegistry().getBuilder(type);
  if (runTasks) {
    launcher.addListener(new TasksCompletionListener(){
      public void onTasksFinished(      GradleInternal gradle){
        model=builder.buildAll(gradle.getDefaultProject());
      }
    }
);
    buildController.run();
  }
 else {
    launcher.addListener(new ModelConfigurationListener(){
      public void onConfigure(      GradleInternal gradle){
        ensureAllProjectsEvaluated(gradle);
        model=builder.buildAll(gradle.getDefaultProject());
      }
    }
);
    buildController.configure();
  }
  return model;
}
