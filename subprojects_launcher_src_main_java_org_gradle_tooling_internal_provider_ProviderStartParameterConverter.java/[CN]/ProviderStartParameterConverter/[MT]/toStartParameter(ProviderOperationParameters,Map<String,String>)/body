{
  StartParameter startParameter=new StartParameter();
  startParameter.setProjectDir(parameters.getProjectDir());
  if (parameters.getGradleUserHomeDir() != null) {
    startParameter.setGradleUserHomeDir(parameters.getGradleUserHomeDir());
  }
  List<InternalLaunchable> launchables=parameters.getLaunchables(null);
  if (launchables != null) {
    startParameter.setTaskRequests(unpack(launchables));
  }
 else   if (parameters.getTasks() != null) {
    startParameter.setTaskNames(parameters.getTasks());
  }
  new PropertiesToStartParameterConverter().convert(properties,startParameter);
  List<String> arguments=parameters.getArguments(Collections.<String>emptyList());
  if (arguments != null) {
    DefaultCommandLineConverter converter=new DefaultCommandLineConverter();
    try {
      converter.convert(arguments,startParameter);
    }
 catch (    CommandLineArgumentException e) {
      throw new InternalUnsupportedBuildArgumentException("Problem with provided build arguments: " + arguments + ". "+ "\n"+ e.getMessage()+ "\nEither it is not a valid build option or it is not supported in the target Gradle version."+ "\nNot all of the Gradle command line options are supported build arguments."+ "\nExamples of supported build arguments: '--info', '-u', '-p'."+ "\nExamples of unsupported build options: '--daemon', '-?', '-v'."+ "\nPlease find more information in the javadoc for the BuildLauncher class.",e);
    }
  }
  if (parameters.isSearchUpwards() != null) {
    startParameter.setSearchUpwards(parameters.isSearchUpwards());
  }
  if (parameters.getBuildLogLevel() != null) {
    startParameter.setLogLevel(parameters.getBuildLogLevel());
  }
  List<URI> classpath=parameters.getClasspath(Collections.<URI>emptyList());
  startParameter.setClasspath(classpath);
  return startParameter;
}
