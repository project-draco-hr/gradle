{
  Set<JvmLibraryJavadocArtifact> javadocs=Sets.newLinkedHashSet();
  Set<JvmLibrarySourcesArtifact> sources=Sets.newLinkedHashSet();
  for (  Class<? extends SoftwareArtifact> artifactType : artifactTypes) {
    if (artifactType == JvmLibraryJavadocArtifact.class) {
      addJvmLibraryArtifacts(javadocs,JvmLibraryJavadocArtifact.class,DefaultJvmLibraryJavadocArtifact.class,component,artifactResolver);
    }
 else     if (artifactType == JvmLibrarySourcesArtifact.class) {
      addJvmLibraryArtifacts(sources,JvmLibrarySourcesArtifact.class,DefaultJvmLibrarySourcesArtifact.class,component,artifactResolver);
    }
 else {
      throw new IllegalArgumentException(String.format("Cannot resolve artifacts with unsupported type %s.",artifactType.getName()));
    }
  }
  return new DefaultJvmLibrary(component.getComponentId(),sources,javadocs);
}
