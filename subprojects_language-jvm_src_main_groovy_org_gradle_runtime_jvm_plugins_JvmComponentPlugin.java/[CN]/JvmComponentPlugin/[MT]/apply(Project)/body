{
  project.getPlugins().apply(LifecycleBasePlugin.class);
  project.getPlugins().apply(LanguageBasePlugin.class);
  SoftwareComponentContainer libraries=project.getExtensions().getByType(SoftwareComponentContainer.class);
  libraries.registerFactory(JvmLibrary.class,new NamedDomainObjectFactory<JvmLibrary>(){
    public JvmLibrary create(    String name){
      return new DefaultJvmLibrary(name);
    }
  }
);
  modelRules.register("libraries",libraries);
  modelRules.rule(new CreateJvmBinaries(new DefaultBinaryNamingSchemeBuilder()));
  modelRules.rule(new CreateTasksForJvmBinaries());
  modelRules.rule(new AttachBinariesToLifecycle());
}
