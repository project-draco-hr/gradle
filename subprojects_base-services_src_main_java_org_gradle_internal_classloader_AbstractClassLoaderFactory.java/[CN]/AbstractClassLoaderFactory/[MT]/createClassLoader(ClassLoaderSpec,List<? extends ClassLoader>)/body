{
  if (spec instanceof MultiParentClassLoader.Spec) {
    return new MultiParentClassLoader(parents);
  }
  if (parents.size() != 1) {
    throw new IllegalArgumentException("Expected a single parent.");
  }
  ClassLoader parent=parents.get(0);
  if (spec instanceof VisitableURLClassLoader.Spec) {
    VisitableURLClassLoader.Spec clSpec=(VisitableURLClassLoader.Spec)spec;
    return createClassLoader(parent,clSpec.getClasspath());
  }
  if (spec instanceof CachingClassLoader.Spec) {
    return new CachingClassLoader(parent);
  }
  if (spec instanceof FilteringClassLoader.Spec) {
    FilteringClassLoader.Spec clSpec=(FilteringClassLoader.Spec)spec;
    return doCreateFilteringClassLoader(parent,clSpec);
  }
  throw new IllegalArgumentException(String.format("Don't know how to create a ClassLoader from spec %s",spec));
}
