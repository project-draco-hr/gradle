{
  projectPluginsHandler.usePlugin(JavaPlugin.class,project);
  project.getConvention().getPlugins().put("war",new WarPluginConvention(project));
  project.getTasks().withType(War.class).allTasks(new Action<War>(){
    public void execute(    War task){
      task.getConventionMapping().map(DefaultConventionsToPropertiesMapping.WAR);
      Buildable runtimeClasspath=task.getProject().getConvention().getPlugin(JavaPluginConvention.class).getSource().getByName(SourceSet.MAIN_SOURCE_SET_NAME).getRuntimeClasspath();
      task.dependsOn(runtimeClasspath);
    }
  }
);
  War war=project.getTasks().add(WAR_TASK_NAME,War.class);
  war.setDescription("Generates a war archive with all the compiled classes, the web-app content and the libraries.");
  Configuration archivesConfiguration=project.getConfigurations().getByName(Dependency.ARCHIVES_CONFIGURATION);
  disableJarTaskAndRemoveFromArchivesConfiguration(project,archivesConfiguration);
  archivesConfiguration.addArtifact(new ArchivePublishArtifact(war));
  configureConfigurations(project.getConfigurations());
}
