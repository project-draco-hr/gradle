{
  Configuration compileConfiguration=configurations.findByName(sourceSet.getCompileConfigurationName());
  if (compileConfiguration == null) {
    compileConfiguration=configurations.create(sourceSet.getCompileConfigurationName());
  }
  compileConfiguration.setVisible(false);
  compileConfiguration.setDescription(String.format("Compile dependencies for %s.",sourceSet));
  Configuration runtimeConfiguration=configurations.findByName(sourceSet.getRuntimeConfigurationName());
  if (runtimeConfiguration == null) {
    runtimeConfiguration=configurations.create(sourceSet.getRuntimeConfigurationName());
  }
  runtimeConfiguration.setVisible(false);
  runtimeConfiguration.extendsFrom(compileConfiguration);
  runtimeConfiguration.setDescription(String.format("Runtime classpath for %s.",sourceSet));
  Configuration compileOnlyConfiguration=configurations.findByName(sourceSet.getCompileOnlyConfigurationName());
  if (compileOnlyConfiguration == null) {
    compileOnlyConfiguration=configurations.create(sourceSet.getCompileOnlyConfigurationName());
  }
  compileOnlyConfiguration.setVisible(false);
  compileOnlyConfiguration.extendsFrom(compileConfiguration);
  compileOnlyConfiguration.setDescription(String.format("Compile only classpath for %s.",sourceSet));
  Configuration compileClasspathConfiguration=configurations.findByName(sourceSet.getCompileClasspathConfigurationName());
  if (compileClasspathConfiguration == null) {
    compileClasspathConfiguration=configurations.create(sourceSet.getCompileClasspathConfigurationName());
  }
  compileClasspathConfiguration.setVisible(false);
  compileClasspathConfiguration.extendsFrom(compileOnlyConfiguration);
  compileClasspathConfiguration.setDescription(String.format("Compile classpath for %s.",sourceSet));
  sourceSet.setCompileClasspath(compileClasspathConfiguration);
  sourceSet.setRuntimeClasspath(sourceSet.getOutput().plus(runtimeConfiguration));
}
