{
  project.getTasks().withType(AbstractCompile.class,new Action<AbstractCompile>(){
    public void execute(    final AbstractCompile compile){
      ConventionMapping conventionMapping=compile.getConventionMapping();
      conventionMapping.map("sourceCompatibility",new Callable<Object>(){
        public Object call() throws Exception {
          return javaConvention.getSourceCompatibility().toString();
        }
      }
);
      conventionMapping.map("targetCompatibility",new Callable<Object>(){
        public Object call() throws Exception {
          return javaConvention.getTargetCompatibility().toString();
        }
      }
);
    }
  }
);
  project.getTasks().withType(Compile.class,new Action<Compile>(){
    public void execute(    final Compile compile){
      ConventionMapping conventionMapping=compile.getConventionMapping();
      conventionMapping.map("dependencyCacheDir",new Callable<Object>(){
        public Object call() throws Exception {
          return javaConvention.getDependencyCacheDir();
        }
      }
);
    }
  }
);
}
