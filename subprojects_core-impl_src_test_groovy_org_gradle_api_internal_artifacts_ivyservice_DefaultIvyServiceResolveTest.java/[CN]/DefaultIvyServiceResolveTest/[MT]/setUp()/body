{
  SettingsConverter settingsConverterMock=context.mock(SettingsConverter.class);
  ModuleDescriptorConverter resolveModuleDescriptorConverterStub=context.mock(ModuleDescriptorConverter.class,"resolve");
  ModuleDescriptorConverter publishModuleDescriptorConverterDummy=context.mock(ModuleDescriptorConverter.class,"publish");
  IvyDependencyResolver ivyDependencyResolverMock=context.mock(IvyDependencyResolver.class);
  context.checking(new Expectations(){
{
      allowing(dependencyMetaDataProviderMock).getModule();
      will(returnValue(moduleDummy));
      allowing(resolverProvider).getResolvers();
      will(returnValue(dependencyResolversDummy));
    }
  }
);
  ivyService=new DefaultIvyService(dependencyMetaDataProviderMock,resolverProvider,settingsConverterMock,resolveModuleDescriptorConverterStub,publishModuleDescriptorConverterDummy,publishModuleDescriptorConverterDummy,ivyFactoryStub,ivyDependencyResolverMock,context.mock(IvyDependencyPublisher.class));
}
