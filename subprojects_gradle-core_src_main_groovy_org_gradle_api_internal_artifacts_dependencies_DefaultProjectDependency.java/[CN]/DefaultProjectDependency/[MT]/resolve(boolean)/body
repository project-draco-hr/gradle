{
  if ((transitiveCache == null && transitive) || (nonTransitiveCache == null && !transitive)) {
    Set<File> files=new LinkedHashSet<File>();
    if (!transitive || !isTransitive()) {
      files.addAll(getProjectConfiguration().files(new Spec<Dependency>(){
        public boolean isSatisfiedBy(        Dependency dependency){
          return (dependency instanceof SelfResolvingDependency) && !(dependency instanceof ProjectDependency);
        }
      }
));
    }
 else {
      for (      SelfResolvingDependency selfResolvingDependency : getProjectConfiguration().getAllDependencies(SelfResolvingDependency.class)) {
        files.addAll(selfResolvingDependency.resolve());
      }
    }
    if (transitive) {
      transitiveCache=files;
    }
 else {
      nonTransitiveCache=files;
    }
  }
  return transitive ? transitiveCache : nonTransitiveCache;
}
