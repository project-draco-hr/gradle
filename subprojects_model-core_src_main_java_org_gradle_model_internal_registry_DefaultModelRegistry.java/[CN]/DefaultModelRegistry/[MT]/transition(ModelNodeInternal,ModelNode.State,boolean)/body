{
  ModelPath path=node.getPath();
  ModelNode.State state=node.getState();
  LOGGER.debug("Transitioning model element '{}' from state {} to {}",path,state.name(),desired.name());
  if (desired.ordinal() < state.ordinal()) {
    if (laterOk) {
      return;
    }
 else {
      throw new IllegalStateException("Cannot lifecycle model node '" + path + "' to state "+ desired.name()+ " as it is already at "+ state.name());
    }
  }
  if (state == desired) {
    return;
  }
  GoalGraph goalGraph=new GoalGraph();
  transitionTo(goalGraph,goalGraph.nodeAtState(new NodeIsAtState(node.getPath(),desired)));
}
