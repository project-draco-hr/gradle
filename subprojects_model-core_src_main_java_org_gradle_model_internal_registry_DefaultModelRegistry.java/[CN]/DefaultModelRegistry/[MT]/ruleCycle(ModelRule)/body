{
  boolean cycleStartFound=false;
  String indent="  ";
  StringBuilder prefix=new StringBuilder(indent);
  StringWriter out=new StringWriter();
  PrintWriter writer=new PrintWriter(out);
  writer.println("A cycle has been detected in model rule dependencies. References forming the cycle:");
  for (  Map.Entry<ModelRule,ModelBinding> ruleInputInClosing : rulesWithInputsBeingClosed.entrySet()) {
    ModelRule rule=ruleInputInClosing.getKey();
    ModelRuleDescriptor ruleDescriptor=rule.getDescriptor();
    ModelBinding binding=ruleInputInClosing.getValue();
    if (cycleStartFound) {
      reportRuleInputBeingClosed(indent,prefix,writer,ruleDescriptor,binding);
    }
 else {
      if (rule.equals(cycleStartRule)) {
        cycleStartFound=true;
        reportRuleInputBeingClosed(indent,prefix,writer,ruleDescriptor,binding);
      }
    }
  }
  writer.print(cycleStartRule.getDescriptor().toString());
  return new ConfigurationCycleException(out.toString());
}
