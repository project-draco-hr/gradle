{
  List<ModelView<?>> inputs=toViews(boundMutator.getInputBindings(),boundMutator.getAction());
  ModelNodeInternal node=boundMutator.getSubjectBinding().getNode();
  ModelAction<T> mutator=boundMutator.getAction();
  ModelRuleDescriptor descriptor=mutator.getDescriptor();
  LOGGER.debug("Mutating {} using {}",node.getPath(),mutator.getDescriptor());
  ModelReference<T> reference=Cast.uncheckedCast(boundMutator.getSubjectReference().getReference());
  ModelView<? extends T> view=assertView(node,reference,descriptor,inputs);
  try {
    mutator.execute(node,view.getInstance(),inputs);
  }
 catch (  Exception e) {
    throw new ModelRuleExecutionException(descriptor,e);
  }
 finally {
    view.close();
  }
}
