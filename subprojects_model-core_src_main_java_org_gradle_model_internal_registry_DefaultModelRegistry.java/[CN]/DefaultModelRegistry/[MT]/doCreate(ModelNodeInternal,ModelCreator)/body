{
  ModelPath path=creator.getPath();
  ModelNodeInternal node=modelGraph.find(path);
  if (node != null) {
    if (node.getState() == Known) {
      throw new DuplicateModelException(String.format("Cannot create '%s' using creation rule '%s' as the rule '%s' is already registered to create this model element.",path,toString(creator.getDescriptor()),toString(node.getDescriptor())));
    }
    throw new DuplicateModelException(String.format("Cannot create '%s' using creation rule '%s' as the rule '%s' has already been used to create this model element.",path,toString(creator.getDescriptor()),toString(node.getDescriptor())));
  }
  if (!parent.isMutable()) {
    throw new IllegalStateException(String.format("Cannot create '%s' using creation rule '%s' as model element '%s' is no longer mutable.",path,toString(creator.getDescriptor()),parent.getPath()));
  }
  node=parent.addLink(new ModelElementNode(path,creator.getDescriptor(),creator.getPromise(),creator.getAdapter()));
  modelGraph.add(node);
  bind(creator);
  return node;
}
