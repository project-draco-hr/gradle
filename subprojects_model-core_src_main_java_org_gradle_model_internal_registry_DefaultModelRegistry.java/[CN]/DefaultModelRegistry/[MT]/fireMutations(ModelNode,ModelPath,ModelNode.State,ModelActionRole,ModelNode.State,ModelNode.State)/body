{
  ModelNode.State nodeState=node.getState();
  if (nodeState.ordinal() >= to.ordinal()) {
    return nodeState.ordinal() < desired.ordinal();
  }
  Collection<BoundModelMutator<?>> mutators=this.actions.removeAll(new MutationKey(path,type));
  for (  BoundModelMutator<?> mutator : mutators) {
    fireMutation(node,mutator);
    List<ModelPath> inputPaths=Lists.transform(mutator.getInputs(),new Function<ModelBinding<?>,ModelPath>(){
      @Nullable public ModelPath apply(      ModelBinding<?> input){
        return input.getPath();
      }
    }
);
    usedActions.put(path,inputPaths);
  }
  node.setState(to);
  if (to == desired) {
    LOGGER.debug("Finished transitioning model element {} from state {} to {}",path,originalState.name(),desired.name());
    return false;
  }
 else {
    return true;
  }
}
