{
  return FluentIterable.from(flattened.entrySet()).filter(new Predicate<Map.Entry<ModelPath,ModelNodeImpl>>(){
    public boolean apply(    Map.Entry<ModelPath,ModelNodeImpl> input){
      return input.getValue().equals(node);
    }
  }
).transform(new Function<Map.Entry<ModelPath,ModelNodeImpl>,ModelPath>(){
    public ModelPath apply(    Map.Entry<ModelPath,ModelNodeImpl> input){
      return input.getKey();
    }
  }
).toList();
}
