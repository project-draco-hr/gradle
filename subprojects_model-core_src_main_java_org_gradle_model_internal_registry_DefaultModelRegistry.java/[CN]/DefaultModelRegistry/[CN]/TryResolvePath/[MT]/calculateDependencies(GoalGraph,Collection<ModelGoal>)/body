{
  if (!attemptedParent) {
    dependencies.add(new TryResolvePath(getPath().getParent()));
    attemptedParent=true;
    return false;
  }
  ModelNodeInternal parent=modelGraph.find(getPath().getParent());
  if (parent == null) {
    return true;
  }
  dependencies.add(graph.nodeAtState(new NodeAtState(getPath().getParent(),SelfClosed)));
  if (parent instanceof ModelReferenceNode) {
    ModelReferenceNode parentReference=(ModelReferenceNode)parent;
    ModelCreator creator=ModelCreators.of(getPath()).descriptor(parent.getDescriptor()).withProjection(UnmanagedModelProjection.of(Object.class)).build();
    ModelReferenceNode childNode=new ModelReferenceNode(toCreatorBinder(creator,ModelPath.ROOT),parentReference);
    ModelNodeInternal parentTarget=parentReference.getTarget();
    if (parentTarget != null) {
      childNode.setTarget(parentTarget.getLink(getPath().getName()));
    }
    registerNode(childNode);
  }
  return true;
}
