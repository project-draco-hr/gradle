{
  final ModelType<RuleAwarePolymorphicNamedEntityInstantiator<I>> instantiatorType=ModelRegistryHelper.instantiatorType(itemType);
  ModelType<I> modelType=ModelType.of(itemType);
  return ModelRegistrations.of(path).action(ModelActionRole.Create,new Action<MutableModelNode>(){
    @Override public void execute(    MutableModelNode mutableModelNode){
      RuleAwarePolymorphicNamedEntityInstantiator<I> instantiator=new DefaultRuleAwarePolymorphicNamedEntityInstantiator<I>(new DefaultPolymorphicNamedEntityInstantiator<I>(itemType,"this collection"));
      mutableModelNode.setPrivateData(instantiatorType,instantiator);
    }
  }
).withProjection(ModelMapModelProjection.unmanaged(modelType,ChildNodeInitializerStrategyAccessors.of(NodeBackedModelMap.createUsingParentNode(modelType)))).withProjection(UnmanagedModelProjection.of(instantiatorType)).descriptor(descriptor).build();
}
