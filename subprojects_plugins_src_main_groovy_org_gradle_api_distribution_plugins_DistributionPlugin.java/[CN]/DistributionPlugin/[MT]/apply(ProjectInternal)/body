{
  project.getPluginManager().apply(BasePlugin.class);
  DefaultDistributionContainer distributions=project.getExtensions().create("distributions",DefaultDistributionContainer.class,Distribution.class,instantiator,fileOperations);
  distributions.all(new Action<Distribution>(){
    @Override public void execute(    final Distribution dist){
      ((IConventionAware)dist).getConventionMapping().map("baseName",new Callable<Object>(){
        @Override public Object call() throws Exception {
          return dist.getName().equals(MAIN_DISTRIBUTION_NAME) ? project.getName() : String.format("%s-%s",project.getName(),dist.getName());
        }
      }
);
      dist.getContents().from("src/" + dist.getName() + "/dist");
      String zipTaskName=MAIN_DISTRIBUTION_NAME.equals(dist.getName()) ? TASK_DIST_ZIP_NAME : dist.getName() + "DistZip";
      Task zipTask=configureArchiveTask(project,zipTaskName,dist,Zip.class);
      String tarTaskName=MAIN_DISTRIBUTION_NAME.equals(dist.getName()) ? TASK_DIST_TAR_NAME : dist.getName() + "DistTar";
      Task tarTask=configureArchiveTask(project,tarTaskName,dist,Tar.class);
      addAssembleTask(project,dist,zipTask,tarTask);
      addInstallTask(project,dist);
    }
  }
);
  distributions.create(MAIN_DISTRIBUTION_NAME);
}
