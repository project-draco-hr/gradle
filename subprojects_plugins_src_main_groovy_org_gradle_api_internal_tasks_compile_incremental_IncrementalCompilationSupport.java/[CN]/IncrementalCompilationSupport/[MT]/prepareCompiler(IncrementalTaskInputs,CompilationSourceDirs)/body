{
  if (!inputs.isIncremental()) {
    LOG.lifecycle("{} - is not incremental (e.g. outputs have changed, no previous execution, etc)",displayName);
    return withCompleteAction(cleaningCompiler);
  }
  if (!sourceDirs.areSourceDirsKnown()) {
    LOG.lifecycle("{} - is not incremental. Unable to infer the source directories.",displayName);
    return withCompleteAction(cleaningCompiler);
  }
  if (!dependencyInfoSerializer.isInfoAvailable()) {
    LOG.lifecycle("{} - is not incremental. No class dependency data available from previous build.",displayName);
    return withCompleteAction(cleaningCompiler);
  }
  SelectiveCompiler selectiveCompiler=new SelectiveCompiler(inputs,cleaningCompiler,staleClassDetecter,new IncrementalCompilationInitializer(fileOperations));
  return withCompleteAction(selectiveCompiler);
}
