{
  MetaMethod method=getMetaClass().getMetaMethod(name,params);
  if (method != null) {
    try {
      return method.invoke(delegateObject,params);
    }
 catch (    InvokerInvocationException e) {
      if (e.getCause() instanceof RuntimeException) {
        throw (RuntimeException)e.getCause();
      }
      throw e;
    }
  }
  if (convention != null && convention.hasMethod(name,params)) {
    return convention.invokeMethod(name,params);
  }
  if (parent != null && parent.hasMethod(name,params)) {
    return parent.invokeMethod(name,params);
  }
  throw new MissingMethodException(delegateObject,name,params);
}
