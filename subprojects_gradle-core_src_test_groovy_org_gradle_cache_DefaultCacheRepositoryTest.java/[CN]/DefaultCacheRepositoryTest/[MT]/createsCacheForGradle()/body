{
  final Gradle gradle=context.mock(Gradle.class);
  final Project project=context.mock(Project.class);
  final PersistentCache cache=context.mock(PersistentCache.class);
  context.checking(new Expectations(){
{
      allowing(gradle).getRootProject();
      will(returnValue(project));
      allowing(project).getProjectDir();
      will(returnValue(buildRootDir));
      one(cacheFactory).open(buildRootDir.file(".gradle/" + version + "/a/b/c"),CacheUsage.ON,properties);
      will(returnValue(cache));
    }
  }
);
  assertThat(repository.getCacheFor(gradle,"a/b/c",properties),sameInstance(cache));
}
