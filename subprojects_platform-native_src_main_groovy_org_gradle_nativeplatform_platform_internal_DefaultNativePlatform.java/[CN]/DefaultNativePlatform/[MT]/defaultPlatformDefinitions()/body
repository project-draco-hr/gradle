{
  Set<DefaultNativePlatform> platforms=new LinkedHashSet<DefaultNativePlatform>();
  OperatingSystemInternal windows=new DefaultOperatingSystem("windows");
  OperatingSystemInternal freebsd=new DefaultOperatingSystem("freebsd");
  OperatingSystemInternal linux=new DefaultOperatingSystem("linux");
  OperatingSystemInternal osx=new DefaultOperatingSystem("osx");
  OperatingSystemInternal unix=new DefaultOperatingSystem("unix");
  OperatingSystemInternal solaris=new DefaultOperatingSystem("solaris");
  ArchitectureInternal x86=new DefaultArchitecture("x86",ArchitectureInternal.InstructionSet.X86,32);
  ArchitectureInternal x86_64=new DefaultArchitecture("x86_64",ArchitectureInternal.InstructionSet.X86,64);
  ArchitectureInternal armv7=new DefaultArchitecture("armv7",ArchitectureInternal.InstructionSet.ARM,32);
  ArchitectureInternal armv8=new DefaultArchitecture("armv8",ArchitectureInternal.InstructionSet.ARM,64);
  ArchitectureInternal sparc=new DefaultArchitecture("sparc",ArchitectureInternal.InstructionSet.SPARC,32);
  ArchitectureInternal ultrasparc=new DefaultArchitecture("ultrasparc",ArchitectureInternal.InstructionSet.SPARC,64);
  ArchitectureInternal ppc=new DefaultArchitecture("ppc",ArchitectureInternal.InstructionSet.PPC,32);
  ArchitectureInternal ppc64=new DefaultArchitecture("ppc64",ArchitectureInternal.InstructionSet.PPC,64);
  platforms.add(new DefaultNativePlatform("windows_x86",x86,windows));
  platforms.add(new DefaultNativePlatform("windows_x86_64",x86_64,windows));
  platforms.add(new DefaultNativePlatform("windows_rt_32",armv7,windows));
  platforms.add(new DefaultNativePlatform("freebsd_x86",x86,freebsd));
  platforms.add(new DefaultNativePlatform("freebsd_x86_64",x86_64,freebsd));
  platforms.add(new DefaultNativePlatform("freebsd_armv7",armv7,freebsd));
  platforms.add(new DefaultNativePlatform("freebsd_armv8",armv8,freebsd));
  platforms.add(new DefaultNativePlatform("freebsd_ppc",ppc,freebsd));
  platforms.add(new DefaultNativePlatform("freebsd_ppc64",ppc64,freebsd));
  platforms.add(new DefaultNativePlatform("unix_x86",x86,unix));
  platforms.add(new DefaultNativePlatform("unix_x86_64",x86_64,unix));
  platforms.add(new DefaultNativePlatform("unix_armv7",armv7,unix));
  platforms.add(new DefaultNativePlatform("unix_armv8",armv8,unix));
  platforms.add(new DefaultNativePlatform("unix_ppc",ppc,unix));
  platforms.add(new DefaultNativePlatform("unix_ppc64",ppc64,unix));
  platforms.add(new DefaultNativePlatform("linux_x64",x86_64,linux));
  platforms.add(new DefaultNativePlatform("linux_x86",x86,linux));
  platforms.add(new DefaultNativePlatform("linux_armv7",armv7,linux));
  platforms.add(new DefaultNativePlatform("linux_armv8",armv8,linux));
  platforms.add(new DefaultNativePlatform("osx_x86",x86,osx));
  platforms.add(new DefaultNativePlatform("osx_x64",x86_64,osx));
  platforms.add(new DefaultNativePlatform("solaris_x64",x86_64,solaris));
  platforms.add(new DefaultNativePlatform("solaris_x86",x86,solaris));
  platforms.add(new DefaultNativePlatform("solaris_sparc",sparc,solaris));
  platforms.add(new DefaultNativePlatform("solaris_ultrasparc",ultrasparc,solaris));
  return platforms;
}
