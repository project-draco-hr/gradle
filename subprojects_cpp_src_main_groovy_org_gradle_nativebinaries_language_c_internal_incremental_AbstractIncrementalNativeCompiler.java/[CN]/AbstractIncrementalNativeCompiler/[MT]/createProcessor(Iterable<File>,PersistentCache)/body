{
  PersistentIndexedCache<File,FileState> stateCache=createCache(cache,"state",File.class,new DefaultSerializer<FileState>(FileState.class.getClassLoader()));
  PersistentIndexedCache<String,List<File>> listCache=createCache(cache,"previous",String.class,new DefaultSerializer<List<File>>());
  DefaultSourceIncludesResolver dependencyParser=new DefaultSourceIncludesResolver(CollectionUtils.toList(includes));
  FileSnapshotter snapshotter=new CachingFileSnapshotter(new DefaultHasher(),cache);
  return new IncrementalCompileProcessor(stateCache,listCache,dependencyParser,sourceIncludesParser,snapshotter);
}
