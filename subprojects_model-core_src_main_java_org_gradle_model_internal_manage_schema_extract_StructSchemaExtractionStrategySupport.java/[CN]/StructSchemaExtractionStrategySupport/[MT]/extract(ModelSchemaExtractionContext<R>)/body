{
  ModelType<R> type=extractionContext.getType();
  if (!isTarget(type)) {
    return;
  }
  validateTypeHierarchy(extractionContext,type);
  CandidateMethods candidateMethods=ModelSchemaUtils.getCandidateMethods(type.getRawClass());
  validateMethodDeclarationHierarchy(extractionContext,candidateMethods);
  Iterable<ModelPropertyExtractionContext> candidateProperties=selectProperties(extractionContext,candidateMethods);
  validateProperties(extractionContext,candidateProperties);
  List<ModelProperty<?>> extractedProperties=extractProperties(extractionContext,candidateProperties);
  List<ModelSchemaAspect> aspects=aspectExtractor.extract(extractionContext,extractedProperties);
  ModelSchema<R> schema=createSchema(extractionContext,extractedProperties,aspects);
  for (  ModelProperty<?> property : extractedProperties) {
    toPropertyExtractionContext(extractionContext,property);
  }
  extractionContext.found(schema);
}
