{
  for (  ModelPropertyExtractionContext property : properties) {
    PropertyAccessorExtractionContext getGetter=property.getAccessor(PropertyAccessorType.GET_GETTER);
    PropertyAccessorExtractionContext isGetter=property.getAccessor(PropertyAccessorType.IS_GETTER);
    if (getGetter != null && isGetter != null) {
      Method getMethod=getGetter.getMostSpecificDeclaration();
      Method isMethod=isGetter.getMostSpecificDeclaration();
      if (getMethod.getReturnType() != boolean.class || isMethod.getReturnType() != boolean.class) {
        handleInvalidGetter(context,isMethod,String.format("property '%s' has both '%s()' and '%s()' getters, but they don't both return a boolean",property.getPropertyName(),isMethod.getName(),getMethod.getName()));
      }
    }
    if (isGetter != null) {
      Method isMethod=isGetter.getMostSpecificDeclaration();
      if (isMethod.getReturnType() != boolean.class) {
        handleInvalidGetter(context,isMethod,"getter method name must start with 'get'");
      }
    }
    validateProperty(context,property);
  }
}
