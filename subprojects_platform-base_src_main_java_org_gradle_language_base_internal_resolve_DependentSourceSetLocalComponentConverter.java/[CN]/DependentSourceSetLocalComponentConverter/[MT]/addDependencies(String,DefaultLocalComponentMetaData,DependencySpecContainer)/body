{
  ModuleVersionIdentifier mvi=metaData.getId();
  for (  DependencySpec dependency : allDependencies.getDependencies()) {
    String projectPath=dependency.getProjectPath();
    String libraryName=dependency.getLibraryName();
    if (projectPath == null && libraryName != null && libraryName.contains(":")) {
      String[] components=libraryName.split(":");
      ModuleVersionSelector requested=new DefaultModuleVersionSelector(components[0],components[1],components[2]);
      ModuleComponentSelector selector=DefaultModuleComponentSelector.newSelector(requested);
      metaData.addDependency(createDependencyMetaData(selector,requested,"compile"));
    }
 else {
      if (Strings.isNullOrEmpty(projectPath)) {
        projectPath=defaultProject;
      }
      ComponentSelector selector=new DefaultLibraryComponentSelector(projectPath,libraryName);
      DefaultModuleVersionSelector requested=new DefaultModuleVersionSelector(Strings.nullToEmpty(projectPath),Strings.nullToEmpty(libraryName),mvi.getVersion());
      DependencyMetaData localComponentDependencyMetaData=createDependencyMetaData(selector,requested,DefaultLibraryBinaryIdentifier.CONFIGURATION_NAME);
      metaData.addDependency(localComponentDependencyMetaData);
    }
  }
}
