{
  return Proxy.newProxyInstance(classLoader,new Class<?>[]{getBuildLinkClass(classLoader)},new InvocationHandler(){
    private volatile boolean shouldReloadNextTime=true;
    public Object invoke(    Object proxy,    Method method,    Object[] args) throws Throwable {
      if (method.getName().equals("projectPath")) {
        return projectPath;
      }
 else       if (method.getName().equals("reload")) {
        if (shouldReloadNextTime) {
          shouldReloadNextTime=false;
          DefaultClassPath projectClasspath=new DefaultClassPath(classpath);
          return new URLClassLoader(projectClasspath.getAsURLs().toArray(new URL[]{}),Thread.currentThread().getContextClassLoader());
        }
 else {
          return null;
        }
      }
 else       if (method.getName().equals("settings")) {
        return new HashMap<String,String>();
      }
      return null;
    }
  }
);
}
