{
  final ClassLoader assetsClassLoader=createAssetsClassLoader(assetsJar,assetsDirs,classLoader);
  forceReloadNextTime(BuildStatus.SUCCESS);
  final ExceptionAdapter exceptionAdapter=new DefaultExceptionAdapter(classLoader);
  return Proxy.newProxyInstance(classLoader,new Class<?>[]{getBuildLinkClass(classLoader)},new InvocationHandler(){
    public Object invoke(    Object proxy,    Method method,    Object[] args) throws Throwable {
      if (method.getName().equals("projectPath")) {
        return projectPath;
      }
 else       if (method.getName().equals("reload")) {
        closeOldLoaders();
        BuildStatus reason=reload.get();
        if (reason == null) {
          return null;
        }
 else         if (reason.isSuccessful()) {
          reload.compareAndSet(reason,null);
          ClassPath classpath=new DefaultClassPath(applicationJar).plus(new DefaultClassPath(changingClasspath));
          URLClassLoader currentClassLoader=new URLClassLoader(classpath.getAsURLArray(),assetsClassLoader);
          storeClassLoader(currentClassLoader);
          return currentClassLoader;
        }
 else {
          Throwable failure=reason.getFailure();
          return exceptionAdapter.adapt("Gradle Build Failure",failure.getMessage(),failure);
        }
      }
 else       if (method.getName().equals("settings")) {
        return new HashMap<String,String>();
      }
      return null;
    }
  }
);
}
