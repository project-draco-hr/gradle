{
  ByteArrayOutputStream outStream=new ByteArrayOutputStream();
  ByteArrayOutputStream errStream=new ByteArrayOutputStream();
  String gradleHome=distribution.getGradleHomeDir().toString();
  ExecHandleBuilder builder=new ExecHandleBuilder();
  builder.standardOutput(outStream);
  builder.errorOutput(errStream);
  builder.environment("GRADLE_HOME","");
  builder.environment("JAVA_HOME",System.getProperty("java.home"));
  builder.environment("GRADLE_OPTS","-ea");
  builder.environment(environmentVars);
  builder.workingDir(getWorkingDir());
  if (Os.isFamily(Os.FAMILY_WINDOWS)) {
    builder.executable("cmd");
    builder.arguments("/c",windowsCommandSnippet);
    builder.environment("Path",String.format("%s\\bin;%s",gradleHome,System.getenv("Path")));
    builder.environment("GRADLE_EXIT_CONSOLE","true");
  }
 else {
    builder.executable(unixCommandSnippet);
  }
  builder.arguments(getAllArgs());
  LOG.info(String.format("Execute in %s with: %s %s",builder.getWorkingDir(),builder.getExecutable(),builder.getArguments()));
  ExecHandle proc=builder.build();
  proc.startAndWaitForFinish();
  int exitValue=proc.getExitCode();
  String output=outStream.toString();
  String error=errStream.toString();
  boolean failed=exitValue != 0;
  LOG.info("OUTPUT: " + output);
  LOG.info("ERROR: " + error);
  if (failed != expectFailure) {
    System.out.format("Gradle execution %s in %s with: %s %s",expectFailure ? "did not fail" : "failed",builder.getWorkingDir(),builder.getExecutable(),builder.getArguments());
    System.out.format(String.format("Process Output:%n%s",output));
    System.out.format(String.format("Process Error:%n%s",error));
    throw new RuntimeException(String.format("Integrationtests failed with: %s %s",output,error));
  }
  return GUtil.map("output",output,"error",error);
}
