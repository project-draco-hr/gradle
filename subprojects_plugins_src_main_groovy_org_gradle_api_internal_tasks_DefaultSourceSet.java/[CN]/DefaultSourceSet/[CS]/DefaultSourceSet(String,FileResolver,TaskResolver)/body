{
  this.name=name;
  this.fileResolver=fileResolver;
  displayName=GUtil.toWords(this.name);
  String javaSrcDisplayName=String.format("%s Java source",displayName);
  javaSource=new DefaultSourceDirectorySet(javaSrcDisplayName,fileResolver);
  javaSource.getFilter().include("**/*.java");
  allJavaSource=new UnionFileTree(javaSrcDisplayName,javaSource.matching(javaSource.getFilter()));
  String resourcesDisplayName=String.format("%s resources",displayName);
  resources=new DefaultSourceDirectorySet(resourcesDisplayName,fileResolver);
  resources.getFilter().exclude(new Spec<FileTreeElement>(){
    public boolean isSatisfiedBy(    FileTreeElement element){
      return javaSource.contains(element.getFile());
    }
  }
);
  String allSourceDisplayName=String.format("%s source",displayName);
  allSource=new UnionFileTree(allSourceDisplayName,resources,javaSource);
  String classesDisplayName=String.format("%s classes",displayName);
  classes=new PathResolvingFileCollection(classesDisplayName,fileResolver,taskResolver,new Callable(){
    public Object call() throws Exception {
      return getClassesDir();
    }
  }
);
}
