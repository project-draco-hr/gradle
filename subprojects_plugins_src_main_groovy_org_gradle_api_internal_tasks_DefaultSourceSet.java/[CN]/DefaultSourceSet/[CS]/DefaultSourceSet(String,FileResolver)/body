{
  this.name=name;
  displayName=GUtil.toWords(this.name);
  namingScheme=new ClassDirectoryBinaryNamingScheme(name);
  String javaSrcDisplayName=String.format("%s Java source",displayName);
  javaSource=new DefaultSourceDirectorySet(javaSrcDisplayName,fileResolver);
  javaSource.getFilter().include("**/*.java");
  allJavaSource=new DefaultSourceDirectorySet(javaSrcDisplayName,fileResolver);
  allJavaSource.getFilter().include("**/*.java");
  allJavaSource.source(javaSource);
  String resourcesDisplayName=String.format("%s resources",displayName);
  resources=new DefaultSourceDirectorySet(resourcesDisplayName,fileResolver);
  resources.getFilter().exclude(new Spec<FileTreeElement>(){
    public boolean isSatisfiedBy(    FileTreeElement element){
      return javaSource.contains(element.getFile());
    }
  }
);
  String allSourceDisplayName=String.format("%s source",displayName);
  allSource=new DefaultSourceDirectorySet(allSourceDisplayName,fileResolver);
  allSource.source(resources);
  allSource.source(javaSource);
}
