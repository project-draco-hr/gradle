{
  descriptor.getOrCreate("name").setValue(name);
  Node genMakeBuilderBuildCommand=descriptor.findBuildCommand(new Closure<Boolean>(this,this){
    public Boolean doCall(    Node it){
      Node name=(Node)it.getAt(new QName("name")).get(0);
      return name.text().equals("org.eclipse.cdt.managedbuilder.core.genmakebuilder");
    }
  }
);
  if (genMakeBuilderBuildCommand != null) {
    Node arguments=(Node)genMakeBuilderBuildCommand.getAt(new QName("arguments")).get(0);
    NodeList dictionary=arguments.getAt(new QName("dictionary"));
    Node buildLocation=(Node)Iterables.find(dictionary,new Predicate(){
      @Override public boolean apply(      Object entry){
        Node key=(Node)((Node)entry).getAt(new QName("key")).get(0);
        return key.text().equals("org.eclipse.cdt.make.core.buildLocation");
      }
    }
);
    if (buildLocation != null) {
      Node value=(Node)buildLocation.getAt(new QName("value")).get(0);
      value.setValue("${workspace_loc:/" + name + "/Debug}");
    }
  }
}
