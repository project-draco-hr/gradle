{
  final String languageName=((LanguageTypeBuilderInternal)builder).getLanguageName();
  if (!ModelType.of(LanguageSourceSet.class).equals(publicModelType) && StringUtils.isEmpty(languageName)) {
    throw new InvalidModelException(String.format("Language type '%s' cannot be registered without a language name.",publicModelType));
  }
  ModelAction<LanguageSourceSetFactory> regAction=NoInputsModelAction.of(ModelReference.of(LanguageSourceSetFactory.class),ruleDefinition.getDescriptor(),new Action<LanguageSourceSetFactory>(){
    @Override public void execute(    LanguageSourceSetFactory sourceSetFactory){
      ModelType<? extends P> castedImplModelType=Cast.uncheckedCast(implModelType);
      sourceSetFactory.register(languageName,publicModelType,builder.getInternalViews(),castedImplModelType,ruleDefinition.getDescriptor());
    }
  }
);
  return new ExtractedModelAction(ModelActionRole.Defaults,ImmutableList.<Class<?>>of(ComponentModelBasePlugin.class),regAction);
}
