{
  final String languageName=((LanguageTypeBuilderInternal)builder).getLanguageName();
  if (StringUtils.isEmpty(languageName)) {
    throw new InvalidModelException(String.format("Language type '%s' cannot be registered without a language name.",publicModelType));
  }
  ModelAction<LanguageRegistry> regAction=NoInputsModelAction.of(ModelReference.of(LanguageRegistry.class),ruleDefinition.getDescriptor(),new Action<LanguageRegistry>(){
    @Override public void execute(    LanguageRegistry languageRegistry){
      ModelType<? extends P> castedImplModelType=Cast.uncheckedCast(implModelType);
      languageRegistry.add(new NamedLanguageRegistration<P>(languageName,publicModelType,builder.getInternalViews(),castedImplModelType,ruleDefinition.getDescriptor()));
    }
  }
);
  return new ExtractedModelAction(ModelActionRole.Defaults,ImmutableList.<Class<?>>of(ComponentModelBasePlugin.class),regAction);
}
