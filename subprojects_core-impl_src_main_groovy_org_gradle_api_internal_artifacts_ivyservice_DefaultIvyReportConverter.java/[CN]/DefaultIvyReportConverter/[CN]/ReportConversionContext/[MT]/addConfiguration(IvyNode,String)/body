{
  ModuleRevisionId actualId=ivyNode.getResolvedId();
  Set<String> configurations=getConfigurationHierarchy(ivyNode,configuration);
  DefaultResolvedDependency resolvedDependency;
  if (actualId.getAttribute(DependencyDescriptorFactory.PROJECT_PATH_KEY) != null) {
    resolvedDependency=new DefaultResolvedDependency(actualId.getAttribute(DependencyDescriptorFactory.PROJECT_PATH_KEY),actualId.getOrganisation(),actualId.getName(),actualId.getRevision(),configuration);
  }
 else {
    resolvedDependency=new DefaultResolvedDependency(actualId.getOrganisation(),actualId.getName(),actualId.getRevision(),configuration);
  }
  Set<ResolvedArtifact> moduleArtifacts=getArtifacts(resolvedDependency,ivyNode);
  for (  ResolvedArtifact artifact : moduleArtifacts) {
    resolvedDependency.addModuleArtifact(artifact);
  }
  ConfigurationDetails configurationDetails=new ConfigurationDetails(resolvedDependency,ivyNode,configurations);
  this.configurations.put(resolvedDependency.getId(),configurationDetails);
  ResolvedConfigurationIdentifier originalId=new ResolvedConfigurationIdentifier(ivyNode.getId(),configuration);
  if (firstLevelDependenciesModuleRevisionIds.containsKey(originalId)) {
    ModuleDependency firstLevelNode=firstLevelDependenciesModuleRevisionIds.get(originalId);
    firstLevelResolvedDependencies.get(firstLevelNode).add(resolvedDependency);
  }
  return configurationDetails;
}
