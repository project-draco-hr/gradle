{
  ModuleRevisionId actualId=ivyNode.getResolvedId();
  Map<String,ConfigurationDetails> configurationsForNode=handledNodes.get(actualId);
  if (configurationsForNode == null) {
    configurationsForNode=new LinkedHashMap<String,ConfigurationDetails>();
    handledNodes.put(actualId,configurationsForNode);
  }
  ConfigurationDetails configurationDetails=configurationsForNode.get(configuration);
  if (configurationDetails != null) {
    return configurationDetails;
  }
  configurationDetails=createConfiguration(ivyNode,configuration);
  this.configurations.put(configurationDetails.dependency.getId(),configurationDetails);
  configurationsForNode.put(configuration,configurationDetails);
  ResolvedConfigurationIdentifier originalId=new ResolvedConfigurationIdentifier(ivyNode.getId(),configuration);
  if (firstLevelDependenciesModuleRevisionIds.containsKey(originalId)) {
    ModuleDependency firstLevelNode=firstLevelDependenciesModuleRevisionIds.get(originalId);
    firstLevelResolvedDependencies.get(firstLevelNode).add(configurationDetails.dependency);
  }
  return configurationDetails;
}
