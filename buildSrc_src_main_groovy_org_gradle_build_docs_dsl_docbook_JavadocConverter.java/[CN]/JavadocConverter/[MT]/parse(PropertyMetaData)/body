{
  CommentSource commentSource=new CommentSource(){
    public Iterable<? extends Node> getCommentText(){
      PropertyMetaData overriddenProperty=propertyMetaData.getOverriddenProperty();
      if (overriddenProperty == null) {
        return Arrays.asList(document.createTextNode("!!NO INHERITED DOC COMMENT!!"));
      }
      return parse(overriddenProperty).getDocbook();
    }
  }
;
  ClassMetaData ownerClass=propertyMetaData.getOwnerClass();
  String rawCommentText=propertyMetaData.getRawCommentText();
  try {
    DocCommentImpl docComment=parse(rawCommentText,ownerClass,commentSource);
    adjustGetterComment(docComment);
    return docComment;
  }
 catch (  Exception e) {
    throw new GradleException(String.format("Could not convert javadoc comment to docbook.%nClass: %s%nProperty: %s%nComment: %s",ownerClass.getClassName(),propertyMetaData.getName(),rawCommentText),e);
  }
}
