{
  super.visitEnd();
  adapter.visit(classSig.getVersion(),classSig.getAccess(),classSig.getName(),classSig.getSignature(),classSig.getSuperName(),classSig.getInterfaces());
  visitAnnotationSigs(Sets.newTreeSet(classSig.getAnnotations()));
  for (  MethodSig method : Sets.newTreeSet(methods)) {
    MethodVisitor mv=adapter.visitMethod(method.getAccess(),method.getName(),method.getDesc(),method.getSignature(),method.getExceptions().toArray(new String[method.getExceptions().size()]));
    visitAnnotationSigs(mv,Sets.newTreeSet(method.getAnnotations()));
    visitAnnotationSigs(mv,Sets.newTreeSet(method.getParameterAnnotations()));
    mv.visitEnd();
  }
  for (  FieldSig field : Sets.newTreeSet(fields)) {
    FieldVisitor fieldVisitor=adapter.visitField(field.getAccess(),field.getName(),field.getDesc(),field.getSignature(),null);
    visitAnnotationSigs(fieldVisitor,Sets.newTreeSet(field.getAnnotations()));
    fieldVisitor.visitEnd();
  }
  for (  InnerClassSig innerClass : Sets.newTreeSet(innerClasses)) {
    adapter.visitInnerClass(innerClass.getName(),innerClass.getOuterName(),innerClass.getInnerName(),innerClass.getAccess());
  }
  adapter.visitEnd();
}
