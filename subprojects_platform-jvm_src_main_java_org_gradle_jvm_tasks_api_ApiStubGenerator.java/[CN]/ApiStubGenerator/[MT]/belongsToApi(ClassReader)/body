{
  final AtomicBoolean isAPI=new AtomicBoolean();
  cr.accept(new ClassVisitor(Opcodes.ASM5){
    @Override public void visit(    int version,    int access,    String name,    String signature,    String superName,    String[] interfaces){
      String className=AsmUtils.convertInternalNameToClassName(name);
      isAPI.set(memberOfApiChecker.belongsToApi(className) && isPublicAPI(access) && !AIC_LOCAL_CLASS_PATTERN.matcher(name).matches());
    }
  }
,ClassReader.SKIP_CODE | ClassReader.SKIP_FRAMES | ClassReader.SKIP_DEBUG);
  return isAPI.get();
}
