{
  Multiset duplicatedAuthentications=HashMultiset.create();
  for (  Authentication authentication : authentications) {
    boolean isAuthenticationSupported=false;
    Class declaredClass=new DslObject(authentication).getDeclaredType();
    Credentials credentials=((AuthenticationInternal)authentication).getCredentials();
    for (    Class<?> authenticationType : factory.getSupportedAuthentication()) {
      if (authenticationType.isAssignableFrom(authentication.getClass())) {
        isAuthenticationSupported=true;
        break;
      }
    }
    if (!isAuthenticationSupported) {
      throw new InvalidUserDataException(String.format("Authentication scheme of '%s' is not supported by protocols %s",declaredClass.getSimpleName(),factory.getSupportedProtocols()));
    }
    if (credentials != null) {
      if (!((AuthenticationInternal)authentication).supports(credentials)) {
        throw new InvalidUserDataException(String.format("Credentials type of '%s' is not supported by authentication scheme '%s'",credentials.getClass().getSimpleName(),declaredClass.getSimpleName()));
      }
    }
 else {
      throw new InvalidUserDataException("You cannot configure authentication schemes for a repository if no credentials are provided.");
    }
    int count=duplicatedAuthentications.add(declaredClass,1);
    if (count > 0) {
      throw new InvalidUserDataException(String.format("You cannot configure multiple authentication schemes of the same type '%s'.",declaredClass.getSimpleName()));
    }
  }
}
