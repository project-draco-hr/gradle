{
  final FileCopyDetailsInternal dir1=file("a/b/c",true,true);
  final FileCopyDetailsInternal file1=file("a/b/c/file",false,true);
  decorator.execute(new CopyActionProcessingStream(){
    public void process(    CopyActionProcessingStreamAction action){
      context.checking(new Expectations(){
{
          one(delegateAction).processFile(with(hasPath("a")));
          one(delegateAction).processFile(with(hasPath("a/b")));
          one(delegateAction).processFile(dir1);
          one(delegateAction).processFile(file1);
        }
      }
);
      action.processFile(dir1);
      action.processFile(file1);
      final FileCopyDetailsInternal dir2=file("a/b/d/e",true,true);
      final FileCopyDetailsInternal file2=file("a/b/d/e/file",false,true);
      context.checking(new Expectations(){
{
          one(delegateAction).processFile(with(hasPath("a/b/d")));
          one(delegateAction).processFile(dir2);
          one(delegateAction).processFile(file2);
        }
      }
);
      action.processFile(dir2);
      action.processFile(file2);
    }
  }
);
}
