{
  while (serverSocket != null) {
    Socket socket=null;
    try {
      socket=serverSocket.accept();
      socket.setSoLinger(false,0);
      LineNumberReader lin=new LineNumberReader(new InputStreamReader(socket.getInputStream()));
      String key=lin.readLine();
      if (!this.key.equals(key)) {
        continue;
      }
      String cmd=lin.readLine();
      if ("stop".equals(cmd)) {
        try {
          socket.close();
        }
 catch (        Exception e) {
          LOGGER.debug("Exception when stopping server",e);
        }
        try {
          socket.close();
        }
 catch (        Exception e) {
          LOGGER.debug("Exception when stopping server",e);
        }
        try {
          serverSocket.close();
        }
 catch (        Exception e) {
          LOGGER.debug("Exception when stopping server",e);
        }
        serverSocket=null;
        if (kill) {
          LOGGER.info("Killing Jetty");
          System.exit(0);
        }
 else {
          for (int i=0; servers != null && i < servers.length; i++) {
            try {
              LOGGER.info("Stopping server " + i);
              servers[i].stop();
            }
 catch (            Exception e) {
              LOGGER.error("Exception when stopping server",e);
            }
          }
        }
      }
 else {
        LOGGER.info("Unsupported monitor operation");
      }
    }
 catch (    Exception e) {
      LOGGER.error("Exception during monitoring Server",e);
    }
 finally {
      if (socket != null) {
        try {
          socket.close();
        }
 catch (        Exception e) {
          LOGGER.debug("Exception when stopping server",e);
        }
      }
      socket=null;
    }
  }
}
