{
  workQueue.dispatch(new Runnable(){
    public void run(){
      try {
        if (message instanceof RouteAvailableMessage) {
          RouteAvailableMessage routeAvailableMessage=(RouteAvailableMessage)message;
          LOGGER.debug("Received route available. Message: {}",routeAvailableMessage);
          Route route=new Route(routeAvailableMessage.getId(),Endpoint.this,routeAvailableMessage);
          routes.add(route);
          owner.addRoute(route);
        }
 else         if (message instanceof RouteUnavailableMessage) {
          RouteUnavailableMessage routeUnavailableMessage=(RouteUnavailableMessage)message;
          LOGGER.debug("Received route unavailable. Message: {}",routeUnavailableMessage);
          Route route=owner.removeRoute(routeUnavailableMessage.getId());
          routes.remove(route);
        }
 else         if (message instanceof RoutableMessage) {
          RoutableMessage routableMessage=(RoutableMessage)message;
          peerGroup.send(routableMessage.getDestination(),message);
        }
 else         if (message instanceof EndOfStreamEvent) {
          for (          Route route : routes) {
            LOGGER.debug("Removing route {} due to end of stream.",route.id);
            owner.removeRoute(route.id);
          }
          owner.removeEndpoint(Endpoint.this);
          dispatchIncoming(message);
        }
 else {
          throw new UnsupportedOperationException(String.format("Received message which cannot be routed: %s.",message));
        }
      }
 catch (      Throwable throwable) {
        failureHandler.dispatchFailed(message,throwable);
      }
    }
  }
);
}
