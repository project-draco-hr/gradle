{
  EclipseModel eclipseModel=project.getExtensions().findByType(EclipseModel.class);
  if (eclipseModel != null) {
    EclipseWtp eclipseWtp=eclipseModel.getWtp();
    if (eclipseWtp != null) {
      boolean isUtilityProject=!project.getPlugins().hasPlugin(WarPlugin.class) && !project.getPlugins().hasPlugin(EarPlugin.class);
      Ear ear=(Ear)project.getTasks().findByName(EarPlugin.EAR_TASK_NAME);
      String libDirName=ear == null ? DEFAULT_DEPLOY_DIR_NAME : ear.getLibDirName();
      IdeDependenciesExtractor depsExtractor=new IdeDependenciesExtractor();
      EclipseWtpComponent wtpComponent=eclipseWtp.getComponent();
      Set<Configuration> rootConfigs=wtpComponent.getRootConfigurations();
      Set<Configuration> libConfigs=wtpComponent.getLibConfigurations();
      Set<Configuration> minusConfigs=wtpComponent.getMinusConfigurations();
      return new DefaultWtpClasspathAttributeSupport(depsExtractor,isUtilityProject,libDirName,rootConfigs,libConfigs,minusConfigs);
    }
  }
  return new NoOpWtpClasspathAttributeSupport();
}
