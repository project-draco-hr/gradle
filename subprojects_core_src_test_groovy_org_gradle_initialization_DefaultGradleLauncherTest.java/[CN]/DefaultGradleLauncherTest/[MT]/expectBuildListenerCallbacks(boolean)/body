{
  context.checking(new Expectations(){
{
      one(buildBroadcaster).buildStarted(gradleMock);
      one(buildBroadcaster).projectsLoaded(gradleMock);
      one(buildBroadcaster).projectsEvaluated(gradleMock);
      one(buildBroadcaster).buildFinished(with(result(nullValue(Throwable.class))));
      one(modelListenerMock).onConfigure(gradleMock);
      startEvent(this,InternalBuildListener.BUILD_TYPE);
      startEvent(this,InternalBuildListener.EVAL_INIT_SCRIPTS);
      finishEvent(this,InternalBuildListener.EVAL_INIT_SCRIPTS);
      startEvent(this,InternalBuildListener.SETTINGS_EVAL_TYPE);
      finishEvent(this,InternalBuildListener.SETTINGS_EVAL_TYPE);
      startEvent(this,InternalBuildListener.PROJECTS_LOADING_TYPE);
      finishEvent(this,InternalBuildListener.PROJECTS_LOADING_TYPE);
      startEvent(this,InternalBuildListener.CONFIGURE_BUILD_TYPE);
      startEvent(this,InternalBuildListener.PROJECTS_EVALUATION_TYPE);
      finishEvent(this,InternalBuildListener.PROJECTS_EVALUATION_TYPE);
      finishEvent(this,InternalBuildListener.CONFIGURE_BUILD_TYPE);
      if (execute) {
        startEvent(this,InternalBuildListener.POPULATE_TASKS_TYPE);
        finishEvent(this,InternalBuildListener.POPULATE_TASKS_TYPE);
        startEvent(this,InternalBuildListener.EXECUTE_BUILD_TYPE);
        finishEvent(this,InternalBuildListener.EXECUTE_BUILD_TYPE);
      }
      finishEvent(this,InternalBuildListener.BUILD_TYPE);
    }
  }
);
}
