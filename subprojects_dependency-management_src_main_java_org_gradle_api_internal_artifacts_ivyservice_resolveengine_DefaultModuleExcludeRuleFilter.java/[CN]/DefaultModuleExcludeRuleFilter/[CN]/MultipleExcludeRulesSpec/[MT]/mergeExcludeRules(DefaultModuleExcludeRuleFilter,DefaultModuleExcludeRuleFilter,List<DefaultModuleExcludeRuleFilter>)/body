{
  if (spec1 instanceof ExcludeAllModulesSpec) {
    merged.add(spec2);
  }
 else   if (spec2 instanceof ExcludeAllModulesSpec) {
    merged.add(spec1);
  }
 else   if (spec1 instanceof ArtifactExcludeSpec) {
    merged.add(spec1);
  }
 else   if (spec2 instanceof ArtifactExcludeSpec) {
    merged.add(spec2);
  }
 else   if (spec1 instanceof GroupNameExcludeSpec) {
    mergeExcludeRules((GroupNameExcludeSpec)spec1,spec2,merged);
  }
 else   if (spec2 instanceof GroupNameExcludeSpec) {
    mergeExcludeRules((GroupNameExcludeSpec)spec2,spec1,merged);
  }
 else   if (spec1 instanceof ModuleNameExcludeSpec) {
    mergeExcludeRules((ModuleNameExcludeSpec)spec1,spec2,merged);
  }
 else   if (spec2 instanceof ModuleNameExcludeSpec) {
    mergeExcludeRules((ModuleNameExcludeSpec)spec2,spec1,merged);
  }
 else   if ((spec1 instanceof ModuleIdExcludeSpec) && (spec2 instanceof ModuleIdExcludeSpec)) {
    ModuleIdExcludeSpec moduleSpec1=(ModuleIdExcludeSpec)spec1;
    ModuleIdExcludeSpec moduleSpec2=(ModuleIdExcludeSpec)spec2;
    if (moduleSpec1.moduleId.equals(moduleSpec2.moduleId)) {
      merged.add(moduleSpec1);
    }
  }
 else {
    throw new UnsupportedOperationException(String.format("Cannot calculate intersection of exclude rules: %s, %s",spec1,spec2));
  }
}
