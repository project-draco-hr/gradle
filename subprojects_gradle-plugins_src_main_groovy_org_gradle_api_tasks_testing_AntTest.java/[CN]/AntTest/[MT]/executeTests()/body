{
  final WorkerProcessFactory workerFactory=getServices().get(WorkerProcessFactory.class);
  final TestFrameworkInstance testFrameworkInstance=getTestFramework();
  final TestClassProcessorFactory testInstanceFactory=testFrameworkInstance.getProcessorFactory();
  TestClassProcessorFactory processorFactory=new TestClassProcessorFactory(){
    public TestClassProcessor create(){
      return new ForkingTestClassProcessor(workerFactory,testInstanceFactory,options,getClasspath(),testFrameworkInstance.getWorkerConfigurationAction());
    }
  }
;
  TestClassProcessor processor;
  if (getForkEvery() != null) {
    processor=new RestartEveryNTestClassProcessor(processorFactory,getForkEvery());
  }
 else {
    processor=processorFactory.create();
  }
  TestSummaryListener listener=new TestSummaryListener(LoggerFactory.getLogger(AntTest.class));
  addTestListener(listener);
  TestListener broadcaster=getTestListenerBroadcaster().getSource();
  broadcaster.beforeSuite(new RootTestSuite());
  processor.startProcessing(broadcaster);
  TestClassScanner testClassScanner=testClassScannerFactory.createTestClassScanner(this,processor);
  testClassScanner.run();
  processor.endProcessing();
  broadcaster.afterSuite(new RootTestSuite());
  testFrameworkInstance.report();
  if (!isIgnoreFailures() && listener.hadFailures()) {
    throw new GradleException("There were failing tests. See the report at " + getTestReportDir() + ".");
  }
}
