{
  File[] children=file.listFiles();
  if (children == null) {
    if (file.isDirectory() && !file.canRead()) {
      throw new GradleException(String.format("Could not list contents of directory '%s' as it is not readable.",file));
    }
    throw new GradleException(String.format("Could not list contents of '%s'.",file));
  }
  List<FileVisitDetails> dirs=new ArrayList<FileVisitDetails>();
  for (int i=0; !stopFlag.get() && i < children.length; i++) {
    File child=children[i];
    boolean isFile=child.isFile();
    RelativePath childPath=path.append(isFile,relativePathStringInterner.intern(child.getName()));
    FileVisitDetails details=new CachingFileVisitDetails(child,childPath,stopFlag,fileSystem,fileSystem,!isFile);
    if (DirectoryFileTree.isAllowed(details,spec)) {
      if (isFile) {
        visitor.visitFile(details);
      }
 else {
        dirs.add(details);
      }
    }
  }
  for (int i=0; !stopFlag.get() && i < dirs.size(); i++) {
    FileVisitDetails dir=dirs.get(i);
    if (postfix) {
      walkDir(dir.getFile(),dir.getRelativePath(),visitor,spec,stopFlag,fileSystem,postfix);
      visitor.visitDir(dir);
    }
 else {
      visitor.visitDir(dir);
      walkDir(dir.getFile(),dir.getRelativePath(),visitor,spec,stopFlag,fileSystem,postfix);
    }
  }
}
