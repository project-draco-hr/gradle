{
  MethodModelRuleExtractor handler=null;
  for (  MethodModelRuleExtractor candidateHandler : handlers) {
    if (candidateHandler.isSatisfiedBy(ruleDefinition)) {
      if (handler == null) {
        handler=candidateHandler;
      }
 else {
        problems.add(method,"can only be one of " + describeHandlers());
        validateRuleMethod(method,problems);
        return null;
      }
    }
  }
  if (handler != null) {
    validateRuleMethod(method,problems);
    return handler.registration(ruleDefinition,problems);
  }
 else {
    validateNonRuleMethod(method,problems);
    return null;
  }
}
