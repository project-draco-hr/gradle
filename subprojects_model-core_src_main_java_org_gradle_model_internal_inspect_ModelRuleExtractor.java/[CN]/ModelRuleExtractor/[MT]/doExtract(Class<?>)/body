{
  validate(source);
  final Method[] methods=source.getDeclaredMethods();
  Arrays.sort(methods,new Comparator<Method>(){
    public int compare(    Method o1,    Method o2){
      return o1.toString().compareTo(o2.toString());
    }
  }
);
  ImmutableList.Builder<ExtractedModelRule> registrations=ImmutableList.builder();
  for (  Method method : methods) {
    MethodRuleDefinition<?,?> ruleDefinition=DefaultMethodRuleDefinition.create(source,method);
    MethodModelRuleExtractor handler=getMethodHandler(ruleDefinition);
    if (handler != null) {
      validateRuleMethod(method);
      ExtractedModelRule registration=handler.registration(ruleDefinition);
      if (registration != null) {
        registrations.add(registration);
      }
    }
 else {
      validateNonRuleMethod(method);
    }
  }
  return registrations.build();
}
