{
  ValidationProblemCollector problems=new ValidationProblemCollector(ModelType.of(source));
  validate(source,problems);
  final Method[] methods=source.getDeclaredMethods();
  Arrays.sort(methods,new Comparator<Method>(){
    public int compare(    Method o1,    Method o2){
      return o1.toString().compareTo(o2.toString());
    }
  }
);
  ImmutableList.Builder<ExtractedModelRule> registrations=ImmutableList.builder();
  for (  Method method : methods) {
    MethodRuleDefinition<?,?> ruleDefinition=DefaultMethodRuleDefinition.create(source,method);
    ExtractedModelRule registration=getMethodHandler(ruleDefinition,method,problems);
    if (registration != null) {
      registrations.add(registration);
    }
  }
  if (problems.hasProblems()) {
    throw new InvalidModelRuleDeclarationException(problems.format());
  }
  return registrations.build();
}
