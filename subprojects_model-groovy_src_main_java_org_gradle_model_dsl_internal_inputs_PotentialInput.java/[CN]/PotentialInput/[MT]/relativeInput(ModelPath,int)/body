{
  return new PotentialInput(consumerPath.toString(),indexPath,false,new Transformer<Object,ModelView<?>>(){
    @Override public Object transform(    ModelView<?> modelView){
      Object object=modelView.getInstance();
      List<String> pathComponents=consumerPath.getComponents();
      for (      String pathComponent : pathComponents.subList(1,pathComponents.size())) {
        object=GroovySystem.getMetaClassRegistry().getMetaClass(object.getClass()).getProperty(object,pathComponent);
      }
      return object;
    }
  }
);
}
