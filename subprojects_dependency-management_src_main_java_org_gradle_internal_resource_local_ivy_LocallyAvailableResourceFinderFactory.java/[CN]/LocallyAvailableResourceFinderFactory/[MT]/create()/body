{
  List<LocallyAvailableResourceFinder<ModuleComponentArtifactMetadata>> finders=new LinkedList<LocallyAvailableResourceFinder<ModuleComponentArtifactMetadata>>();
  finders.add(new LocallyAvailableResourceFinderSearchableFileStoreAdapter<ModuleComponentArtifactMetadata>(new FileStoreSearcher<ModuleComponentArtifactMetadata>(){
    @Override public Set<? extends LocallyAvailableResource> search(    ModuleComponentArtifactMetadata key){
      return fileStore.search(key.getId());
    }
  }
));
  addForPattern(finders,"artifacts-26/filestore/[organisation]/[module](/[branch])/[revision]/[type]/*/[artifact]-[revision](-[classifier])(.[ext])");
  addForPattern(finders,"artifacts-24/filestore/[organisation]/[module](/[branch])/[revision]/[type]/*/[artifact]-[revision](-[classifier])(.[ext])");
  addForPattern(finders,"artifacts-23/filestore/[organisation]/[module](/[branch])/[revision]/[type]/*/[artifact]-[revision](-[classifier])(.[ext])");
  addForPattern(finders,"artifacts-15/filestore/[organisation]/[module](/[branch])/[revision]/[type]/*/[artifact]-[revision](-[classifier])(.[ext])");
  addForPattern(finders,"artifacts-14/filestore/[organisation]/[module](/[branch])/[revision]/[type]/*/[artifact]-[revision](-[classifier])(.[ext])");
  addForPattern(finders,"artifacts-13/filestore/[organisation]/[module](/[branch])/[revision]/[type]/*/[artifact]-[revision](-[classifier])(.[ext])");
  addForPattern(finders,"artifacts-8/filestore/[organisation]/[module](/[branch])/[revision]/[type]/*/[artifact]-[revision](-[classifier])(.[ext])");
  addForPattern(finders,"artifacts-7/artifacts/*/[organisation]/[module](/[branch])/[revision]/[type]/[artifact]-[revision](-[classifier])(.[ext])");
  addForPattern(finders,"artifacts-4/[organisation]/[module](/[branch])/*/[type]s/[artifact]-[revision](-[classifier])(.[ext])");
  addForPattern(finders,"artifacts-4/[organisation]/[module](/[branch])/*/pom.originals/[artifact]-[revision](-[classifier])(.[ext])");
  addForPattern(finders,"../cache/[organisation]/[module](/[branch])/[type]s/[artifact]-[revision](-[classifier])(.[ext])");
  try {
    File localMavenRepository=localMavenRepositoryLocator.getLocalMavenRepository();
    if (localMavenRepository.exists()) {
      addForPattern(finders,localMavenRepository,new M2ResourcePattern("[organisation]/[module]/[revision]/[artifact]-[revision](-[classifier])(.[ext])"));
    }
  }
 catch (  CannotLocateLocalMavenRepositoryException ex) {
    finders.add(new NoMavenLocalRepositoryResourceFinder(ex));
  }
  return new CompositeLocallyAvailableResourceFinder<ModuleComponentArtifactMetadata>(finders);
}
