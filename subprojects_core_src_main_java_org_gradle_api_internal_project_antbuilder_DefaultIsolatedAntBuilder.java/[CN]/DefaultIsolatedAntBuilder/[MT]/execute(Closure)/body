{
  classLoaderCache.withCachedClassLoader(libClasspath,gradleApiGroovyLoader,antAdapterGroovyLoader,new Factory<ClassLoader>(){
    @Override public ClassLoader create(){
      return new MutableURLClassLoader(baseAntLoader,libClasspath);
    }
  }
,new Action<CachedClassLoader>(){
    @Override public void execute(    CachedClassLoader cachedClassLoader){
      ClassLoader classLoader=cachedClassLoader.getClassLoader();
      Object antBuilder=newInstanceOf("org.gradle.api.internal.project.ant.BasicAntBuilder");
      Object antLogger=newInstanceOf("org.gradle.api.internal.project.ant.AntLoggingAdapter");
      ClassLoader originalLoader=Thread.currentThread().getContextClassLoader();
      Thread.currentThread().setContextClassLoader(classLoader);
      try {
        configureAntBuilder(antBuilder,antLogger);
        Object delegate=new AntBuilderDelegate(antBuilder,classLoader);
        ClosureBackedAction.execute(delegate,antClosure);
      }
  finally {
        Thread.currentThread().setContextClassLoader(originalLoader);
        disposeBuilder(antBuilder,antLogger);
      }
    }
  }
);
}
