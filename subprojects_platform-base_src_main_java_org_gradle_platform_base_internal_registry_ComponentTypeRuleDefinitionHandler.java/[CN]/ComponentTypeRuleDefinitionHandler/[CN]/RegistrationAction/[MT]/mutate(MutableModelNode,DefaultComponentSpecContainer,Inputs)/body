{
  final ProjectIdentifier projectIdentifier=inputs.get(0,ModelType.of(ProjectIdentifier.class)).getInstance();
  final ProjectSourceSet projectSourceSet=inputs.get(1,ModelType.of(ProjectSourceSet.class)).getInstance();
  @SuppressWarnings("unchecked") Class<ComponentSpec> publicClass=(Class<ComponentSpec>)publicType.getConcreteClass();
  components.registerFactory(publicClass,new NamedDomainObjectFactory<BaseComponentSpec>(){
    public BaseComponentSpec create(    String name){
      FunctionalSourceSet componentSourceSet=instantiator.newInstance(DefaultFunctionalSourceSet.class,name,instantiator,projectSourceSet);
      ComponentSpecIdentifier id=new DefaultComponentSpecIdentifier(projectIdentifier.getPath(),name);
      return BaseComponentSpec.create(implementationType.getConcreteClass(),id,componentSourceSet,instantiator);
    }
  }
,descriptor);
}
