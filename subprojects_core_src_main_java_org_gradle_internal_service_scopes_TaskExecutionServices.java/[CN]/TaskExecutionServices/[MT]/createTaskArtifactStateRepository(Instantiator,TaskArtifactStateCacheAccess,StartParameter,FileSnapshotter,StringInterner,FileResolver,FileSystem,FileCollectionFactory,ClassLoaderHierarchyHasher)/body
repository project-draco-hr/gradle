{
  FileCollectionSnapshotter fileCollectionSnapshotter=new DefaultFileCollectionSnapshotter(fileSnapshotter,cacheAccess,stringInterner,fileSystem,fileResolver.getPatternSetFactory());
  OutputFilesCollectionSnapshotter outputFilesSnapshotter=new OutputFilesCollectionSnapshotter(fileCollectionSnapshotter,stringInterner);
  SerializerRegistry serializerRegistry=new DefaultSerializerRegistry();
  fileCollectionSnapshotter.registerSerializers(serializerRegistry);
  outputFilesSnapshotter.registerSerializers(serializerRegistry);
  TaskHistoryRepository taskHistoryRepository=new CacheBackedTaskHistoryRepository(cacheAccess,new CacheBackedFileSnapshotRepository(cacheAccess,serializerRegistry.build(FileCollectionSnapshot.class),new RandomLongIdGenerator()),stringInterner);
  return new ShortCircuitTaskArtifactStateRepository(startParameter,instantiator,new DefaultTaskArtifactStateRepository(taskHistoryRepository,instantiator,outputFilesSnapshotter,fileCollectionSnapshotter,fileCollectionSnapshotter,fileCollectionFactory,classLoaderHierarchyHasher));
}
