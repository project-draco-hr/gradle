{
  final List<TreeSnapshot> treeSnapshots=value.treeSnapshots;
  if (treeSnapshots != null) {
    TreeSnapshot nonShared=null;
    for (    TreeSnapshot snapshot : treeSnapshots) {
      if (!snapshot.isShareable()) {
        if (nonShared != null) {
          throw new RuntimeException("Multiple non-shared snapshots aren't supported.");
        }
        nonShared=snapshot;
      }
    }
    encoder.writeSmallInt(treeSnapshots.size() - ((nonShared != null) ? 1 : 0));
    for (    TreeSnapshot snapshot : treeSnapshots) {
      if (snapshot.isShareable()) {
        encoder.writeLong(treeSnapshotRepository.maybeStoreTreeSnapshot(snapshot));
      }
    }
    if (nonShared != null) {
      TreeSnapshotSerializer.writeTreeSnapshot(nonShared,encoder,incrementalFileSnapshotSerializer);
    }
 else {
      encoder.writeSmallInt(0);
    }
  }
 else {
    encoder.writeSmallInt(0);
    encoder.writeSmallInt(value.snapshots.size());
    for (    Map.Entry<String,IncrementalFileSnapshot> entry : value.snapshots.entrySet()) {
      encoder.writeString(entry.getKey());
      incrementalFileSnapshotSerializer.write(encoder,entry.getValue());
    }
  }
}
