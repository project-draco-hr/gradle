{
  final Task task=context.mock(Task.class);
  final SortedMap<Project,Set<Task>> tasks=WrapUtil.toSortedMap(project,WrapUtil.toSet(task));
  context.checking(new Expectations(){
{
      atLeast(1).of(project).absolutePath("a:b");
      will(returnValue(":a:b"));
      atLeast(1).of(rootProject).getAllTasks(true);
      will(returnValue(tasks));
      allowing(task).getPath();
      will(returnValue(":a:b"));
    }
  }
);
  NameResolvingTaskExecuter executer=new NameResolvingTaskExecuter(WrapUtil.toList("a:b"));
  executer.select(project);
  assertThat(executer.getDescription(),equalTo("primary task 'a:b'"));
  assertThat(executer.getTasks(),equalTo((Iterable<Task>)WrapUtil.toSet(task)));
}
