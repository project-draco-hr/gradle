{
  if (extensible) {
    String helperTypeConstructorDesc=Type.getMethodDescriptor(Type.VOID_TYPE,Type.getType(Object.class),dynamicObjectType);
    visitor.visitVarInsn(Opcodes.ALOAD,0);
    visitor.visitTypeInsn(Opcodes.NEW,extensibleDynamicObjectHelperType.getInternalName());
    visitor.visitInsn(Opcodes.DUP);
    visitor.visitVarInsn(Opcodes.ALOAD,0);
    if (providesOwnDynamicObject) {
      visitor.visitVarInsn(Opcodes.ALOAD,0);
      visitor.visitMethodInsn(Opcodes.INVOKESPECIAL,Type.getType(type).getInternalName(),"getAsDynamicObject",Type.getMethodDescriptor(dynamicObjectType));
    }
 else {
      visitor.visitInsn(Opcodes.ACONST_NULL);
    }
    visitor.visitMethodInsn(Opcodes.INVOKESPECIAL,extensibleDynamicObjectHelperType.getInternalName(),"<init>",helperTypeConstructorDesc);
  }
 else {
    String helperTypeConstructorDesc=Type.getMethodDescriptor(Type.VOID_TYPE,Type.getType(Object.class));
    visitor.visitVarInsn(Opcodes.ALOAD,0);
    visitor.visitTypeInsn(Opcodes.NEW,nonExtensibleDynamicObjectHelperType.getInternalName());
    visitor.visitInsn(Opcodes.DUP);
    visitor.visitVarInsn(Opcodes.ALOAD,0);
    visitor.visitMethodInsn(Opcodes.INVOKESPECIAL,nonExtensibleDynamicObjectHelperType.getInternalName(),"<init>",helperTypeConstructorDesc);
  }
}
