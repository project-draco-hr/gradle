{
  Type extensibleObjectFieldType=extensible ? extensibleDynamicObjectHelperType : nonExtensibleDynamicObjectHelperType;
  final String fieldSignature=extensibleObjectFieldType.getDescriptor();
  visitor.visitField(Opcodes.ACC_PRIVATE,DYNAMIC_OBJECT_HELPER_FIELD,fieldSignature,null,null);
  final Method getAsDynamicObject=DynamicObjectAware.class.getDeclaredMethod("getAsDynamicObject");
  if (extensible) {
    addGetter(HasConvention.class.getDeclaredMethod("getConvention"),new MethodCodeBody(){
      public void add(      MethodVisitor visitor) throws Exception {
        visitor.visitVarInsn(Opcodes.ALOAD,0);
        visitor.visitMethodInsn(Opcodes.INVOKEVIRTUAL,generatedType.getInternalName(),"getAsDynamicObject",Type.getMethodDescriptor(getAsDynamicObject));
        visitor.visitTypeInsn(Opcodes.CHECKCAST,extensibleDynamicObjectHelperType.getInternalName());
        String getterDescriptor=Type.getMethodDescriptor(ExtensibleDynamicObject.class.getDeclaredMethod("getConvention"));
        visitor.visitMethodInsn(Opcodes.INVOKEVIRTUAL,extensibleDynamicObjectHelperType.getInternalName(),"getConvention",getterDescriptor);
      }
    }
);
    addGetter(ExtensionAware.class.getDeclaredMethod("getExtensions"),new MethodCodeBody(){
      public void add(      MethodVisitor visitor) throws Exception {
        visitor.visitVarInsn(Opcodes.ALOAD,0);
        String getterDescriptor=Type.getMethodDescriptor(ExtensibleDynamicObject.class.getDeclaredMethod("getConvention"));
        visitor.visitMethodInsn(Opcodes.INVOKEVIRTUAL,generatedType.getInternalName(),"getConvention",getterDescriptor);
      }
    }
);
  }
  addGetter(getAsDynamicObject,new MethodCodeBody(){
    public void add(    MethodVisitor visitor){
      visitor.visitVarInsn(Opcodes.ALOAD,0);
      visitor.visitFieldInsn(Opcodes.GETFIELD,generatedType.getInternalName(),DYNAMIC_OBJECT_HELPER_FIELD,fieldSignature);
      Label returnValue=new Label();
      visitor.visitInsn(Opcodes.DUP);
      visitor.visitJumpInsn(Opcodes.IFNONNULL,returnValue);
      visitor.visitInsn(Opcodes.POP);
      visitor.visitVarInsn(Opcodes.ALOAD,0);
      generateCreateDynamicObject(visitor);
      visitor.visitFieldInsn(Opcodes.PUTFIELD,generatedType.getInternalName(),DYNAMIC_OBJECT_HELPER_FIELD,fieldSignature);
      visitor.visitVarInsn(Opcodes.ALOAD,0);
      visitor.visitFieldInsn(Opcodes.GETFIELD,generatedType.getInternalName(),DYNAMIC_OBJECT_HELPER_FIELD,fieldSignature);
      visitor.visitLabel(returnValue);
    }
  }
);
}
