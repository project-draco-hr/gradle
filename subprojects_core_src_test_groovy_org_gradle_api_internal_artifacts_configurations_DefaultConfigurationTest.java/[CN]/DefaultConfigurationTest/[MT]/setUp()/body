{
  configurationContainer=context.mock(ConfigurationsProvider.class);
  context.checking(new Expectations(){
{
      allowing(listenerManager).createAnonymousBroadcaster(DependencyResolutionListener.class);
      will(returnValue(resolutionListenerBroadcast));
      allowing(resolutionListenerBroadcast).getSource();
      will(returnValue(dependencyResolutionBroadcast));
      allowing(dependencyResolutionBroadcast).afterResolve(with(any(ResolvableDependencies.class)));
      allowing(dependencyResolutionBroadcast).beforeResolve(with(any(ResolvableDependencies.class)));
      allowing(resolutionStrategyFactory).create();
      will(returnValue(null));
    }
  }
);
  configuration=createNamedConfiguration("path","name");
}
