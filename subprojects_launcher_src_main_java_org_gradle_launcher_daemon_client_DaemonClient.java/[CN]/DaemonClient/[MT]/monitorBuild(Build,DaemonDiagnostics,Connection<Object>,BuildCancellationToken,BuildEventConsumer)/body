{
  DaemonClientInputForwarder inputForwarder=new DaemonClientInputForwarder(buildStandardInput,connection,executorFactory,idGenerator);
  DaemonCancelForwarder cancelForwarder=new DaemonCancelForwarder(connection,cancellationToken,idGenerator);
  try {
    cancelForwarder.start();
    inputForwarder.start();
    int objectsReceived=0;
    while (true) {
      Object object=connection.receive();
      LOGGER.trace("Received object #{}, type: {}",objectsReceived++,object == null ? null : object.getClass().getName());
      if (object == null) {
        return handleDaemonDisappearance(build,diagnostics);
      }
 else       if (object instanceof OutputEvent) {
        outputEventListener.onOutput((OutputEvent)object);
      }
 else       if (object instanceof BuildEvent) {
        buildEventConsumer.dispatch(((BuildEvent)object).getPayload());
      }
 else {
        return object;
      }
    }
  }
  finally {
    CompositeStoppable.stoppable(cancelForwarder,inputForwarder).stop();
  }
}
