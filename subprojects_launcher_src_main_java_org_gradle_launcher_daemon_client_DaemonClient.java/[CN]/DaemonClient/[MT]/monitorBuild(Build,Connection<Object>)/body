{
  DaemonClientInputForwarder inputForwarder=new DaemonClientInputForwarder(buildStandardInput,build.getClientMetaData(),connection);
  try {
    inputForwarder.start();
    int objectsReceived=0;
    while (true) {
      Object object=connection.receive();
      LOGGER.trace("Received object #{}, type: {}",objectsReceived++,object == null ? null : object.getClass().getName());
      if (object == null) {
        throw new DaemonDisappearedException(build,connection);
      }
 else       if (object instanceof Failure) {
        throw UncheckedException.throwAsUncheckedException(((Failure)object).getValue());
      }
 else       if (object instanceof OutputEvent) {
        outputEventListener.onOutput((OutputEvent)object);
      }
 else       if (object instanceof Result) {
        return (Result)object;
      }
 else {
        throw new IllegalStateException(String.format("Daemon returned %s (type: %s) as for which there is no strategy to handle",object,object.getClass()));
      }
    }
  }
  finally {
    inputForwarder.stop();
    connection.stop();
  }
}
