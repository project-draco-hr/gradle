{
  Build build=new Build(idGenerator.generateId(),action,parameters);
  int saneNumberOfAttempts=100;
  for (int i=1; i < saneNumberOfAttempts; i++) {
    final DaemonClientConnection connection=connector.connect(compatibilitySpec);
    if (cancellationToken.canBeCancelled()) {
      Runnable cancelHook=new Runnable(){
        public void run(){
          LOGGER.info("Request daemon stop to handle build cancellation...");
          connection.stop();
        }
      }
;
      boolean cancelled=cancellationToken.addCallback(cancelHook);
      if (cancelled) {
        throw new DaemonClientInterruptedException("Build interrupted");
      }
    }
    try {
      return (T)executeBuild(build,connection);
    }
 catch (    DaemonInitialConnectException e) {
      LOGGER.info(e.getMessage() + " Trying a different daemon...");
    }
 finally {
      connection.stop();
    }
  }
  throw new NoUsableDaemonFoundException("Unable to find a usable idle daemon. I have connected to " + saneNumberOfAttempts + " different daemons but I could not use any of them to run build: "+ build+ ".");
}
