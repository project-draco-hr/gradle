{
  StringBuilder var1=new StringBuilder();
  Type ownerType=getOwnerType();
  Class<?> rawType=(Class<?>)getRawType();
  if (ownerType != null) {
    if (ownerType instanceof Class) {
      var1.append(((Class)ownerType).getName());
    }
 else {
      var1.append(ownerType.toString());
    }
    var1.append(".");
    if (ownerType instanceof ParameterizedTypeImpl) {
      Class<?> ownerClass=(Class<?>)((ParameterizedTypeImpl)ownerType).getRawType();
      var1.append(rawType.getName().replace(ownerClass.getName() + "$",""));
    }
 else {
      var1.append(rawType.getName());
    }
  }
 else {
    var1.append(rawType.getName());
  }
  Type[] actualTypeArguments=getActualTypeArguments();
  if (actualTypeArguments != null && actualTypeArguments.length > 0) {
    var1.append("<");
    boolean var2=true;
    int var4=actualTypeArguments.length;
    for (int var5=0; var5 < var4; ++var5) {
      Type var6=actualTypeArguments[var5];
      if (!var2) {
        var1.append(", ");
      }
      var1.append(var6.getTypeName());
      var2=false;
    }
    var1.append(">");
  }
  return var1.toString();
}
