{
  StringBuilder sb=new StringBuilder();
  Type ownerType=getOwnerType();
  Class<?> rawType=(Class<?>)getRawType();
  if (ownerType != null) {
    if (ownerType instanceof Class) {
      sb.append(((Class)ownerType).getName());
    }
 else {
      sb.append(ownerType.toString());
    }
    sb.append(".");
    if (ownerType instanceof ParameterizedTypeImpl) {
      Class<?> ownerRaw=(Class<?>)((ParameterizedTypeImpl)ownerType).rawType.unwrap();
      sb.append(rawType.getName().replace(ownerRaw.getName() + "$",""));
    }
 else {
      sb.append(rawType.getName());
    }
  }
 else {
    sb.append(rawType.getName());
  }
  Type[] actualTypeArguments=getActualTypeArguments();
  if (actualTypeArguments != null && actualTypeArguments.length > 0) {
    sb.append("<");
    boolean first=true;
    for (    Type t : actualTypeArguments) {
      if (!first) {
        sb.append(", ");
      }
      if (t instanceof Class) {
        sb.append(((Class)t).getName());
      }
 else {
        sb.append(t.toString());
      }
      first=false;
    }
    sb.append(">");
  }
  return sb.toString();
}
