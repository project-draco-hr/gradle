{
  output=getServices().get(StyledTextOutputFactory.class).create(getClass());
  renderer=new GraphRenderer(output);
  DependencyGraph dependencyGraph=configuration.getResolvedConfiguration().getDependencyGraph();
  Set<? extends ResolvedDependencyResult> allDependencies=dependencyGraph.getAllDependencies();
  for (  final ResolvedDependencyResult dependencyResult : allDependencies) {
    String requested=dependencyResult.getRequested().getGroup() + ":" + dependencyResult.getRequested().getName();
    if (requested.contains(dependency)) {
      renderer.visit(new Action<StyledTextOutput>(){
        public void execute(        StyledTextOutput styledTextOutput){
          styledTextOutput.withStyle(StyledTextOutput.Style.Identifier).text(dependencyResult);
        }
      }
,true);
      renderDependees(dependencyResult.getSelected().getDependees());
    }
  }
}
