{
  if (modelType.isAssignableFrom(elementType)) {
    throw new InvalidManagedModelElementTypeException(extractionContext,String.format("%1$s cannot be used as type parameter of %1$s",modelType.getConcreteClass().getName()));
  }
  ModelCollectionSchema<T,E> schema=new ModelCollectionSchema<T,E>(extractionContext.getType(),elementType,this.<T,E>getNodeInitializer(store));
  ModelSchemaExtractionContext<?> typeParamExtractionContext=extractionContext.child(elementType,"element type",new Action<ModelSchemaExtractionContext<?>>(){
    public void execute(    ModelSchemaExtractionContext<?> context){
      ModelSchema<?> typeParamSchema=cache.get(elementType);
      if (!(typeParamSchema instanceof ManagedImplModelSchema)) {
        throw new InvalidManagedModelElementTypeException(extractionContext,String.format("cannot create a managed set of type %s as it is an unmanaged type. Only @Managed types are allowed.",elementType));
      }
    }
  }
);
  return new ModelSchemaExtractionResult<T>(schema,ImmutableList.of(typeParamExtractionContext));
}
