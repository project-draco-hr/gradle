{
  testFile("build.gradle").writelns("ext.a = 'a' == 'b' ? null: task(withAction) << { }","a = task(nothing)","a = task(emptyOptions())","ext.taskName = 'dynamic'","a = task(\"$taskName\") << { }","a = task('string')","a = task('stringWithAction') << { }","a = task('stringWithOptions', description: 'description')","a = task('stringWithOptionsAndAction', description: 'description') << { }","a = task(withOptions, description: 'description')","a = task(withOptionsAndAction, description: 'description') << { }","a = task(anotherWithAction).doFirst\n{}","task all(dependsOn: tasks as List)");
  inTestDirectory().expectDeprecationWarning().withTasks("all").run().assertTasksExecuted(":anotherWithAction",":dynamic",":emptyOptions",":nothing",":string",":stringWithAction",":stringWithOptions",":stringWithOptionsAndAction",":withAction",":withOptions",":withOptionsAndAction",":all");
}
