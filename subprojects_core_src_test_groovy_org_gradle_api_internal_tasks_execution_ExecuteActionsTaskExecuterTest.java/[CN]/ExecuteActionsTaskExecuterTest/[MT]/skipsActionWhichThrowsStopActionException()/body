{
  context.checking(new Expectations(){
{
      allowing(task).getTaskActions();
      will(returnValue(toList(action1,action2)));
      oneOf(publicListener).beforeActions(task);
      inSequence(sequence);
      oneOf(internalListener).startTaskActions();
      inSequence(sequence);
      oneOf(state).setExecuting(true);
      inSequence(sequence);
      oneOf(state).setDidWork(true);
      inSequence(sequence);
      oneOf(standardOutputCapture).start();
      inSequence(sequence);
      oneOf(action1).contextualise(executionContext);
      inSequence(sequence);
      oneOf(action1).execute(task);
      will(throwException(new StopActionException("stop")));
      inSequence(sequence);
      oneOf(action1).contextualise(null);
      inSequence(sequence);
      oneOf(standardOutputCapture).stop();
      inSequence(sequence);
      oneOf(state).setDidWork(true);
      inSequence(sequence);
      oneOf(standardOutputCapture).start();
      inSequence(sequence);
      oneOf(action2).contextualise(executionContext);
      inSequence(sequence);
      oneOf(action2).execute(task);
      inSequence(sequence);
      oneOf(action2).contextualise(null);
      inSequence(sequence);
      oneOf(standardOutputCapture).stop();
      inSequence(sequence);
      oneOf(state).executed(null);
      inSequence(sequence);
      oneOf(state).setExecuting(false);
      inSequence(sequence);
      oneOf(publicListener).afterActions(task);
      inSequence(sequence);
    }
  }
);
  executer.execute(task,state,executionContext);
}
