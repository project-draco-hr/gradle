{
switch (current.size()) {
case 0:
switch (previous.size()) {
case 0:
      return emptyIterator();
case 1:
    String path=previous.keySet().iterator().next();
  TaskStateChange change=new FileChange(path,ChangeType.REMOVED,fileType);
return singletonIterator(change);
default :
return null;
}
case 1:
switch (previous.size()) {
case 0:
if (includeAdded) {
String path=current.keySet().iterator().next();
TaskStateChange change=new FileChange(path,ChangeType.ADDED,fileType);
return singletonIterator(change);
}
 else {
return emptyIterator();
}
case 1:
Entry<String,NormalizedFileSnapshot> previousEntry=previous.entrySet().iterator().next();
Entry<String,NormalizedFileSnapshot> currentEntry=current.entrySet().iterator().next();
return compareTrivialSnapshotEntries(currentEntry,previousEntry,fileType,includeAdded);
default :
return null;
}
default :
return null;
}
}
