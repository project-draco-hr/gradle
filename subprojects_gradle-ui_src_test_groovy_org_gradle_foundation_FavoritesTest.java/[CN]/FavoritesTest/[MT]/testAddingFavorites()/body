{
  FavoritesEditor editor=new FavoritesEditor();
  Assert.assertTrue(editor.getFavoriteTasks().isEmpty());
  final FavoritesEditor.FavoriteTasksObserver observer=context.mock(FavoritesEditor.FavoriteTasksObserver.class);
  context.checking(new Expectations(){
{
      one(observer).favoritesChanged();
    }
  }
);
  editor.addFavoriteTasksObserver(observer,false);
  editor.addFavorite(mySubProject1Comple,true);
  context.assertIsSatisfied();
  FavoriteTask favoriteTask=editor.getFavoriteTasks().get(0);
  Assert.assertEquals("mysubproject1:compile",favoriteTask.getDisplayName());
  Assert.assertEquals("mysubproject1:compile",favoriteTask.getFullCommandLine());
  Assert.assertTrue(favoriteTask.alwaysShowOutput());
  context.checking(new Expectations(){
{
      one(observer).favoritesChanged();
    }
  }
);
  editor.addFavorite(mySubSubProjectDoc,false);
  context.assertIsSatisfied();
  favoriteTask=editor.getFavoriteTasks().get(1);
  Assert.assertEquals("mysubproject1:mysubsubproject:doc",favoriteTask.getDisplayName());
  Assert.assertEquals("mysubproject1:mysubsubproject:doc",favoriteTask.getFullCommandLine());
  Assert.assertFalse(favoriteTask.alwaysShowOutput());
}
