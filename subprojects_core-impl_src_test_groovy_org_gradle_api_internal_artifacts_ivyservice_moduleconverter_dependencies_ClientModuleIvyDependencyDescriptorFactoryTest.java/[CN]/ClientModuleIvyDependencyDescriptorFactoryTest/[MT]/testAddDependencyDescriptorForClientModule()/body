{
  final ModuleDependency dependencyDependency=context.mock(ModuleDependency.class,"dependencyDependency");
  final DefaultClientModule clientModule=new DefaultClientModule("org.gradle","gradle-core","1.0",TEST_DEP_CONF);
  final ModuleRevisionId testModuleRevisionId=IvyUtil.createModuleRevisionId(clientModule);
  setUpDependency(clientModule);
  clientModule.addDependency(dependencyDependency);
  final MutableModuleVersionMetaData moduleVersionMetaData=context.mock(MutableModuleVersionMetaData.class);
  context.checking(new Expectations(){
{
      allowing(clientModuleMetaDataFactory).createModuleDescriptor(testModuleRevisionId,WrapUtil.toSet(dependencyDependency));
      will(returnValue(moduleVersionMetaData));
    }
  }
);
  DefaultDependencyDescriptor dependencyDescriptor=clientModuleDependencyDescriptorFactory.createDependencyDescriptor(TEST_CONF,clientModule,moduleDescriptor);
  assertDependencyDescriptorHasCommonFixtureValues(dependencyDescriptor);
  assertEquals(testModuleRevisionId,dependencyDescriptor.getDependencyRevisionId());
  assertFalse(dependencyDescriptor.isChanging());
}
