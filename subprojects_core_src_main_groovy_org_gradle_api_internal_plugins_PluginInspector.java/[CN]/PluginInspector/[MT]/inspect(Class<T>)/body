{
  boolean implementsInterface=Plugin.class.isAssignableFrom(type);
  boolean hasRules=this.modelRuleSourceDetector.hasModelSources(type);
  if (implementsInterface) {
    @SuppressWarnings("unchecked") Class<? extends Plugin<?>> cast=(Class<? extends Plugin<?>>)type;
    return Cast.uncheckedCast(toImperative(cast,hasRules));
  }
 else   if (hasRules) {
    return new PotentialPureRuleSourceClassPlugin<T>(type);
  }
 else {
    return new PotentialUnknownTypePlugin<T>(type);
  }
}
