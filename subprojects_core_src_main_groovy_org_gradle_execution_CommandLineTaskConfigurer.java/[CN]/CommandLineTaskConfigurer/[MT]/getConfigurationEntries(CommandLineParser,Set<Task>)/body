{
  Map<String,JavaMethod<Object,?>> options=new HashMap<String,JavaMethod<Object,?>>();
  Options out=new Options(options);
  if (tasks.size() != 1) {
    return out;
  }
  for (Class<?> type=tasks.iterator().next().getClass(); type != Object.class; type=type.getSuperclass()) {
    for (    Method method : type.getDeclaredMethods()) {
      CommandLineOption commandLineOption=method.getAnnotation(CommandLineOption.class);
      if (commandLineOption != null) {
        org.gradle.cli.CommandLineOption option=parser.option(commandLineOption.options());
        option.hasDescription(commandLineOption.description());
        if (method.getParameterTypes().length > 0 && !hasSingleBooleanParameter(method)) {
          option.hasArgument();
        }
        options.put(commandLineOption.options()[0],JavaMethod.create(Object.class,Object.class,method));
      }
    }
  }
  return out;
}
