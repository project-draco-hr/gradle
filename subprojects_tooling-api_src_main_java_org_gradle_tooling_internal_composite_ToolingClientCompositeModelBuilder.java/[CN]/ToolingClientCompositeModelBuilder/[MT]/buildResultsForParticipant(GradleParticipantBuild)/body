{
  final Set<ModelResult<T>> participantResults=Sets.newConcurrentHashSet();
  if (hasProjectHierarchy(modelType)) {
    buildResultsFromHierarchicalModel(participant,participantResults);
  }
 else {
    if (!isBuildEnvironment(modelType) && supportsCustomModelAction(participant)) {
      buildResultsUsingModelAction(participant,participantResults);
    }
 else {
      GradleBuild gradleBuild=getProjectModel(participant,GradleBuild.class);
      buildResultsWithSeparateProjectConnections(participant,gradleBuild.getRootProject(),participantResults);
    }
  }
  return participantResults;
}
