{
  Method method;
  try {
    method=getMethod(methodName);
  }
 catch (  NoSuchMethodException e) {
    return;
  }
  method.setAccessible(true);
  try {
    method.invoke(target,params);
  }
 catch (  Exception e) {
    throw new RuntimeException("Unable to call method reflectively",e);
  }
}
