{
  project.getTasks().withType(ScalaCompile.class,new Action<ScalaCompile>(){
    @Override public void execute(    final ScalaCompile compile){
      compile.getConventionMapping().map("scalaClasspath",new Callable<FileCollection>(){
        @Override public FileCollection call() throws Exception {
          return scalaRuntime.inferScalaClasspath(compile.getClasspath());
        }
      }
);
      compile.getConventionMapping().map("zincClasspath",new Callable<Configuration>(){
        @Override public Configuration call() throws Exception {
          Configuration config=project.getConfigurations().getAt(ZINC_CONFIGURATION_NAME);
          if (config.getDependencies().isEmpty()) {
            project.getDependencies().add("zinc","com.typesafe.zinc:zinc:" + DefaultScalaToolProvider.DEFAULT_ZINC_VERSION);
          }
          return config;
        }
      }
);
    }
  }
);
}
