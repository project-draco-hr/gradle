{
  context.checking(new Expectations(){
{
      CacheBuilder tasksCacheBuilder=context.mock(CacheBuilder.class);
      CacheBuilder fileSnapshotCacheBuilder=context.mock(CacheBuilder.class);
      one(cacheRepository).cache("taskArtifacts");
      will(returnValue(tasksCacheBuilder));
      one(tasksCacheBuilder).forObject(gradle);
      will(returnValue(tasksCacheBuilder));
      one(tasksCacheBuilder).open();
      will(returnValue(persistentCache));
      atMost(1).of(cacheRepository).cache("fileSnapshots");
      will(returnValue(fileSnapshotCacheBuilder));
      atMost(1).of(fileSnapshotCacheBuilder).open();
      will(returnValue(persistentCache));
      one(persistentCache).openIndexedCache(with(notNullValue(Serializer.class)));
      will(returnValue(new InMemoryIndexedCache()));
      atMost(1).of(persistentCache).openIndexedCache();
      will(returnValue(new InMemoryIndexedCache()));
    }
  }
);
}
