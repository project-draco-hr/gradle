{
  BuildRequestMetaData requestMetaData;
  BuildCancellationToken cancellationToken;
  BuildEventConsumer buildEventConsumer;
  if (tracker.getCurrentBuild() != null) {
    ServiceRegistry services=tracker.getCurrentBuild().getServices();
    requestMetaData=new DefaultBuildRequestMetaData(services.get(BuildClientMetaData.class),System.currentTimeMillis());
    cancellationToken=services.get(BuildCancellationToken.class);
    buildEventConsumer=services.get(BuildEventConsumer.class);
  }
 else {
    throw new IllegalStateException("Must have a current build");
  }
  final BuildScopeServices buildScopeServices=BuildScopeServices.singleSession(parentRegistry,startParameter);
  return doNewInstance(startParameter,cancellationToken,requestMetaData,buildEventConsumer,buildScopeServices);
}
