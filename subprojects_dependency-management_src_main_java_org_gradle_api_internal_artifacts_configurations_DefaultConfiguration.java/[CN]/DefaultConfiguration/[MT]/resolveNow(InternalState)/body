{
synchronized (lock) {
    boolean needsResolve=state == InternalState.UNOBSERVED || state == InternalState.OBSERVED || modified;
    if (needsResolve) {
      DependencyResolutionListener broadcast=getDependencyResolutionBroadcast();
      ResolvableDependencies incoming=getIncoming();
      broadcast.beforeResolve(incoming);
      cachedResolverResults=resolver.resolve(this);
      for (      Configuration configuration : extendsFrom) {
        ((ConfigurationInternal)configuration).markAsObserved();
      }
      resolvedWithFailures=cachedResolverResults.getResolvedConfiguration().hasError();
      modified=false;
      markAsResolved(requestedState);
      broadcast.afterResolve(incoming);
    }
 else {
      markAsResolved(requestedState);
    }
  }
}
