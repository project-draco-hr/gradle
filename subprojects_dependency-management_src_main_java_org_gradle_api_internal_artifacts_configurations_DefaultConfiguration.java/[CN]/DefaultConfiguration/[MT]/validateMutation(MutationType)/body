{
switch (state) {
case UNOBSERVED:
    break;
case OBSERVED:
  if (type != MutationType.STRATEGY) {
    DeprecationLogger.nagUserOfDeprecatedBehaviour(String.format("Attempting to change %s after it has been included in dependency resolution",getDisplayName()));
  }
break;
case TASK_DEPENDENCIES_RESOLVED:
if (type != MutationType.ARTIFACTS) {
DeprecationLogger.nagUserOfDeprecatedBehaviour(String.format("Attempting to change %s after task dependencies have been resolved",getDisplayName()));
}
break;
case RESULTS_RESOLVED:
if (type != MutationType.STRATEGY) {
throw new InvalidUserDataException(String.format("Cannot change %s after it has been resolved.",getDisplayName()));
}
 else {
DeprecationLogger.nagUserOfDeprecatedBehaviour(String.format("Attempting to change %s after it has been resolved",getDisplayName()));
}
break;
}
markAsModifiedAndNotifyChildren(type);
}
