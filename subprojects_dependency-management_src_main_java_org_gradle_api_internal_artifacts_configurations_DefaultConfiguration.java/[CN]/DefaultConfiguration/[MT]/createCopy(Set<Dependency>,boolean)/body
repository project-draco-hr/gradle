{
  DetachedConfigurationsProvider configurationsProvider=new DetachedConfigurationsProvider();
  DefaultConfiguration copiedConfiguration=new DefaultConfiguration(path + "Copy",name + "Copy",configurationsProvider,resolver,listenerManager,metaDataProvider,resolutionStrategy.copy(),projectAccessListener,projectFinder,configurationComponentMetaDataBuilder,fileCollectionFactory,componentIdentifierFactory);
  configurationsProvider.setTheOnlyConfiguration(copiedConfiguration);
  copiedConfiguration.visible=visible;
  copiedConfiguration.transitive=transitive;
  copiedConfiguration.description=description;
  copiedConfiguration.defaultDependencyActions.addAll(defaultDependencyActions);
  copiedConfiguration.getArtifacts().addAll(getAllArtifacts());
  Set<Configuration> excludeRuleSources=new LinkedHashSet<Configuration>();
  excludeRuleSources.add(this);
  if (recursive) {
    excludeRuleSources.addAll(getHierarchy());
  }
  for (  Configuration excludeRuleSource : excludeRuleSources) {
    for (    ExcludeRule excludeRule : excludeRuleSource.getExcludeRules()) {
      copiedConfiguration.excludeRules.add(new DefaultExcludeRule(excludeRule.getGroup(),excludeRule.getModule()));
    }
  }
  DomainObjectSet<Dependency> copiedDependencies=copiedConfiguration.getDependencies();
  for (  Dependency dependency : dependencies) {
    copiedDependencies.add(dependency.copy());
  }
  return copiedConfiguration;
}
