{
  CreateStartScripts startScripts=project.getTasks().create(TASK_START_SCRIPTS_NAME,CreateStartScripts.class);
  startScripts.setDescription("Creates OS specific scripts to run the project as a JVM application.");
  startScripts.setClasspath(project.getTasks().getAt(JavaPlugin.JAR_TASK_NAME).getOutputs().getFiles().plus(project.getConfigurations().getByName("runtime")));
  startScripts.getConventionMapping().map("mainClassName",new Callable<Object>(){
    public Object call() throws Exception {
      return pluginConvention.getMainClassName();
    }
  }
);
  startScripts.getConventionMapping().map("applicationName",new Callable<Object>(){
    public Object call() throws Exception {
      return pluginConvention.getApplicationName();
    }
  }
);
  startScripts.getConventionMapping().map("outputDir",new Callable<Object>(){
    public Object call() throws Exception {
      return new File(project.getBuildDir(),"scripts");
    }
  }
);
  startScripts.getConventionMapping().map("defaultJvmOpts",new Callable<Object>(){
    public Object call() throws Exception {
      return pluginConvention.getApplicationDefaultJvmArgs();
    }
  }
);
}
