{
  List<BuildConfigurationAction> replacedBuildConfigurations=Lists.newArrayList();
  replacedBuildConfigurations.addAll(CollectionUtils.filter(givenBuildConfigurationActions,new Spec<BuildConfigurationAction>(){
    @Override public boolean isSatisfiedBy(    final BuildConfigurationAction givenBuildConfiguration){
      return !CollectionUtils.any(replaceableActionClasses,new Spec<Class<? extends BuildConfigurationAction>>(){
        @Override public boolean isSatisfiedBy(        Class<? extends BuildConfigurationAction> classToBeFiltered){
          return classToBeFiltered.isAssignableFrom(givenBuildConfiguration.getClass());
        }
      }
);
    }
  }
));
  replacedBuildConfigurations.add(customBuildConfigurationAction);
  return replacedBuildConfigurations;
}
