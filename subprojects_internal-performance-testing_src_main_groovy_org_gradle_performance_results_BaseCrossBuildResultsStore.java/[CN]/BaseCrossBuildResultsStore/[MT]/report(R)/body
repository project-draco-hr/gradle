{
  try {
    db.withConnection(new ConnectionAction<Void>(){
      public Void execute(      Connection connection) throws SQLException {
        long executionId;
        PreparedStatement statement=connection.prepareStatement("insert into testExecution(testId, startTime, endTime, versionUnderTest, operatingSystem, jvm, vcsBranch, vcsCommit, testGroup, resultType) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
        try {
          statement.setString(1,results.getTestId());
          statement.setTimestamp(2,new Timestamp(results.getStartTime()));
          statement.setTimestamp(3,new Timestamp(results.getEndTime()));
          statement.setString(4,results.getVersionUnderTest());
          statement.setString(5,results.getOperatingSystem());
          statement.setString(6,results.getJvm());
          statement.setString(7,results.getVcsBranch());
          statement.setString(8,Joiner.on(",").join(results.getVcsCommits()));
          statement.setString(9,results.getTestGroup());
          statement.setString(10,resultType);
          statement.execute();
          ResultSet keys=statement.getGeneratedKeys();
          keys.next();
          executionId=keys.getLong(1);
        }
  finally {
          statement.close();
        }
        statement=connection.prepareStatement("insert into testOperation(testExecution, testProject, displayName, tasks, args, gradleOpts, daemon, totalTime, configurationTime, executionTime, heapUsageBytes, totalHeapUsageBytes, maxHeapUsageBytes, maxUncollectedHeapBytes, maxCommittedHeapBytes, compileTotalTime, gcTotalTime) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
        try {
          for (          BuildDisplayInfo displayInfo : results.getBuilds()) {
            addOperations(statement,executionId,displayInfo,results.buildResult(displayInfo));
          }
          statement.executeBatch();
        }
  finally {
          statement.close();
        }
        return null;
      }
    }
);
  }
 catch (  Exception e) {
    throw new RuntimeException(String.format("Could not open results datastore '%s'.",db.getUrl()),e);
  }
}
