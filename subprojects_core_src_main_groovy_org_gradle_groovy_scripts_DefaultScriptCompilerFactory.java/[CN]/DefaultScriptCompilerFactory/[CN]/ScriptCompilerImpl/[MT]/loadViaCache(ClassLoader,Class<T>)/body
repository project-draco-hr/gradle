{
  Map<String,Object> properties=new HashMap<String,Object>();
  properties.put("source.filename",source.getFileName());
  properties.put("source.hash",HashUtil.createHash(source.getResource().getText()));
  String cacheName;
  if (transformer != null) {
    cacheName=String.format("scripts/%s/%s/%s",source.getClassName(),scriptBaseClass.getSimpleName(),transformer.getId());
  }
 else {
    cacheName=String.format("scripts/%s/%s",source.getClassName(),scriptBaseClass.getSimpleName());
  }
  PersistentCache cache=cacheRepository.cache(cacheName).withProperties(properties).withInitializer(new CacheInitializer(scriptBaseClass,classLoader)).open();
  File classesDir=classesDir(cache,scriptBaseClass);
  Class<? extends T> scriptClass=scriptCompilationHandler.loadFromDir(source,classLoader,classesDir,scriptBaseClass);
  Instantiator instantiator=new DirectInstantiator();
  return instantiator.newInstance(scriptClass);
}
