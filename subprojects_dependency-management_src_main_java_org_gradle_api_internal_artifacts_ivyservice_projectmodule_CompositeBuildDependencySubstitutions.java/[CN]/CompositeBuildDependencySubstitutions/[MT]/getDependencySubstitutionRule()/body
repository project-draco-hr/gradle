{
  final ReplacementProjects replacementProjects=new ReplacementProjects(projectComponentRegistry);
  return new Action<DependencySubstitution>(){
    @Override public void execute(    DependencySubstitution sub){
      DependencySubstitutionInternal dependencySubstitution=(DependencySubstitutionInternal)sub;
      ComponentSelector requested=dependencySubstitution.getTarget();
      if (requested instanceof ModuleComponentSelector) {
        ModuleComponentSelector selector=(ModuleComponentSelector)requested;
        ProjectComponentIdentifier replacement=replacementProjects.getReplacementFor(selector);
        if (replacement != null) {
          dependencySubstitution.useTarget(DefaultProjectComponentSelector.newSelector(replacement.getProjectPath()),VersionSelectionReasons.COMPOSITE_BUILD);
        }
      }
    }
  }
;
}
