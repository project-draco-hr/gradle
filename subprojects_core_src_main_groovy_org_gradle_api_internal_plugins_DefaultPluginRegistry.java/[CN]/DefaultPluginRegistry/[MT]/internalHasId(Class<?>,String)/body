{
  if (parent != null) {
    Boolean parentHas=parent.internalHasId(pluginClass,id);
    if (parentHas != null) {
      return parentHas;
    }
  }
  Optional<PotentialPlugin> potentialPlugin=find(id);
  if (potentialPlugin.isPresent() && potentialPlugin.get().asClass().equals(pluginClass)) {
    return true;
  }
 else {
    return uncheckedGet(pluginClassIdCache,new PluginIdLookupCacheKey(pluginClass,id));
  }
}
