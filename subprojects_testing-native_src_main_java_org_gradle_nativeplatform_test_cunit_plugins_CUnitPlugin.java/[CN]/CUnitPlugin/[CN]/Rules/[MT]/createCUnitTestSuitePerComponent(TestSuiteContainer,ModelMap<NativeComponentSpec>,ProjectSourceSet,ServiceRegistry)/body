{
  final Instantiator instantiator=serviceRegistry.get(Instantiator.class);
  final FileResolver fileResolver=serviceRegistry.get(FileResolver.class);
  for (  final NativeComponentSpec component : components.values()) {
    final String suiteName=String.format("%sTest",component.getName());
    testSuites.create(suiteName,CUnitTestSuiteSpec.class,new Action<CUnitTestSuiteSpec>(){
      @Override public void execute(      CUnitTestSuiteSpec testSuite){
        DefaultCUnitTestSuiteSpec cunitTestSuite=(DefaultCUnitTestSuiteSpec)testSuite;
        cunitTestSuite.setTestedComponent(component);
        cunitTestSuite.getSources().registerFactory(CSourceSet.class,new NamedDomainObjectFactory<CSourceSet>(){
          public CSourceSet create(          String name){
            return BaseLanguageSourceSet.create(DefaultCSourceSet.class,name,suiteName,fileResolver,instantiator);
          }
        }
);
      }
    }
);
  }
}
