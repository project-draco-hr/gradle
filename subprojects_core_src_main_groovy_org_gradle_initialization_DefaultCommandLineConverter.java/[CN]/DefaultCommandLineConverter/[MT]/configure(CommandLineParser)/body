{
  loggingConfigurationCommandLineConverter.configure(parser);
  systemPropertiesCommandLineConverter.configure(parser);
  projectPropertiesCommandLineConverter.configure(parser);
  parser.allowMixedSubcommandsAndOptions();
  parser.option(NO_SEARCH_UPWARDS,"no-search-upward").hasDescription(String.format("Don't search in parent folders for a %s file.",Settings.DEFAULT_SETTINGS_FILE));
  parser.option(CACHE,"cache").hasArgument().hasDescription("Specifies how compiled build scripts should be cached. Possible values are: 'rebuild' and 'on'. Default value is 'on'");
  parser.option(PROJECT_CACHE_DIR).hasArgument().hasDescription("Specifies the project-specific cache directory. Defaults to .gradle in the root project directory.");
  parser.option(DRY_RUN,"dry-run").hasDescription("Runs the builds with all task actions disabled.");
  parser.option(PROJECT_DIR,"project-dir").hasArgument().hasDescription("Specifies the start directory for Gradle. Defaults to current directory.");
  parser.option(GRADLE_USER_HOME,"gradle-user-home").hasArgument().hasDescription("Specifies the gradle user home directory.");
  parser.option(INIT_SCRIPT,"init-script").hasArguments().hasDescription("Specifies an initialization script.");
  parser.option(SETTINGS_FILE,"settings-file").hasArgument().hasDescription("Specifies the settings file.");
  parser.option(BUILD_FILE,"build-file").hasArgument().hasDescription("Specifies the build file.");
  parser.option(NO_PROJECT_DEPENDENCY_REBUILD,"no-rebuild").hasDescription("Do not rebuild project dependencies.");
  parser.option(NO_OPT).hasDescription("Ignore any task optimization.");
  parser.option(EXCLUDE_TASK,"exclude-task").hasArguments().hasDescription("Specify a task to be excluded from execution.");
  parser.option(PROFILE).hasDescription("Profiles build execution time and generates a report in the <build_dir>/reports/profile directory.");
  parser.option(CONTINUE).hasDescription("Continues task execution after a task failure.").experimental();
  parser.option(OFFLINE).hasDescription("The build should operate without accessing network resources.");
  parser.option(REFRESH).hasArguments().hasDescription("Refresh the state of resources of the type(s) specified. Currently only 'dependencies' is supported.");
}
