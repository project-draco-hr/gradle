{
  DependencyDescriptor dependencyDescriptor=dependency.getDescriptor();
  ModuleIdentifier module=new DefaultModuleIdentifier(dependency.getRequested().getGroup(),dependency.getRequested().getName());
  if (!versionMatcher.isDynamic(dependency.getRequested().getVersion())) {
    throw new IllegalArgumentException("Can only select for a dynamic version");
  }
  VersionList versionList=versionLister.getVersionList(module);
  Artifact metaDataArtifact=getMetaDataArtifactFor(dependencyDescriptor.getDependencyRevisionId());
  listVersionsForAllPatterns(module,getIvyPatterns(),metaDataArtifact,versionList);
  Artifact[] otherArtifacts=getDefaultMetaData(dependency,dependencyDescriptor.getDependencyRevisionId()).getDescriptor().getAllArtifacts();
  for (  Artifact otherArtifact : otherArtifacts) {
    listVersionsForAllPatterns(module,getArtifactPatterns(),otherArtifact,versionList);
  }
  DefaultModuleVersions moduleVersions=new DefaultModuleVersions();
  for (  VersionList.ListedVersion listedVersion : versionList.getVersions()) {
    moduleVersions.add(listedVersion.getVersion());
  }
  result.listed(moduleVersions);
}
