{
  ModuleRevisionId dependencyRevisionId=artifact.getModuleRevisionId();
  LocallyAvailableExternalResource cachedResource;
  try {
    cachedResource=repositoryCacheManager.downloadAndCacheArtifactFile(artifact,resourceDownloader,resource);
  }
 catch (  IOException e) {
    LOGGER.warn("Problem while downloading module descriptor: {}: {}",resource,e.getMessage());
    return null;
  }
  return metaDataParser.parseModuleDescriptor(dependencyRevisionId,cachedResource,new ExternalResourceResolverDependencyResolver(this));
}
