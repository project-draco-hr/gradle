{
  boolean ok=true;
  StringBuilder errors=new StringBuilder();
  if (!mrid.getOrganisation().equals(md.getModuleRevisionId().getOrganisation())) {
    Message.error("\t" + getName() + ": bad organisation found in "+ ivyRef.getResource()+ ": expected='"+ mrid.getOrganisation()+ "' found='"+ md.getModuleRevisionId().getOrganisation()+ "'");
    errors.append("bad organisation: expected='" + mrid.getOrganisation() + "' found='"+ md.getModuleRevisionId().getOrganisation()+ "'; ");
    ok=false;
  }
  if (!mrid.getName().equals(md.getModuleRevisionId().getName())) {
    Message.error("\t" + getName() + ": bad module name found in "+ ivyRef.getResource()+ ": expected='"+ mrid.getName()+ " found='"+ md.getModuleRevisionId().getName()+ "'");
    errors.append("bad module name: expected='" + mrid.getName() + "' found='"+ md.getModuleRevisionId().getName()+ "'; ");
    ok=false;
  }
  if (mrid.getBranch() != null && !mrid.getBranch().equals(md.getModuleRevisionId().getBranch())) {
    Message.error("\t" + getName() + ": bad branch name found in "+ ivyRef.getResource()+ ": expected='"+ mrid.getBranch()+ " found='"+ md.getModuleRevisionId().getBranch()+ "'");
    errors.append("bad branch name: expected='" + mrid.getBranch() + "' found='"+ md.getModuleRevisionId().getBranch()+ "'; ");
    ok=false;
  }
  if (ivyRef.getRevision() != null && !ivyRef.getRevision().startsWith("working@")) {
    ModuleRevisionId expectedMrid=ModuleRevisionId.newInstance(mrid,ivyRef.getRevision());
    if (!getSettings().getVersionMatcher().accept(expectedMrid,md)) {
      Message.error("\t" + getName() + ": bad revision found in "+ ivyRef.getResource()+ ": expected='"+ ivyRef.getRevision()+ " found='"+ md.getModuleRevisionId().getRevision()+ "'");
      errors.append("bad revision: expected='" + ivyRef.getRevision() + "' found='"+ md.getModuleRevisionId().getRevision()+ "'; ");
      ok=false;
    }
  }
  if (!getSettings().getStatusManager().isStatus(md.getStatus())) {
    Message.error("\t" + getName() + ": bad status found in "+ ivyRef.getResource()+ ": '"+ md.getStatus()+ "'");
    errors.append("bad status: '" + md.getStatus() + "'; ");
    ok=false;
  }
  if (!ok) {
    throw new ParseException("inconsistent module descriptor file found in '" + ivyRef.getResource() + "': "+ errors,0);
  }
}
