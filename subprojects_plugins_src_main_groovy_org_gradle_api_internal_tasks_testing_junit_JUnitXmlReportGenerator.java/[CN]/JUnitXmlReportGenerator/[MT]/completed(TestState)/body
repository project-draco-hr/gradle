{
  String testClassName=state.test.getClassName();
  Element element;
  if (!state.equals(testSuite)) {
    element=testSuiteReport.createElement("testcase");
    element.setAttribute("name",state.test.getName());
    element.setAttribute("classname",testClassName);
    rootElement.appendChild(element);
  }
 else {
    element=rootElement;
    rootElement.setAttribute("name",testClassName);
    rootElement.setAttribute("tests",String.valueOf(state.testCount));
    rootElement.setAttribute("failures",String.valueOf(state.failedCount));
    rootElement.setAttribute("errors","0");
    rootElement.setAttribute("timestamp",DateUtils.format(state.getStartTime(),DateUtils.ISO8601_DATETIME_PATTERN));
    rootElement.setAttribute("hostname",hostName);
    Element stdoutElement=testSuiteReport.createElement("system-out");
    stdoutElement.appendChild(testSuiteReport.createCDATASection(outputs.get(TestOutputEvent.Destination.StdOut).toString()));
    rootElement.appendChild(stdoutElement);
    Element stderrElement=testSuiteReport.createElement("system-err");
    stderrElement.appendChild(testSuiteReport.createCDATASection(outputs.get(TestOutputEvent.Destination.StdErr).toString()));
    rootElement.appendChild(stderrElement);
  }
  element.setAttribute("time",String.valueOf(state.getExecutionTime() / 1000.0));
  for (  Throwable failure : state.failures) {
    Element failureElement=testSuiteReport.createElement("failure");
    element.appendChild(failureElement);
    failureElement.setAttribute("message",failureMessage(failure));
    failureElement.setAttribute("type",failure.getClass().getName());
    failureElement.appendChild(testSuiteReport.createTextNode(stackTrace(failure)));
  }
  if (state.equals(testSuite)) {
    File reportFile=new File(testResultsDir,"TEST-" + testClassName + ".xml");
    try {
      OutputStream outstr=new BufferedOutputStream(new FileOutputStream(reportFile));
      try {
        new DOMElementWriter(true).write(rootElement,outstr);
      }
  finally {
        outstr.close();
      }
    }
 catch (    IOException e) {
      throw new GradleException(String.format("Could not write test report file '%s'.",reportFile),e);
    }
    testSuite=null;
    outputs.clear();
  }
}
