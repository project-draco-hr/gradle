{
  TestFile testDir=dist.getTestDir();
  testDir.file("build.gradle").writelns("apply id: 'java'","repositories { mavenCentral() }","dependencies { compile 'junit:junit:4.7' }","test.forkEvery = 1");
  testDir.file("src/test/java/org/gradle/AbstractTest.java").writelns("package org.gradle;","public abstract class AbstractTest {","    @org.junit.Test public void ok() {","        long time = java.lang.management.ManagementFactory.getRuntimeMXBean().getStartTime();","        System.out.println(String.format(\"VM START TIME = %s\", time));","    }","}");
  testDir.file("src/test/java/org/gradle/SomeTest.java").writelns("package org.gradle;","public class SomeTest extends AbstractTest {","}");
  testDir.file("src/test/java/org/gradle/SomeTest2.java").writelns("package org.gradle;","public class SomeTest2 extends AbstractTest {","}");
  executer.withTasks("test").run();
  TestFile results1=testDir.file("build/test-results/TEST-org.gradle.SomeTest.xml");
  TestFile results2=testDir.file("build/test-results/TEST-org.gradle.SomeTest2.xml");
  results1.assertIsFile();
  results2.assertIsFile();
  assertThat(results1.linesThat(containsString("VM START TIME =")).get(0),not(equalTo(results2.linesThat(containsString("VM START TIME =")).get(0))));
}
