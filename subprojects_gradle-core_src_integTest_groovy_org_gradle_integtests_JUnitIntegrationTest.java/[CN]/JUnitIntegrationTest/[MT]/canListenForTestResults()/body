{
  TestFile testDir=dist.getTestDir();
  testDir.file("src/main/java/AppException.java").writelns("public class AppException extends Exception { }");
  testDir.file("src/test/java/SomeTest.java").writelns("public class SomeTest {","@org.junit.Test public void pass() { }","@org.junit.Test public void fail() { org.junit.Assert.fail(\"message\"); }","@org.junit.Test public void knownError() { throw new RuntimeException(\"message\"); }","@org.junit.Test public void unknownError() throws AppException { throw new AppException(); }","}");
  testDir.file("build.gradle").writelns("apply id: 'java'","repositories { mavenCentral() } ","dependencies { testCompile 'junit:junit:4.4' }","def listener = new TestListenerImpl()","test.addTestListener(listener)","test.ignoreFailures = true","class TestListenerImpl implements TestListener {","void beforeSuite(TestSuite suite) { println 'START SUITE ' + suite.name }","void afterSuite(TestSuite suite) { println 'FINISH SUITE ' + suite.name }","void beforeTest(Test test) { println 'START TEST ' + test.name }","void afterTest(Test test, TestResult result) { println 'FINISH TEST ' + test.name + ' error: ' + result.error }","}");
  ExecutionResult result=executer.withTasks("test").run();
  assertThat(result.getOutput(),containsLine("START SUITE SomeTest"));
  assertThat(result.getOutput(),containsLine("FINISH SUITE SomeTest"));
  assertThat(result.getOutput(),containsLine("START TEST pass(SomeTest)"));
  assertThat(result.getOutput(),containsLine("FINISH TEST pass(SomeTest) error: null"));
  assertThat(result.getOutput(),containsLine("START TEST fail(SomeTest)"));
  assertThat(result.getOutput(),containsLine("FINISH TEST fail(SomeTest) error: junit.framework.AssertionFailedError: message"));
  assertThat(result.getOutput(),containsLine("START TEST knownError(SomeTest)"));
  assertThat(result.getOutput(),containsLine("FINISH TEST knownError(SomeTest) error: java.lang.RuntimeException: message"));
  assertThat(result.getOutput(),containsLine("START TEST unknownError(SomeTest)"));
  assertThat(result.getOutput(),containsLine("FINISH TEST unknownError(SomeTest) error: org.gradle.listener.dispatch.PlaceholderException: AppException: null"));
}
