{
  String publicationName=publication.getName();
  String descriptorTaskName=calculateDescriptorTaskName(publicationName);
  GenerateMavenPom generatePomTask=project.getTasks().add(descriptorTaskName,GenerateMavenPom.class);
  generatePomTask.setGroup("publishing");
  generatePomTask.setDescription(String.format("Generates the Maven POM file for publication '%s'",publication.getName()));
  ConventionMapping descriptorTaskConventionMapping=new DslObject(generatePomTask).getConventionMapping();
  descriptorTaskConventionMapping.map("destination",new Callable<Object>(){
    public Object call() throws Exception {
      return new File(project.getBuildDir(),"publications/" + publication.getName() + "/pom-default.xml");
    }
  }
);
  descriptorTaskConventionMapping.map("pom",new Callable<Object>(){
    public Object call() throws Exception {
      return publication.getPom();
    }
  }
);
  publication.setPomFile(generatePomTask.getPomFile());
}
