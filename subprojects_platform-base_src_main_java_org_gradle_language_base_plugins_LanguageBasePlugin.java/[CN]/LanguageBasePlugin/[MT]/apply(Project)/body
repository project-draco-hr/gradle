{
  target.apply(Collections.singletonMap("plugin",LifecycleBasePlugin.class));
  target.getExtensions().create("sources",DefaultProjectSourceSet.class);
  DefaultBinaryContainer binaries=target.getExtensions().create("binaries",DefaultBinaryContainer.class,instantiator);
  modelRegistry.create(ModelCreators.bridgedInstance(ModelReference.of("binaries",BinaryContainer.class),binaries).simpleDescriptor("Project.<init>.binaries()").inputs(Collections.singletonList(ModelReference.of(ExtensionContainer.class))).withProjection(new PolymorphicDomainObjectContainerModelProjection<DefaultBinaryContainer,BinarySpec>(instantiator,binaries,BinarySpec.class)).build());
}
