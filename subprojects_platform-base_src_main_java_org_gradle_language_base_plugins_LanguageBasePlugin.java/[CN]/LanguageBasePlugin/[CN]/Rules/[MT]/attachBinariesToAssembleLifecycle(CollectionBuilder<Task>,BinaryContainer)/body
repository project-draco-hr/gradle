{
  tasks.named(LifecycleBasePlugin.ASSEMBLE_TASK_NAME,new Action<Task>(){
    @Override public void execute(    Task assembleTask){
      for (      BinarySpecInternal binary : binaries.withType(BinarySpecInternal.class)) {
        if (!binary.isLegacyBinary() && binary.isBuildable()) {
          assembleTask.dependsOn(binary);
        }
      }
    }
  }
);
}
