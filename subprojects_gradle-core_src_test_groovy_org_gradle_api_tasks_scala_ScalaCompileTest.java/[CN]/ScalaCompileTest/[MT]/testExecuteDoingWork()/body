{
  setUpMocksAndAttributes(scalaCompile);
  context.checking(new Expectations(){
{
      one(antScalaCompileMock).execute(with(hasSameItems(scalaCompile.getSource())),with(equalTo(scalaCompile.getDestinationDir())),with(equalTo(scalaCompile.getClasspath())),with(equalTo(scalaCompile.getScalaCompileOptions())));
      List<File> expectedClassPath=new ArrayList<File>();
      expectedClassPath.add(scalaCompile.getDestinationDir());
      for (      File file : scalaCompile.getClasspath()) {
        expectedClassPath.add(file);
      }
      FileCollection javaSrc=scalaCompile.getJavaSrc();
      one(antCompileMock).execute(with(hasSameItems(javaSrc)),with(equalTo(scalaCompile.getDestinationDir())),with(equalTo(scalaCompile.getDependencyCacheDir())),with(equalTo(expectedClassPath)),with(equalTo(scalaCompile.getSourceCompatibility())),with(equalTo(scalaCompile.getTargetCompatibility())),with(equalTo(scalaCompile.getOptions())),with(equalTo(scalaCompile.getAnt())));
    }
  }
);
  scalaCompile.compile();
}
