{
  setMocks();
  expectHandleEmptyIncludesExcludes();
  context.checking(new Expectations(){
{
      one(testMock).getTestSrcDirs();
      will(returnValue(testSrcDirs));
      one(testngOptionsMock).setTestResources(testSrcDirs);
      one(testMock).getTestClassesDir();
      will(returnValue(testClassesDir));
      one(testMock).getClasspath();
      will(returnValue(null));
      one(testMock).getTestResultsDir();
      will(returnValue(testResultsDir));
      one(testMock).getTestReportDir();
      will(returnValue(testReportDir));
      one(testMock).getIncludes();
      will(returnValue(null));
      one(testMock).getExcludes();
      will(returnValue(null));
      one(projectMock).getAnt();
      will(returnValue(antBuilderMock));
      one(testMock).isTestReport();
      will(returnValue(true));
      one(antTestNGExecuteMock).execute(testClassesDir,null,testResultsDir,testReportDir,null,null,testngOptionsMock,antBuilderMock);
    }
  }
);
  testNGTestFramework.execute(projectMock,testMock,null,null);
}
