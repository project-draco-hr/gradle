{
  StyledTextOutput textOutput=textOutputFactory.create(BuildResultLogger.class,LogLevel.LIFECYCLE);
  int cacheableTasks=statistics.getCacheableTasksCount();
  textOutput.println();
  int allTasks=statistics.getAllTasksCount();
  int fromCacheTasks=statistics.getTasksCount(TaskExecutionOutcome.FROM_CACHE);
  int upToDateTasks=statistics.getTasksCount(TaskExecutionOutcome.UP_TO_DATE);
  textOutput.formatln("%d tasks in build, out of which %d (%s) were cacheable",allTasks,cacheableTasks,roundedPercentOf(cacheableTasks,allTasks));
  statisticsLine(textOutput,upToDateTasks,allTasks,"up-to-date");
  statisticsLine(textOutput,fromCacheTasks,allTasks,"loaded from cache");
  statisticsLine(textOutput,statistics.getTasksCount(TaskExecutionOutcome.SKIPPED),allTasks,"skipped");
  statisticsLine(textOutput,statistics.getTasksCount(TaskExecutionOutcome.EXECUTED),allTasks,"executed");
}
