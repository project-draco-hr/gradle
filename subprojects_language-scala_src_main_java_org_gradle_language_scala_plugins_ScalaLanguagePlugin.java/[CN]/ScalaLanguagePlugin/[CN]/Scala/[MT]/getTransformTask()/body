{
  return new JointCompileTaskConfig(){
    public String getTaskPrefix(){
      return "compile";
    }
    @Override public boolean canTransform(    LanguageSourceSet candidate){
      return candidate instanceof ScalaLanguageSourceSet || candidate instanceof JavaSourceSet;
    }
    public Class<? extends DefaultTask> getTaskType(){
      return PlatformScalaCompile.class;
    }
    public void configureTask(    Task task,    BinarySpec binarySpec,    LanguageSourceSet sourceSet,    ServiceRegistry serviceRegistry){
      PlatformScalaCompile compile=(PlatformScalaCompile)task;
      configureScalaTask(compile,((WithJvmAssembly)binarySpec).getAssembly(),String.format("Compiles %s.",sourceSet));
      addSourceSetToCompile(compile,sourceSet);
      addSourceSetClasspath(compile,(ScalaLanguageSourceSet)sourceSet);
    }
    @Override public void configureAdditionalTransform(    Task task,    LanguageSourceSet sourceSet){
      PlatformScalaCompile compile=(PlatformScalaCompile)task;
      addSourceSetToCompile(compile,sourceSet);
    }
  }
;
}
