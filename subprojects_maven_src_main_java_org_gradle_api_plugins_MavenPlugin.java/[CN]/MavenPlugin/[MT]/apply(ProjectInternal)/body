{
  this.project=project;
  project.getPluginManager().apply(BasePlugin.class);
  MavenFactory mavenFactory=project.getServices().get(MavenFactory.class);
  final MavenPluginConvention pluginConvention=addConventionObject(project,mavenFactory);
  final DefaultDeployerFactory deployerFactory=new DefaultDeployerFactory(mavenFactory,loggingManagerFactory,fileResolver,pluginConvention,project.getConfigurations(),pluginConvention.getConf2ScopeMappings(),mavenSettingsProvider,mavenRepositoryLocator);
  configureUploadTasks(deployerFactory);
  configureUploadArchivesTask();
  PluginContainer plugins=project.getPlugins();
  plugins.withType(JavaPlugin.class,new Action<JavaPlugin>(){
    public void execute(    JavaPlugin javaPlugin){
      configureJavaScopeMappings(project.getConfigurations(),pluginConvention.getConf2ScopeMappings());
      configureInstall(project);
    }
  }
);
  plugins.withType(WarPlugin.class,new Action<WarPlugin>(){
    public void execute(    WarPlugin warPlugin){
      configureWarScopeMappings(project.getConfigurations(),pluginConvention.getConf2ScopeMappings());
    }
  }
);
}
