{
  ProcessEnvironment environment;
  OperatingSystem operatingSystem=get(OperatingSystem.class);
  try {
    if (operatingSystem.isUnix()) {
      environment=new LibCBackedProcessEnvironment(get(LibC.class));
    }
 else     if (operatingSystem.isWindows()) {
      environment=new WindowsProcessEnvironment();
    }
 else {
      return new UnsupportedEnvironment();
    }
  }
 catch (  LinkageError e) {
    LOGGER.debug("Unable to load native library. Continuing with fallback. Failure: {}",format(e));
    return new UnsupportedEnvironment();
  }
  if (get(Jvm.class).isIbmJvm()) {
    return new TemporaryIbmProcessEnvironment(environment);
  }
  return environment;
}
