{
  OperatingSystem operatingSystem=get(OperatingSystem.class);
  if (USE_NATIVE_PLATFORM) {
    try {
      Terminals terminals=net.rubygrapefruit.platform.Native.get(Terminals.class);
      return new NativePlatformConsoleDetector(terminals);
    }
 catch (    NativeIntegrationUnavailableException ex) {
      LOGGER.debug("Native-platform terminal is not available. Continuing with fallback.");
    }
catch (    NativeException ex) {
      LOGGER.debug("Unable to load from native-platform backed ConsoleDetector. Continuing with fallback. Failure: {}",format(ex));
    }
  }
  try {
    if (operatingSystem.isWindows()) {
      return new WindowsConsoleDetector();
    }
    return new LibCBackedConsoleDetector(get(LibC.class));
  }
 catch (  LinkageError e) {
    LOGGER.debug("Unable to load native library. Continuing with fallback. Failure: {}",format(e));
    return new NoOpConsoleDetector();
  }
}
