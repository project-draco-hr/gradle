{
  try {
    Terminals terminals=net.rubygrapefruit.platform.Native.get(Terminals.class);
    return new NativePlatformTerminalDetector(terminals);
  }
 catch (  NativeException ex) {
    LOGGER.debug("Unable to load from native platform library backed TerminalDetector. Continuing with fallback.");
  }
  try {
    if (get(OperatingSystem.class).isWindows()) {
      return new WindowsTerminalDetector();
    }
    return new LibCBackedTerminalDetector(get(LibC.class));
  }
 catch (  LinkageError e) {
    LOGGER.debug("Unable to load native library. Continuing with fallback.",e);
    return new NoOpTerminalDetector();
  }
}
