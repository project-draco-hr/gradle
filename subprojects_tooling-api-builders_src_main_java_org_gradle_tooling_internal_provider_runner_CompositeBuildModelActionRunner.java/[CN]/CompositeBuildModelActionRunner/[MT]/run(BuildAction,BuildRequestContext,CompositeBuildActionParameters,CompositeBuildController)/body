{
  if (!(action instanceof BuildModelAction)) {
    return;
  }
  BuildModelAction buildModelAction=(BuildModelAction)action;
  CompositeParameters compositeParameters=actionParameters.getCompositeParameters();
  BuildSessionScopeServices compositeServices=new BuildSessionScopeServices(buildController.getBuildScopeServices(),buildModelAction.getStartParameter(),ClassPath.EMPTY);
  compositeServices.addProvider(new CompositeBuildServices.CompositeBuildSessionScopeServices());
  List<Object> results=null;
  if (isModelRequest(buildModelAction)) {
    results=fetchCompositeModelsInProcess(buildModelAction,requestContext,compositeParameters,compositeServices);
  }
 else {
    if (!buildModelAction.isRunTasks()) {
      throw new IllegalStateException("No tasks defined.");
    }
    executeTasksInProcess(buildModelAction,compositeParameters,requestContext,compositeServices);
  }
  PayloadSerializer payloadSerializer=buildController.getBuildScopeServices().get(PayloadSerializer.class);
  buildController.setResult(new BuildActionResult(payloadSerializer.serialize(results),null));
}
