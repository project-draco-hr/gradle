{
  if (!(action instanceof BuildModelAction)) {
    return;
  }
  final String requestedModelName=((BuildModelAction)action).getModelName();
  Class<? extends HierarchicalElement> modelType=modelRequestTypeToModelTypeMapping.get(requestedModelName);
  if (modelType != null) {
    ProgressLoggerFactory progressLoggerFactory=buildController.getBuildScopeServices().get(ProgressLoggerFactory.class);
    Set<Object> results=aggregateModels(modelType,actionParameters,requestContext.getCancellationToken(),progressLoggerFactory);
    SetContainer setContainer=new SetContainer(results);
    PayloadSerializer payloadSerializer=buildController.getBuildScopeServices().get(PayloadSerializer.class);
    buildController.setResult(new BuildActionResult(payloadSerializer.serialize(setContainer),null));
  }
 else {
    throw new CompositeBuildExceptionVersion1(new IllegalArgumentException("Unknown model " + requestedModelName));
  }
}
