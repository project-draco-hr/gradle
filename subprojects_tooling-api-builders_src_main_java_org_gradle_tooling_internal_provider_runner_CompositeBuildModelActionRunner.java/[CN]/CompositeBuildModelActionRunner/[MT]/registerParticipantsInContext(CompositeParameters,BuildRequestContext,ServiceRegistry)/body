{
  CompositeContextBuilder contextBuilder=sharedServices.get(CompositeContextBuilder.class);
  final IncludedBuildFactory includedBuildFactory=sharedServices.get(IncludedBuildFactory.class);
  Iterable<IncludedBuild> includedBuilds=CollectionUtils.collect(compositeParameters.getBuilds(),new Transformer<IncludedBuild,GradleParticipantBuild>(){
    @Override public IncludedBuild transform(    GradleParticipantBuild gradleParticipantBuild){
      return includedBuildFactory.createBuild(gradleParticipantBuild.getProjectDir(),buildRequestContext);
    }
  }
);
  contextBuilder.addToCompositeContext(includedBuilds);
  sharedServices.get(CompositeBuildContext.class).getAllProjects();
}
