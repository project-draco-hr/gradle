{
  GradleLauncherFactory gradleLauncherFactory=sharedServices.get(GradleLauncherFactory.class);
  CompositeParameters compositeParameters=actionParameters.getCompositeParameters();
  DefaultServiceRegistry compositeServices=createCompositeAwareServices(compositeParameters.getBuilds(),gradleLauncherFactory,sharedServices);
  StartParameter startParameter=compositeAction.getStartParameter().newInstance();
  startParameter.setProjectDir(compositeParameters.getTargetBuild().getProjectDir());
  startParameter.setSearchUpwards(false);
  BuildActionRunner runner=new SubscribableBuildActionRunner(new BuildModelActionRunner());
  org.gradle.launcher.exec.BuildActionExecuter<BuildActionParameters> buildActionExecuter=new InProcessBuildActionExecuter(gradleLauncherFactory,runner);
  BuildModelAction participantAction=new BuildModelAction(startParameter,ModelIdentifier.NULL_MODEL,true,compositeAction.getClientSubscriptions());
  DefaultBuildRequestContext requestContext=createRequestContext(buildRequestContext);
  ServiceRegistry buildScopedServices=new BuildSessionScopeServices(compositeServices,startParameter,ClassPath.EMPTY);
  buildActionExecuter.execute(participantAction,requestContext,null,buildScopedServices);
}
