{
  CompositeParameters compositeParameters=actionParameters.getCompositeParameters();
  for (  GradleParticipantBuild participant : compositeParameters.getBuilds()) {
    if (!participant.getProjectDir().getAbsolutePath().equals(compositeParameters.getCompositeTargetBuildRootDir().getAbsolutePath())) {
      continue;
    }
    if (cancellationToken.isCancellationRequested()) {
      break;
    }
    ProjectConnection projectConnection=connect(participant,compositeParameters);
    try {
      BuildLauncher buildLauncher=projectConnection.newBuild();
      buildLauncher.withCancellationToken(new CancellationTokenAdapter(cancellationToken));
      buildLauncher.addProgressListener(new ProgressListenerToProgressLoggerAdapter(progressLoggerFactory));
      List<String> taskArgs=new ArrayList<String>();
      for (      TaskExecutionRequest request : startParameter.getTaskRequests()) {
        if (request.getProjectPath() == null) {
          taskArgs.addAll(request.getArgs());
        }
 else {
          String projectPath=request.getProjectPath();
          int index=0;
          for (          String arg : request.getArgs()) {
            if (index == 0) {
              taskArgs.add(projectPath + ":" + arg);
            }
 else {
              taskArgs.add(arg);
            }
            index++;
          }
        }
      }
      buildLauncher.forTasks(taskArgs.toArray(new String[0]));
      buildLauncher.run();
    }
 catch (    GradleConnectionException e) {
      throw new CompositeBuildExceptionVersion1(e,new DefaultBuildIdentity(compositeParameters.getCompositeTargetBuildRootDir()));
    }
 finally {
      projectConnection.close();
    }
  }
}
