{
  String name=substitute(attributes.getValue("name"));
  if (name == null) {
    name=substitute(attributes.getValue("artifact"));
    if (name == null) {
      name="artifact".equals(tag) ? dd.getDependencyId().getName() : PatternMatchers.ANY_EXPRESSION;
    }
  }
  String type=substitute(attributes.getValue("type"));
  if (type == null) {
    type="artifact".equals(tag) ? "jar" : PatternMatchers.ANY_EXPRESSION;
  }
  String ext=substitute(attributes.getValue("ext"));
  ext=ext != null ? ext : type;
  if (state == State.DEP_ARTIFACT) {
    String url=substitute(attributes.getValue("url"));
    Map<String,String> extraAttributes=getExtraAttributes(attributes,new String[]{"name","type","ext","url","conf"});
    confAware=new DefaultDependencyArtifactDescriptor(dd,name,type,ext,url == null ? null : new URL(url),extraAttributes);
  }
 else   if (state == State.ARTIFACT_INCLUDE) {
    PatternMatcher matcher=getPatternMatcher(attributes.getValue("matcher"));
    String org=elvis(substitute(attributes.getValue("org")),PatternMatchers.ANY_EXPRESSION);
    String module=elvis(substitute(attributes.getValue("module")),PatternMatchers.ANY_EXPRESSION);
    ArtifactId aid=IvyUtil.createArtifactId(org,module,name,type,ext);
    Map<String,String> extraAttributes=getExtraAttributes(attributes,new String[]{"org","module","name","type","ext","matcher","conf"});
    confAware=new DefaultIncludeRule(aid,matcher,extraAttributes);
  }
 else {
    PatternMatcher matcher=getPatternMatcher(attributes.getValue("matcher"));
    String org=elvis(substitute(attributes.getValue("org")),PatternMatchers.ANY_EXPRESSION);
    String module=elvis(substitute(attributes.getValue("module")),PatternMatchers.ANY_EXPRESSION);
    ArtifactId aid=IvyUtil.createArtifactId(org,module,name,type,ext);
    Map<String,String> extraAttributes=getExtraAttributes(attributes,new String[]{"org","module","name","type","ext","matcher","conf"});
    confAware=new DefaultExcludeRule(aid,matcher,extraAttributes);
  }
  String confs=substitute(attributes.getValue("conf"));
  if (confs != null && confs.length() > 0) {
    String[] conf;
    if ("*".equals(confs)) {
      conf=getMd().getConfigurationsNames();
    }
 else {
      conf=confs.split(",");
    }
    for (    String confName : conf) {
      addConfiguration(confName.trim());
    }
  }
}
