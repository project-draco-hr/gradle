{
  if (OperatingSystem.current().isWindows()) {
    return new ComposableFilePermissionHandler(new EmptyChmod(),new FallbackStat());
  }
  if (JavaVersion.current().isJava7()) {
    String jdkFilePermissionclass="org.gradle.internal.nativeplatform.filesystem.jdk7.PosixJdk7FilePermissionHandler";
    try {
      return (FilePermissionHandler)FilePermissionHandler.class.getClassLoader().loadClass(jdkFilePermissionclass).newInstance();
    }
 catch (    ClassNotFoundException e) {
      LOGGER.warn(String.format("Unable to load %s. Continuing with fallback.",jdkFilePermissionclass));
    }
catch (    Exception e) {
      throw UncheckedException.throwAsUncheckedException(e);
    }
  }
  ComposableFilePermissionHandler.Chmod chmod=createChmod();
  ComposableFilePermissionHandler.Stat stat=createStat();
  return new ComposableFilePermissionHandler(chmod,stat);
}
