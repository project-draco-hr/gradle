{
  waitingForCompletion.set(true);
  CountDownLatch finished=new CountDownLatch(operations.size());
  Queue<Throwable> failures=Queues.newConcurrentLinkedQueue();
  for (  QueuedOperation operation : operations) {
    if (operation.future.isCancelled()) {
      finished.countDown();
    }
 else {
      Futures.addCallback(operation.future,new CompletionCallback(finished,failures));
    }
  }
  try {
    finished.await();
  }
 catch (  InterruptedException e) {
    throw UncheckedException.throwAsUncheckedException(e);
  }
  if (!failures.isEmpty()) {
    throw new MultipleBuildOperationFailures(getFailureMessage(failures),failures,logLocation);
  }
}
