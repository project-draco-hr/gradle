{
  LOGGER.debug("Using tooling provider from {}",distribution.getDisplayName());
  ClassLoader classLoader=createImplementationClassLoader(distribution);
  ServiceLocator serviceLocator=new ServiceLocator();
  try {
    ConnectionVersion4 implementation=serviceLocator.findServiceImplementation(ConnectionVersion4.class,classLoader);
    if (implementation == null) {
      Matcher m=Pattern.compile("\\w+Version(\\d+)").matcher(ConnectionVersion4.class.getSimpleName());
      m.matches();
      String protocolVersion=m.group(1);
      throw new UnsupportedVersionException(String.format("The specified %s is not supported by this tooling API version (%s, protocol version %s)",distribution.getDisplayName(),GradleVersion.current().getVersion(),protocolVersion));
    }
    return implementation;
  }
 catch (  UnsupportedVersionException e) {
    throw e;
  }
catch (  Throwable t) {
    throw new GradleConnectionException(String.format("Could not create an instance of Tooling API implementation using the specified %s.",distribution.getDisplayName()),t);
  }
}
