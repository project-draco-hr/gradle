{
  return ImmutableSetMultimap.<ModelActionRole,ModelAction>builder().put(ModelActionRole.Discover,AddProjectionsAction.of(subject,descriptor,ModelMapModelProjection.managed(schema.getElementType(),ChildNodeInitializerStrategyAccessors.fromPrivateData()))).put(ModelActionRole.Create,DirectNodeInputUsingModelAction.of(subject,descriptor,ModelReference.of(NodeInitializerRegistry.class),new BiAction<MutableModelNode,NodeInitializerRegistry>(){
    @Override public void execute(    MutableModelNode modelNode,    NodeInitializerRegistry nodeInitializerRegistry){
      ChildNodeInitializerStrategy<E> childStrategy=NodeBackedModelMap.createUsingRegistry(schema.getElementType(),nodeInitializerRegistry);
      modelNode.setPrivateData(ChildNodeInitializerStrategy.class,childStrategy);
    }
  }
)).build();
}
