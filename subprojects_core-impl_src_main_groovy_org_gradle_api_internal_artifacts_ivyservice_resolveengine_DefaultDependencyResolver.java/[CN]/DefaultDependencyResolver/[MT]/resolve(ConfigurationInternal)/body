{
  LOGGER.debug("Resolving {}",configuration);
  IvyAdapter ivyAdapter=ivyFactory.create(configuration);
  DependencyToModuleResolver dependencyResolver=ivyAdapter.getDependencyToModuleResolver();
  dependencyResolver=new ClientModuleResolver(dependencyResolver);
  dependencyResolver=new ProjectDependencyResolver(projectModuleRegistry,dependencyResolver);
  dependencyResolver=new LazyDependencyToModuleResolver(dependencyResolver,ivyAdapter.getResolveData().getSettings().getVersionMatcher());
  dependencyResolver=new VersionForcingDependencyToModuleResolver(dependencyResolver,configuration.getResolutionStrategy().getForcedModules());
  ModuleConflictResolver conflictResolver;
  if (configuration.getResolutionStrategy().getConflictResolution() instanceof StrictConflictResolution) {
    conflictResolver=new StrictConflictResolver();
  }
 else {
    conflictResolver=new LatestModuleConflictResolver();
  }
  DependencyGraphBuilder builder=new DependencyGraphBuilder(moduleDescriptorConverter,resolvedArtifactFactory,dependencyResolver,conflictResolver);
  DefaultLenientConfiguration result=builder.resolve(configuration,ivyAdapter.getResolveData());
  return new DefaultResolvedConfiguration(result);
}
