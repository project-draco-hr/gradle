{
  ModelReference<C> containerReference=ModelReference.of(modelPath,containerType);
  ContainerInfo<I> containerInfo=creator(modelRegistry,containerReference,itemType,Transformers.constant(container),namer,descriptor,itemDescriptorGenerator);
  ModelType<RuleAwareNamedDomainObjectFactoryRegistry<I>> factoryRegistryType=new ModelType.Builder<RuleAwareNamedDomainObjectFactoryRegistry<I>>(){
  }
.where(new ModelType.Parameter<I>(){
  }
,itemType).build();
  modelRegistry.createOrReplace(containerInfo.creatorBuilder.withProjection(new DynamicTypesDomainObjectContainerModelProjection<I>(container,itemType,containerInfo.instantiatorReference,containerInfo.storeReference)).withProjection(new UnmanagedModelProjection<P>(publicType,true,true)).withProjection(new UnmanagedModelProjection<RuleAwareNamedDomainObjectFactoryRegistry<I>>(factoryRegistryType,true,true)).build());
}
