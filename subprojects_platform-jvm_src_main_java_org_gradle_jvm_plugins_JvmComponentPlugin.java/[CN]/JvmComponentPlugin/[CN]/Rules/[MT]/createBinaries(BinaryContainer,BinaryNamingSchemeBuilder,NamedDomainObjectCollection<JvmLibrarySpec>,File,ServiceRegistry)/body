{
  JavaToolChain toolChain=serviceRegistry.get(JavaToolChain.class);
  for (  JvmLibrarySpec jvmLibrary : libraries) {
    for (    JavaVersion target : jvmLibrary.getTargets()) {
      BinaryNamingSchemeBuilder componentBuilder=namingSchemeBuilder.withComponentName(jvmLibrary.getName()).withTypeString("jar");
      if (jvmLibrary.getTargets().size() > 1) {
        componentBuilder=componentBuilder.withVariantDimension("jdk" + target);
      }
      BinaryNamingScheme namingScheme=componentBuilder.build();
      JvmPlatform platform=new DefaultJvmPlatform(target);
      toolChain.assertValidPlatform(platform);
      JarBinarySpecInternal jarBinary=new DefaultJarBinarySpec(jvmLibrary,namingScheme,toolChain,platform);
      jarBinary.source(jvmLibrary.getSource());
      configureBinaryOutputLocations(jarBinary,buildDir);
      jvmLibrary.getBinaries().add(jarBinary);
      binaries.add(jarBinary);
    }
  }
}
