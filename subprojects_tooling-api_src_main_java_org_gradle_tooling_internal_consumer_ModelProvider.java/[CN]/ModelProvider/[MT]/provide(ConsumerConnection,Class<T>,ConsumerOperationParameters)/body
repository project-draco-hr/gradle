{
  VersionDetails version=connection.getVersionDetails();
  if (operationParameters.getJavaHome() != null) {
    if (!version.supportsConfiguringJavaHome()) {
      throw Exceptions.unsupportedOperationConfiguration("modelBuilder.setJavaHome() and buildLauncher.setJavaHome()");
    }
  }
  if (operationParameters.getJvmArguments() != null) {
    if (!version.supportsConfiguringJvmArguments()) {
      throw Exceptions.unsupportedOperationConfiguration("modelBuilder.setJvmArguments() and buildLauncher.setJvmArguments()");
    }
  }
  if (operationParameters.getStandardInput() != null) {
    if (!version.supportsConfiguringStandardInput()) {
      throw Exceptions.unsupportedOperationConfiguration("modelBuilder.setStandardInput() and buildLauncher.setStandardInput()");
    }
  }
  if (modelType != Void.class && operationParameters.getTasks() != null) {
    if (!version.supportsRunningTasksWhenBuildingModel()) {
      throw Exceptions.unsupportedOperationConfiguration("modelBuilder.forTasks()");
    }
  }
  if (modelType == BuildEnvironment.class && !version.isModelSupported(BuildEnvironment.class)) {
    VersionOnlyBuildEnvironment out=new VersionOnlyBuildEnvironment(version.getVersion());
    return modelType.cast(out);
  }
  if (modelType == GradleProject.class && !version.isModelSupported(GradleProject.class)) {
    EclipseProjectVersion3 project=connection.run(EclipseProjectVersion3.class,operationParameters);
    GradleProject gradleProject=new GradleProjectConverter().convert(project);
    return modelType.cast(gradleProject);
  }
  return connection.run(modelType,operationParameters);
}
