{
  ant.withClasspath(classpath).execute(new Closure<Object>(this,this){
    @SuppressWarnings("UnusedDeclaration") public Object doCall(    Object it){
      final GroovyObjectSupport antBuilder=(GroovyObjectSupport)it;
      antBuilder.invokeMethod("taskdef",ImmutableMap.of("name","jacocoReport","classname","org.jacoco.ant.ReportTask"));
      final Map<String,Object> emptyArgs=Collections.<String,Object>emptyMap();
      antBuilder.invokeMethod("jacocoReport",new Object[]{emptyArgs,new Closure<Object>(this,this){
        public Object doCall(        Object ignore){
          antBuilder.invokeMethod("executiondata",new Object[]{emptyArgs,new Closure<Object>(this,this){
            public Object doCall(            Object ignore){
              executionData.addToAntBuilder(antBuilder,"resources");
              return null;
            }
          }
});
          Map<String,Object> structureArgs=ImmutableMap.<String,Object>of("name",projectName);
          antBuilder.invokeMethod("structure",new Object[]{structureArgs,new Closure<Object>(this,this){
            public Object doCall(            Object ignore){
              antBuilder.invokeMethod("classfiles",new Object[]{emptyArgs,new Closure<Object>(this,this){
                public Object doCall(                Object ignore){
                  allClassesDirs.addToAntBuilder(antBuilder,"resources");
                  return null;
                }
              }
});
              antBuilder.invokeMethod("sourcefiles",new Object[]{emptyArgs,new Closure<Object>(this,this){
                public Object doCall(                Object ignore){
                  allSourcesDirs.addToAntBuilder(antBuilder,"resources");
                  return null;
                }
              }
});
              return null;
            }
          }
});
          if (reports.getHtml().isEnabled()) {
            antBuilder.invokeMethod("html",new Object[]{ImmutableMap.<String,Object>of("destdir",reports.getHtml().getDestination())});
          }
          if (reports.getXml().isEnabled()) {
            antBuilder.invokeMethod("xml",new Object[]{ImmutableMap.<String,Object>of("destfile",reports.getXml().getDestination())});
          }
          if (reports.getCsv().isEnabled()) {
            antBuilder.invokeMethod("csv",new Object[]{ImmutableMap.<String,Object>of("destfile",reports.getCsv().getDestination())});
          }
          return null;
        }
      }
});
      return null;
    }
  }
);
}
