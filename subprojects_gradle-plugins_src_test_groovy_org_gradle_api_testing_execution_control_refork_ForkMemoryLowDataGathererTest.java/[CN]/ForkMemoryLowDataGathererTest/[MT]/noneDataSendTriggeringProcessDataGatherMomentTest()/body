{
  final ForkMemoryLowConfig config=context.mock(ForkMemoryLowConfig.class);
  context.checking(new Expectations(){
{
      one(config).getMemoryLowThreshold();
      will(returnValue(50D));
    }
  }
);
  dataGatherer.configure(config);
  final JavaLangRuntimeAdapter runtimeAdapter=context.mock(JavaLangRuntimeAdapter.class);
  dataGatherer.setRuntimeAdapter(runtimeAdapter);
  final long freeMemory=50L;
  final long maxMemory=100L;
  final long totalMemory=99L;
  context.checking(new Expectations(){
{
      one(runtimeAdapter).getFreeMemory();
      will(returnValue(freeMemory));
      one(runtimeAdapter).getMaxMemory();
      will(returnValue(maxMemory));
      one(runtimeAdapter).getTotalMemory();
      will(returnValue(totalMemory));
    }
  }
);
  final boolean dataSendNeeded=dataGatherer.processDataGatherMoment(DataGatherMoment.AFTER_TEST_EXECUTION);
  assertFalse(dataSendNeeded);
  final ForkMemoryLowData currentData=(ForkMemoryLowData)dataGatherer.getCurrentData();
  assertEquals(freeMemory,currentData.getFreeMemory());
  assertEquals(maxMemory,currentData.getMaxMemory());
  assertEquals(totalMemory,currentData.getTotalMemory());
}
