{
  ToolChainAvailability result=new ToolChainAvailability();
  result.mustBeAvailable(getAvailability());
  if (visualCpp != null && !visualCpp.isSupportedPlatform(targetPlatform)) {
    result.unavailable(String.format("Don't know how to build for platform '%s'.",targetPlatform.getName()));
  }
  if (!result.isAvailable()) {
    return new UnavailablePlatformToolChain(result);
  }
  VisualCppTargetedPlatformToolChain configurableToolChain=instantiator.newInstance(VisualCppTargetedPlatformToolChain.class,targetPlatform,instantiator);
  configureActions.execute(configurableToolChain);
  Map<String,CommandLineToolConfigurationInternal> toolConfigurations=new HashMap<String,CommandLineToolConfigurationInternal>();
  for (  CommandLineToolConfigurationInternal tool : toolConfigurations.values()) {
    toolConfigurations.put(tool.getName(),tool);
  }
  return new VisualCppPlatformToolChain(toolConfigurations,visualCpp,windowsSdk,targetPlatform);
}
