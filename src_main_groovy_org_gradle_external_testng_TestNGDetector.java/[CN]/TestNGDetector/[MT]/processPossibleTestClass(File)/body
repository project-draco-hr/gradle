{
  final TestClassVisitor classVisitor=createClassVisitor();
  InputStream classStream=null;
  try {
    classStream=new BufferedInputStream(new FileInputStream(testClassFile));
    final ClassReader classReader=new ClassReader(classStream);
    classReader.accept(classVisitor,true);
  }
 catch (  Throwable e) {
    throw new GradleException("failed to read class file " + testClassFile.getAbsolutePath(),e);
  }
 finally {
    IOUtils.closeQuietly(classStream);
  }
  boolean isTest=classVisitor.isTest();
  if (!isTest) {
    final String superClassName=classVisitor.getSuperClassName();
    if (!"java/lang/Object".equals(superClassName) && !"groovy.lang.GroovyObject".equals(superClassName)) {
      final File superClassFile=getSuperTestClassFile(superClassName);
      if (superClassFile != null) {
        isTest=processPossibleTestClass(superClassFile);
      }
 else       logger.warn("test-class-scan : failed to scan parent class {}, could not find the class file",superClassName);
    }
  }
  if (isTest && !classVisitor.isAbstract())   testClassNames.add(classVisitor.getClassName() + ".class");
  return isTest;
}
