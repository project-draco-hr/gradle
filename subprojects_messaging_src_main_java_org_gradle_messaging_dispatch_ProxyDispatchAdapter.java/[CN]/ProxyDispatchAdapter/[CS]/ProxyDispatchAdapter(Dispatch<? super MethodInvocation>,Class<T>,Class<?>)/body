{
  this.type=type;
  List<Class<?>> types=new ArrayList<Class<?>>();
  ClassLoader classLoader=type.getClassLoader();
  types.add(type);
  for (  Class<?> extraType : extraTypes) {
    ClassLoader candidate=extraType.getClassLoader();
    if (candidate != classLoader && candidate != null) {
      try {
        if (candidate.loadClass(type.getName()) != null) {
          classLoader=candidate;
        }
      }
 catch (      ClassNotFoundException e) {
      }
    }
    types.add(extraType);
  }
  source=type.cast(Proxy.newProxyInstance(classLoader,types.toArray(new Class<?>[0]),new DispatchingInvocationHandler(type,dispatch)));
}
