{
  if (!GUtil.isTrue(path) || !GUtil.isTrue(baseDir)) {
    throw new IllegalArgumentException(String.format("Neither path nor baseDir may be null or empty string. path='%s' basedir='%s'",path,baseDir));
  }
  File file;
  if (path instanceof File) {
    file=(File)path;
  }
 else {
    file=new File(path.toString());
  }
  if (!file.isAbsolute()) {
    file=new File(baseDir,path.toString());
  }
  file=GFileUtils.canonicalise(file);
  if (validation != PathValidation.NONE) {
switch (validation) {
case EXISTS:
      if (!file.exists()) {
        throw new InvalidUserDataException(String.format("File '%s' does not exist.",file));
      }
    break;
case FILE:
  if (!file.exists()) {
    throw new InvalidUserDataException(String.format("File '%s' does not exist.",file));
  }
if (!file.isFile()) {
  throw new InvalidUserDataException(String.format("File '%s' is not a file.",file));
}
break;
case DIRECTORY:
if (!file.exists()) {
throw new InvalidUserDataException(String.format("Directory '%s' does not exist.",file));
}
if (!file.isDirectory()) {
throw new InvalidUserDataException(String.format("Directory '%s' is not a directory.",file));
}
break;
}
}
return file;
}
