{
  context.checking(new Expectations(){
{
      allowing(project).getGradle();
      will(returnValue(gradle));
      allowing(project).getProjectDir();
      will(returnValue(new File("project-dir").getAbsoluteFile()));
      allowing(project).getBuildScriptSource();
      allowing(parent).get(ITaskFactory.class);
      will(returnValue(taskFactory));
      allowing(parent).get(DependencyFactory.class);
      will(returnValue(dependencyFactory));
      allowing(parent).get(PluginRegistry.class);
      will(returnValue(pluginRegistry));
      allowing(parent).get(DependencyManagementServices.class);
      will(returnValue(dependencyManagementServices));
      allowing(parent).get(org.gradle.internal.reflect.Instantiator.class);
      will(returnValue(new org.gradle.internal.reflect.DirectInstantiator()));
      allowing(parent).get(FileSystem.class);
      will(returnValue(context.mock(FileSystem.class)));
      allowing(parent).get(ClassGenerator.class);
      will(returnValue(context.mock(ClassGenerator.class)));
    }
  }
);
}
