{
  if (!(source instanceof DefaultDependencyDescriptor)) {
    throw new IllegalArgumentException("I can only create descriptors out of DefaultDependencyDescriptor");
  }
  DefaultDependencyDescriptor out=new DefaultDependencyDescriptor(moduleDescriptor(source),targetId,source.getDynamicConstraintDependencyRevisionId(),source.isForce(),source.isChanging(),source.isTransitive());
  setProperty(out,"parentId",getProperty(source,"parentId"));
  setProperty(out,"namespace",source.getNamespace());
  ((Map)getProperty(out,"confs")).putAll((Map)getProperty(source,"confs"));
  Map sourceExcludeRules=(Map)getProperty(source,"excludeRules");
  setProperty(out,"excludeRules",sourceExcludeRules == null ? null : new LinkedHashMap(sourceExcludeRules));
  Map sourceIncludeRules=(Map)getProperty(source,"includeRules");
  setProperty(out,"includeRules",sourceIncludeRules == null ? null : new LinkedHashMap(sourceIncludeRules));
  Map dependencyArtifacts=(Map)getProperty(source,"dependencyArtifacts");
  setProperty(out,"dependencyArtifacts",dependencyArtifacts == null ? null : new LinkedHashMap(dependencyArtifacts));
  setProperty(out,"sourceModule",source.getSourceModule());
  return out;
}
