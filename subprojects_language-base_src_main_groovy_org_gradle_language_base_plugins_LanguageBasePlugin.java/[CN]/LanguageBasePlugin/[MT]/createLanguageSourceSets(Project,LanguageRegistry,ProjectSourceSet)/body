{
  languageRegistry.all(new Action<LanguageRegistration>(){
    public void execute(    final LanguageRegistration languageRegistration){
      sources.all(new Action<FunctionalSourceSet>(){
        public void execute(        final FunctionalSourceSet functionalSourceSet){
          NamedDomainObjectFactory<? extends LanguageSourceSet> namedDomainObjectFactory=new NamedDomainObjectFactory<LanguageSourceSet>(){
            public LanguageSourceSet create(            String name){
              Class<? extends LanguageSourceSet> sourceSetImplementation=languageRegistration.getSourceSetImplementation();
              return instantiator.newInstance(sourceSetImplementation,name,functionalSourceSet,project);
            }
          }
;
          Class<? extends LanguageSourceSet> sourceSetType=languageRegistration.getSourceSetType();
          functionalSourceSet.registerFactory((Class<LanguageSourceSet>)sourceSetType,namedDomainObjectFactory);
          functionalSourceSet.maybeCreate(languageRegistration.getName(),sourceSetType);
        }
      }
);
    }
  }
);
}
