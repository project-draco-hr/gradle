{
  if (notation instanceof PublishArtifact) {
    return (PublishArtifact)notation;
  }
  if (notation instanceof AbstractArchiveTask) {
    return new ArchivePublishArtifact((AbstractArchiveTask)notation);
  }
  if (notation instanceof File) {
    File file=(File)notation;
    Module module=metaDataProvider.getModule();
    String name=file.getName();
    String extension="";
    String classifier="";
    boolean done=false;
    int startVersion=StringUtils.lastIndexOf(name,"-" + module.getVersion());
    if (startVersion >= 0) {
      int endVersion=startVersion + module.getVersion().length() + 1;
      if (endVersion == name.length()) {
        name=name.substring(0,startVersion);
        done=true;
      }
 else       if (endVersion < name.length() && name.charAt(endVersion) == '-') {
        String tail=name.substring(endVersion + 1);
        name=name.substring(0,startVersion);
        classifier=StringUtils.substringBeforeLast(tail,".");
        extension=StringUtils.substringAfterLast(tail,".");
        done=true;
      }
 else       if (endVersion < name.length() && StringUtils.lastIndexOf(name,".") == endVersion) {
        extension=name.substring(endVersion + 1);
        name=name.substring(0,startVersion);
        done=true;
      }
    }
    if (!done) {
      extension=StringUtils.substringAfterLast(name,".");
      name=StringUtils.substringBeforeLast(name,".");
    }
    if (extension.length() == 0) {
      extension=null;
    }
    if (classifier.length() == 0) {
      classifier=null;
    }
    return new DefaultPublishArtifact(name,extension,extension,classifier,null,file);
  }
  throw new InvalidUserDataException("Notation is invalid for an artifact! Passed notation=" + notation);
}
