{
  final Map<String,ModuleDescriptor> clientModuleRegistry=new HashMap<String,ModuleDescriptor>();
  add(ListenerManager.class,listenerManager);
  add(ImportsReader.class,new ImportsReader(startParameter.getDefaultImportsFile()));
  add(ClassGenerator.class,new AsmBackedClassGenerator());
  add(StandardOutputRedirector.class,new DefaultStandardOutputRedirector());
  add(PublishArtifactFactory.class,new DefaultPublishArtifactFactory());
  add(new Service(TaskExecuter.class){
    protected Object create(){
      return new SkipTaskExecuter(new ExecutionShortCircuitTaskExecuter(new DefaultTaskExecuter(get(ListenerManager.class).getBroadcaster(TaskActionListener.class)),get(TaskArtifactStateRepository.class),startParameter));
    }
  }
);
  add(new Service(RepositoryHandlerFactory.class){
    protected Object create(){
      return new DefaultRepositoryHandlerFactory(new DefaultResolverFactory(),get(ClassGenerator.class));
    }
  }
);
  add(new Service(CacheRepository.class){
    protected Object create(){
      return new DefaultCacheRepository(startParameter.getGradleUserHomeDir(),startParameter.getCacheUsage());
    }
  }
);
  add(new Service(ModuleDescriptorFactory.class){
    protected Object create(){
      return new DefaultModuleDescriptorFactory();
    }
  }
);
  add(new Service(ExcludeRuleConverter.class){
    protected Object create(){
      return new DefaultExcludeRuleConverter();
    }
  }
);
  add(new Service(ExternalModuleDependencyDescriptorFactory.class){
    protected Object create(){
      return new ExternalModuleDependencyDescriptorFactory(get(ExcludeRuleConverter.class));
    }
  }
);
  add(new Service(ConfigurationsToModuleDescriptorConverter.class){
    protected Object create(){
      return new DefaultConfigurationsToModuleDescriptorConverter();
    }
  }
);
  add(new Service(IvyFileConverter.class){
    protected Object create(){
      DefaultModuleDescriptorFactoryForClientModule clientModuleDescriptorFactory=new DefaultModuleDescriptorFactoryForClientModule();
      DependencyDescriptorFactoryDelegate dependencyDescriptorFactoryDelegate=new DependencyDescriptorFactoryDelegate(new ClientModuleDependencyDescriptorFactory(get(ExcludeRuleConverter.class),clientModuleDescriptorFactory,clientModuleRegistry),new ProjectDependencyDescriptorFactory(get(ExcludeRuleConverter.class),ProjectDependencyDescriptorFactory.IVY_FILE_MODULE_REVISION_ID_STRATEGY),get(ExternalModuleDependencyDescriptorFactory.class));
      clientModuleDescriptorFactory.setDependencyDescriptorFactory(dependencyDescriptorFactoryDelegate);
      return new DefaultIvyFileConverter(get(ModuleDescriptorFactory.class),get(ConfigurationsToModuleDescriptorConverter.class),new DefaultDependenciesToModuleDescriptorConverter(dependencyDescriptorFactoryDelegate,get(ExcludeRuleConverter.class)),new DefaultArtifactsToModuleDescriptorConverter(DefaultArtifactsToModuleDescriptorConverter.IVY_FILE_STRATEGY));
    }
  }
);
  add(new Service(ResolveModuleDescriptorConverter.class){
    protected Object create(){
      DefaultModuleDescriptorFactoryForClientModule clientModuleDescriptorFactory=new DefaultModuleDescriptorFactoryForClientModule();
      DependencyDescriptorFactoryDelegate dependencyDescriptorFactoryDelegate=new DependencyDescriptorFactoryDelegate(new ClientModuleDependencyDescriptorFactory(get(ExcludeRuleConverter.class),clientModuleDescriptorFactory,clientModuleRegistry),new ProjectDependencyDescriptorFactory(get(ExcludeRuleConverter.class),ProjectDependencyDescriptorFactory.RESOLVE_MODULE_REVISION_ID_STRATEGY),get(ExternalModuleDependencyDescriptorFactory.class));
      clientModuleDescriptorFactory.setDependencyDescriptorFactory(dependencyDescriptorFactoryDelegate);
      return new ResolveModuleDescriptorConverter(get(ModuleDescriptorFactory.class),get(ConfigurationsToModuleDescriptorConverter.class),new DefaultDependenciesToModuleDescriptorConverter(dependencyDescriptorFactoryDelegate,get(ExcludeRuleConverter.class)));
    }
  }
);
  add(new Service(PublishModuleDescriptorConverter.class){
    protected Object create(){
      return new PublishModuleDescriptorConverter(get(ResolveModuleDescriptorConverter.class),new DefaultArtifactsToModuleDescriptorConverter(DefaultArtifactsToModuleDescriptorConverter.RESOLVE_STRATEGY));
    }
  }
);
  add(new Service(ConfigurationContainerFactory.class){
    protected Object create(){
      DefaultModuleDescriptorFactoryForClientModule clientModuleDescriptorFactory=new DefaultModuleDescriptorFactoryForClientModule();
      DependencyDescriptorFactoryDelegate dependencyDescriptorFactoryDelegate=new DependencyDescriptorFactoryDelegate(new ClientModuleDependencyDescriptorFactory(get(ExcludeRuleConverter.class),clientModuleDescriptorFactory,clientModuleRegistry),new ProjectDependencyDescriptorFactory(get(ExcludeRuleConverter.class),ProjectDependencyDescriptorFactory.RESOLVE_MODULE_REVISION_ID_STRATEGY),get(ExternalModuleDependencyDescriptorFactory.class));
      clientModuleDescriptorFactory.setDependencyDescriptorFactory(dependencyDescriptorFactoryDelegate);
      return new DefaultConfigurationContainerFactory(clientModuleRegistry,new DefaultSettingsConverter(),get(ResolveModuleDescriptorConverter.class),get(PublishModuleDescriptorConverter.class),get(IvyFileConverter.class),new DefaultIvyFactory(),new SelfResolvingDependencyResolver(new DefaultIvyDependencyResolver(new DefaultIvyReportConverter(dependencyDescriptorFactoryDelegate))),new DefaultIvyDependencyPublisher(new DefaultPublishOptionsFactory()),get(ClassGenerator.class));
    }
  }
);
  add(new Service(DependencyFactory.class){
    protected Object create(){
      ClassGenerator classGenerator=get(ClassGenerator.class);
      return new DefaultDependencyFactory(WrapUtil.<IDependencyImplementationFactory>toSet(new ModuleDependencyFactory(classGenerator),new SelfResolvingDependencyFactory(classGenerator)),new DefaultClientModuleFactory(classGenerator),new DefaultProjectDependencyFactory(startParameter.getProjectDependenciesBuildInstruction(),classGenerator));
    }
  }
);
  add(new Service(ProjectEvaluator.class){
    protected Object create(){
      return new DefaultProjectEvaluator(new BuildScriptProcessor(get(ImportsReader.class),get(ScriptCompilerFactory.class)));
    }
  }
);
  add(new Service(ITaskFactory.class){
    protected Object create(){
      return new DependencyAutoWireTaskFactory(new AnnotationProcessingTaskFactory(new TaskFactory(get(ClassGenerator.class))));
    }
  }
);
  add(new Service(TaskArtifactStateRepository.class){
    protected Object create(){
      return new DefaultTaskArtifactStateRepository(get(CacheRepository.class),new CachingHasher(new DefaultHasher(),get(CacheRepository.class)));
    }
  }
);
  add(new Service(ScriptCompilerFactory.class){
    protected Object create(){
      return new DefaultScriptCompilerFactory(new DefaultScriptCompilationHandler(),startParameter.getCacheUsage(),new DefaultScriptRunnerFactory(new DefaultScriptMetaData()),get(CacheRepository.class));
    }
  }
);
}
