{
  final Map<String,ModuleDescriptor> clientModuleRegistry=new HashMap<String,ModuleDescriptor>();
  add(ListenerManager.class,listenerManager);
  add(ImportsReader.class,new ImportsReader(startParameter.getDefaultImportsFile()));
  add(ClassGenerator.class,new AsmBackedClassGenerator());
  add(StandardOutputRedirector.class,new DefaultStandardOutputRedirector());
  add(PublishArtifactFactory.class,new DefaultPublishArtifactFactory());
  add(new Service(TaskExecuter.class){
    protected Object create(){
      return new DefaultTaskExecuter(startParameter,get(ListenerManager.class).getBroadcaster(TaskActionListener.class));
    }
  }
);
  add(new Service(RepositoryHandlerFactory.class){
    protected Object create(){
      return new DefaultRepositoryHandlerFactory(new DefaultResolverFactory(),get(ClassGenerator.class));
    }
  }
);
  add(new Service(CacheRepository.class){
    protected Object create(){
      return new DefaultCacheRepository(startParameter.getGradleUserHomeDir(),startParameter.getCacheUsage());
    }
  }
);
  add(new Service(ConfigurationContainerFactory.class){
    protected Object create(){
      return new DefaultConfigurationContainerFactory(clientModuleRegistry,new DefaultSettingsConverter(),get(ModuleDescriptorConverter.class),new DefaultIvyFactory(),new SelfResolvingDependencyResolver(new DefaultIvyDependencyResolver(new DefaultIvyReportConverter())),new DefaultIvyDependencyPublisher(new DefaultModuleDescriptorForUploadConverter(),new DefaultPublishOptionsFactory()));
    }
  }
);
  add(new Service(ModuleDescriptorConverter.class){
    protected Object create(){
      ExcludeRuleConverter excludeRuleConverter=new DefaultExcludeRuleConverter();
      return new DefaultModuleDescriptorConverter(new DefaultModuleDescriptorFactory(),new DefaultConfigurationsToModuleDescriptorConverter(),new DefaultDependenciesToModuleDescriptorConverter(new DefaultDependencyDescriptorFactory(excludeRuleConverter,new DefaultClientModuleDescriptorFactory(),clientModuleRegistry),excludeRuleConverter),new DefaultArtifactsToModuleDescriptorConverter());
    }
  }
);
  add(new Service(DependencyFactory.class){
    protected Object create(){
      return new DefaultDependencyFactory(WrapUtil.<IDependencyImplementationFactory>toSet(new ModuleDependencyFactory(),new SelfResolvingDependencyFactory()),new DefaultClientModuleFactory(),new DefaultProjectDependencyFactory(startParameter.getProjectDependenciesBuildInstruction()));
    }
  }
);
  add(new Service(ProjectEvaluator.class){
    protected Object create(){
      return new DefaultProjectEvaluator(new BuildScriptProcessor(get(ImportsReader.class),get(ScriptCompilerFactory.class)));
    }
  }
);
  add(new Service(ITaskFactory.class){
    protected Object create(){
      return new ExecutionShortCircuitTaskFactory(new DependencyAutoWireTaskFactory(new AnnotationProcessingTaskFactory(new TaskFactory(get(ClassGenerator.class)))),new DefaultTaskArtifactStateRepository(get(CacheRepository.class),new CachingHasher(new DefaultHasher(),get(CacheRepository.class))));
    }
  }
);
  add(new Service(ScriptCompilerFactory.class){
    protected Object create(){
      return new DefaultScriptCompilerFactory(new DefaultScriptCompilationHandler(),startParameter.getCacheUsage(),new DefaultScriptRunnerFactory(new DefaultScriptMetaData()),get(CacheRepository.class));
    }
  }
);
}
