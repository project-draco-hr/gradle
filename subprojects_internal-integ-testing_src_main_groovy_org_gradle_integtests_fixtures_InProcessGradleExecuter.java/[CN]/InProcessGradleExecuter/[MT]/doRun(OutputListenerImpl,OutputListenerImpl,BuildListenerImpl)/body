{
  assertCanExecute();
  File userDir=new File(System.getProperty("user.dir"));
  StartParameter parameter=new StartParameter();
  parameter.setLogLevel(LogLevel.INFO);
  parameter.setSearchUpwards(true);
  parameter.setCurrentDir(getWorkingDir());
  envHacker.setProcessDir(getWorkingDir());
  Map<String,String> previousEnv=new HashMap<String,String>();
  for (  Map.Entry<String,String> entry : getEnvironmentVars().entrySet()) {
    previousEnv.put(entry.getKey(),System.getenv(entry.getKey()));
    envHacker.setenv(entry.getKey(),entry.getValue());
  }
  CommandLineParser parser=new CommandLineParser();
  DefaultCommandLineConverter converter=new DefaultCommandLineConverter();
  converter.configure(parser);
  converter.convert(parser.parse(getAllArgs()),parameter);
  DefaultGradleLauncherFactory factory=(DefaultGradleLauncherFactory)GradleLauncher.getFactory();
  factory.addListener(listener);
  GradleLauncher gradleLauncher=GradleLauncher.newInstance(parameter);
  gradleLauncher.addStandardOutputListener(outputListener);
  gradleLauncher.addStandardErrorListener(errorListener);
  try {
    return gradleLauncher.run();
  }
  finally {
    System.clearProperty("test.single");
    envHacker.setProcessDir(userDir);
    for (    Map.Entry<String,String> entry : previousEnv.entrySet()) {
      String oldValue=entry.getValue();
      if (oldValue != null) {
        envHacker.setenv(entry.getKey(),oldValue);
      }
 else {
        envHacker.unsetenv(entry.getKey());
      }
    }
    factory.removeListener(listener);
  }
}
