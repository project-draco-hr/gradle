{
  if (preCheck.isEmpty()) {
    return emptySnapshot();
  }
  final List<TreeSnapshot> treeSnapshots=new ArrayList<TreeSnapshot>();
  cacheAccess.useCache("Create file snapshot",new Runnable(){
    public void run(){
      final List<VisitedTree> nonShareableTrees=new ArrayList<VisitedTree>();
      for (      VisitedTree tree : preCheck.getVisitedTrees()) {
        if (tree.isShareable()) {
          treeSnapshots.add(tree.maybeCreateSnapshot(snapshotter,stringInterner));
        }
 else {
          nonShareableTrees.add(tree);
        }
      }
      if (!nonShareableTrees.isEmpty() || !preCheck.getMissingFiles().isEmpty()) {
        VisitedTree nonShareableTree=createJoinedTree(nonShareableTrees,preCheck.getMissingFiles());
        treeSnapshots.add(nonShareableTree.maybeCreateSnapshot(snapshotter,stringInterner));
      }
    }
  }
);
  return new FileCollectionSnapshotImpl(treeSnapshots);
}
