{
  project.getConvention().getPlugin(JavaPluginConvention.class).getSourceSets().all(new Action<SourceSet>(){
    public void execute(    SourceSet sourceSet){
      final DefaultGroovySourceSet groovySourceSet=new DefaultGroovySourceSet(((DefaultSourceSet)sourceSet).getDisplayName(),sourceDirectorySetFactory);
      new DslObject(sourceSet).getConvention().getPlugins().put("groovy",groovySourceSet);
      groovySourceSet.getGroovy().srcDir("src/" + sourceSet.getName() + "/groovy");
      sourceSet.getResources().getFilter().exclude(new Spec<FileTreeElement>(){
        public boolean isSatisfiedBy(        FileTreeElement element){
          return groovySourceSet.getGroovy().contains(element.getFile());
        }
      }
);
      sourceSet.getAllJava().source(groovySourceSet.getGroovy());
      sourceSet.getAllSource().source(groovySourceSet.getGroovy());
      String compileTaskName=sourceSet.getCompileTaskName("groovy");
      GroovyCompile compile=project.getTasks().create(compileTaskName,GroovyCompile.class);
      javaBasePlugin.configureForSourceSet(sourceSet,compile);
      compile.dependsOn(sourceSet.getCompileJavaTaskName());
      compile.setDescription("Compiles the " + sourceSet.getName() + " Groovy source.");
      compile.setSource(groovySourceSet.getGroovy());
      project.getTasks().getByName(sourceSet.getClassesTaskName()).dependsOn(compileTaskName);
    }
  }
);
}
