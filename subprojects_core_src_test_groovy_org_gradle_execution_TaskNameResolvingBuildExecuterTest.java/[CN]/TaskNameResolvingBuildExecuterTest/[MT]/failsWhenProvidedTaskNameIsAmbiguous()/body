{
  final Task task1=task("someTask");
  final Task task2=task("someTasks");
  context.checking(new Expectations(){
{
      one(resolver).selectAll("soTa",project);
      will(returnValue(tasks(task1,task2)));
    }
  }
);
  TaskNameResolvingBuildExecuter executer=new TaskNameResolvingBuildExecuter(toList("soTa"),resolver);
  try {
    executer.select(gradle);
    fail();
  }
 catch (  TaskSelectionException e) {
    assertThat(e.getMessage(),equalTo("Task 'soTa' is ambiguous in [project]. Candidates are: 'someTask', 'someTasks'."));
  }
}
