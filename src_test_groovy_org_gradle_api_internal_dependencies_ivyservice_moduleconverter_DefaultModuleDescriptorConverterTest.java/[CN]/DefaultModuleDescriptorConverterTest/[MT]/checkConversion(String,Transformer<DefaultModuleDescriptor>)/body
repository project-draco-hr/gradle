{
  final Map<String,Boolean> testTransitiveOverride=WrapUtil.toMap("somename",true);
  context.checking(new Expectations(){
{
      allowing(moduleDescriptorFactoryMock).createModuleDescriptor(expectedModuleRevisionId,status,null);
      will(returnValue(expectedModuleDescriptor));
      one(configurationsToModuleDescriptorConverter).addConfigurations(expectedModuleDescriptor,configurationContainerMock,TEST_CONFIGURATION_SPEC,testTransitiveOverride);
      one(artifactsToModuleDescriptorConverterMock).addArtifacts(expectedModuleDescriptor,artifactContainerMock,TEST_PUBLISH_SPEC);
      one(dependenciesToModuleDescriptorConverterMock).addDependencyDescriptors(expectedModuleDescriptor,dependencyContainerInternalMock,TEST_DEPENDENCY_SPEC);
    }
  }
);
  if (transformer != null) {
    defaultModuleDescriptorConverter.addIvyTransformer(transformer);
  }
  DefaultModuleDescriptor actualModuleDescriptor=(DefaultModuleDescriptor)defaultModuleDescriptorConverter.convert(testTransitiveOverride,configurationContainerMock,TEST_CONFIGURATION_SPEC,dependencyContainerInternalMock,TEST_DEPENDENCY_SPEC,artifactContainerMock,TEST_PUBLISH_SPEC);
  assertThat(actualModuleDescriptor,Matchers.equalTo(expectedModuleDescriptor));
  return actualModuleDescriptor;
}
