{
  try {
    generator.newInstance(UnconstructableBean.class);
    fail();
  }
 catch (  ObjectInstantiationException e) {
    assertThat(e.getCause(),sameInstance(UnconstructableBean.failure));
  }
  try {
    generator.newInstance(Bean.class,"arg1",2);
    fail();
  }
 catch (  ObjectInstantiationException e) {
  }
  try {
    generator.newInstance(AbstractBean.class);
    fail();
  }
 catch (  GradleException e) {
    assertThat(e.getMessage(),equalTo("Cannot create a proxy class for abstract class 'AbstractBean'."));
  }
  try {
    generator.newInstance(PrivateBean.class);
    fail();
  }
 catch (  GradleException e) {
    assertThat(e.getMessage(),equalTo("Cannot create a proxy class for private class 'PrivateBean'."));
  }
}
