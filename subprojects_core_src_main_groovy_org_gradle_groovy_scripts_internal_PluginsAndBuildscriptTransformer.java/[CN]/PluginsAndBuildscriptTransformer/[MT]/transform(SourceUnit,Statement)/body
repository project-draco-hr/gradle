{
  ScriptBlock scriptBlock=detectScriptBlock(statement);
  if (scriptBlock == null) {
    seenNonClasspathStatement=true;
    return null;
  }
 else {
    if (scriptBlock.getName().equals(PLUGINS)) {
      String failMessage=null;
      Statement returnStatement=statement;
      if (pluginsBlockMessage != null) {
        failMessage=pluginsBlockMessage;
      }
 else {
        seenPluginsBlock=true;
        if (seenNonClasspathStatement) {
          failMessage=String.format("only %s {} and and other %s {} script blocks are allowed before %s {} blocks, no other statements are allowed",classpathBlockName,PLUGINS,PLUGINS);
        }
 else {
          returnStatement=PLUGIN_BLOCK_TRANSFORMER.transform(scriptBlock);
        }
      }
      if (failMessage != null) {
        sourceUnit.getErrorCollector().addError(new SyntaxException(failMessage,statement.getLineNumber(),statement.getColumnNumber()),sourceUnit);
      }
      return returnStatement;
    }
 else {
      if (seenPluginsBlock) {
        String message=String.format("all %s {} blocks must appear before any %s {} blocks in the script",classpathBlockName,PLUGINS);
        sourceUnit.getErrorCollector().addError(new SyntaxException(message,statement.getLineNumber(),statement.getColumnNumber()),sourceUnit);
      }
      return statement;
    }
  }
}
