{
  DefaultExecutorFactory executorFactory=new DefaultExecutorFactory();
  TcpIncomingConnector<Object> incomingConnector=new TcpIncomingConnector<Object>(executorFactory,new DefaultMessageSerializer<Object>(getClass().getClassLoader()),new InetAddressFactory(),new UUIDGenerator());
  final PersistentDaemonRegistry.Registry registry=daemonRegistry.newRegistry();
  final CompletionHandler finished=new CompletionHandler(idleDaemonTimeout,registry);
  LOGGER.lifecycle("Awaiting requests.");
  Action<ConnectEvent<Connection<Object>>> connectEvent=new Action<ConnectEvent<Connection<Object>>>(){
    public void execute(    ConnectEvent<Connection<Object>> connectionConnectEvent){
      handler.handle(connectionConnectEvent.getConnection(),finished);
    }
  }
;
  Address address=incomingConnector.accept(connectEvent,false);
  registry.store(address);
  boolean stopped=finished.awaitStop();
  if (!stopped) {
    LOGGER.lifecycle("Time-out waiting for requests. Stopping.");
  }
  registry.remove();
  new CompositeStoppable(incomingConnector,executorFactory).stop();
}
