{
  this.connection=new AsyncConnectionAdapter<Object>(connection,new ObjectReceiveHandler(),executorFactory);
  this.executor=executorFactory.create(displayName);
  this.sourceAddress=sourceAddress;
  this.destinationAddress=destinationAddress;
  Protocol<Object> endOfStream=new EndOfStreamHandshakeProtocol(new Runnable(){
    public void run(){
      requestStop();
    }
  }
);
  Protocol<Object> channel=new ChannelMultiplexProtocol();
  failureHandler=new DiscardingFailureHandler<Object>(LoggerFactory.getLogger(DefaultMultiChannelConnector.class));
  stack=new ProtocolStack<Object>(executor,failureHandler,failureHandler,endOfStream,channel);
  this.connection.dispatchTo(stack.getBottom());
  stack.getBottom().dispatchTo(connection);
  incomingDemux=new IncomingDemultiplex(executor);
  stack.getTop().dispatchTo(incomingDemux);
}
