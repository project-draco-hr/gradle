{
  final MethodSignatureEquivalence equivalence=new MethodSignatureEquivalence();
  Iterable<Equivalence.Wrapper<Method>> methodEquivalenceWrappers=Iterables.transform(Arrays.asList(methods),new Function<Method,Equivalence.Wrapper<Method>>(){
    public Equivalence.Wrapper<Method> apply(    Method method){
      return equivalence.wrap(method);
    }
  }
);
  Iterable<Method> nonEquivalentMethods=Iterables.transform(Sets.newLinkedHashSet(methodEquivalenceWrappers),new Function<Equivalence.Wrapper<Method>,Method>(){
    public Method apply(    Equivalence.Wrapper<Method> wrapper){
      return wrapper.get();
    }
  }
);
  return Lists.newArrayList(nonEquivalentMethods);
}
