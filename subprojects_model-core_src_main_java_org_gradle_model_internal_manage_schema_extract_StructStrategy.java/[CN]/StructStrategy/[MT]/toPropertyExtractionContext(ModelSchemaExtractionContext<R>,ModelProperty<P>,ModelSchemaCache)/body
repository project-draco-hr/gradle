{
  return parentContext.child(property.getType(),propertyDescription(parentContext,property),new Action<ModelSchemaExtractionContext<P>>(){
    public void execute(    ModelSchemaExtractionContext<P> propertyExtractionContext){
      ModelSchema<P> propertySchema=modelSchemaCache.get(property.getType());
      if (!propertySchema.getKind().isAllowedPropertyTypeOfManagedType()) {
        throw new InvalidManagedModelElementTypeException(parentContext,String.format("type %s cannot be used for property '%s' as it is an unmanaged type.%n%s",property.getType(),property.getName(),supportedTypeDescriptions.create()));
      }
      if (!property.isWritable()) {
        if (!propertySchema.getKind().isManaged()) {
          throw new InvalidManagedModelElementTypeException(parentContext,String.format("read only property '%s' has non managed type %s, only managed types can be used",property.getName(),property.getType()));
        }
      }
    }
  }
);
}
