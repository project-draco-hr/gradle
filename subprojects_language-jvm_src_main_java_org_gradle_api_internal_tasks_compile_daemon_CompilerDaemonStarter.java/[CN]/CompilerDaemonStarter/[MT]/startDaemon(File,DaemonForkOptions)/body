{
  LOG.debug("Starting Gradle compiler daemon with fork options {}.",forkOptions);
  Clock clock=new Clock();
  MultiRequestWorkerProcessBuilder<CompilerDaemonWorker> builder=workerFactory.multiRequestWorker(CompilerDaemonWorker.class,CompilerDaemonProtocol.class,CompilerDaemonServer.class);
  builder.setBaseName("Gradle Compiler Daemon");
  builder.setLogLevel(startParameter.getLogLevel());
  builder.applicationClasspath(forkOptions.getClasspath());
  builder.sharedPackages(forkOptions.getSharedPackages());
  JavaExecHandleBuilder javaCommand=builder.getJavaCommand();
  javaCommand.setMinHeapSize(forkOptions.getMinHeapSize());
  javaCommand.setMaxHeapSize(forkOptions.getMaxHeapSize());
  javaCommand.setJvmArgs(forkOptions.getJvmArgs());
  javaCommand.setWorkingDir(workingDir);
  CompilerDaemonWorker worker=builder.build();
  worker.start();
  CompilerDaemonClient client=new CompilerDaemonClient(forkOptions,worker);
  LOG.info("Started Gradle compiler daemon ({}) with fork options {}.",clock.getTime(),forkOptions);
  return client;
}
