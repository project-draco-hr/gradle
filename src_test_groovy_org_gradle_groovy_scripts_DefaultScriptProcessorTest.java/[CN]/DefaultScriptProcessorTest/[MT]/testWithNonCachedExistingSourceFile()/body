{
  createBuildScriptFile();
  context.checking(new Expectations(){
{
      allowing(source).getSourceFile();
      will(returnValue(testScriptFile));
      allowing(source).getText();
      will(returnValue(TEST_SCRIPT_TEXT));
      allowing(source).getClassName();
      will(returnValue(TEST_SCRIPT_NAME));
      one(scriptCompilationHandlerMock).loadFromCache(TEST_SCRIPT_TEXT,testClassLoader,TEST_SCRIPT_NAME,testCacheDir,expectedScriptBaseClass);
      will(returnValue(null));
      one(scriptCompilationHandlerMock).writeToCache(TEST_SCRIPT_TEXT,testClassLoader,TEST_SCRIPT_NAME,testCacheDir,expectedScriptBaseClass);
      one(scriptCompilationHandlerMock).loadFromCache(TEST_SCRIPT_TEXT,testClassLoader,TEST_SCRIPT_NAME,testCacheDir,expectedScriptBaseClass);
      will(returnValue(expectedScript));
    }
  }
);
  assertSame(expectedScript,scriptProcessor.createScript(source,testClassLoader,expectedScriptBaseClass));
}
