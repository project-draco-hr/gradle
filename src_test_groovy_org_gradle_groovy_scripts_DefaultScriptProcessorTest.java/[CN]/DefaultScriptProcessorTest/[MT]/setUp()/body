{
  context.setImposteriser(ClassImposteriser.INSTANCE);
  scriptCompilationHandlerMock=context.mock(ScriptCompilationHandler.class);
  testClassLoader=new URLClassLoader(new URL[0]);
  testScriptFileDir=HelperUtil.makeNewTestDir("projectdir");
  testScriptFile=new File(testScriptFileDir,TEST_BUILD_FILE_NAME);
  testCacheDir=new File(new File(testScriptFileDir,Project.CACHE_DIR_NAME),TEST_BUILD_FILE_NAME);
  expectedScript=context.mock(ScriptWithSource.class);
  scriptProcessor=new DefaultScriptProcessor(scriptCompilationHandlerMock,CacheUsage.ON);
  source=context.mock(ScriptSource.class);
  context.checking(new Expectations(){
{
      allowing(source).getDisplayName();
      will(returnValue("[script source]"));
      allowing(expectedScript).setScriptSource(source);
    }
  }
);
  originalClassLoader=Thread.currentThread().getContextClassLoader();
  Thread.currentThread().setContextClassLoader(testClassLoader);
}
