{
  final ModelRuleInvoker<?> ruleInvoker=context.invokerFor(ruleDefinition);
  context.getRegistry().configure(ModelActionRole.Mutate,NoInputsModelAction.of(ModelReference.of(getRegistryType()),ruleDefinition.getDescriptor(),new Action<REGISTRY>(){
    @Override public void execute(    REGISTRY registry){
      try {
        ModelSchema<PUBLICTYPE> schema=schemaStore.getSchema(publicType);
        BUILDER builder=createBuilder(schema);
        ruleInvoker.invoke(builder);
        ModelType<? extends BASEIMPL> implModelType=determineImplementationType(publicType,builder);
        register(registry,schema,builder,implModelType);
      }
 catch (      InvalidModelException e) {
        throw invalidModelRule(ruleDefinition,e);
      }
    }
  }
),target.getPath());
}
