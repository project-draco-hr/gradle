{
  if (!getClass().desiredAssertionStatus()) {
    throw new RuntimeException("Assertions should be enabled when running integration tests.");
  }
  StartParameter parameter=new StartParameter();
  parameter.setLogLevel(LogLevel.INFO);
  parameter.setGradleHomeDir(dist.getGradleHomeDir());
  parameter.setSearchUpwards(false);
  InProcessGradleExecuter inProcessGradleExecuter=new InProcessGradleExecuter(parameter);
  copyTo(inProcessGradleExecuter);
  GradleExecuter returnedExecuter=inProcessGradleExecuter;
  if (FORK || !inProcessGradleExecuter.canExecute()) {
    ForkingGradleExecuter forkingGradleExecuter=new ForkingGradleExecuter(dist.getGradleHomeDir());
    copyTo(forkingGradleExecuter);
    returnedExecuter=forkingGradleExecuter;
  }
 else {
    if (inProcessStartParameterModifier != null) {
      inProcessStartParameterModifier.modify(inProcessGradleExecuter.getParameter());
    }
  }
  boolean settingsFound=false;
  for (File dir=new TestFile(getWorkingDir()); dir != null && dist.isFileUnderTest(dir) && !settingsFound; dir=dir.getParentFile()) {
    if (new File(dir,"settings.gradle").isFile()) {
      settingsFound=true;
    }
  }
  if (settingsFound) {
    returnedExecuter.withSearchUpwards();
  }
  return returnedExecuter;
}
