{
  final Matcher m=OSGI_VERSION_PATTERN.matcher(version);
  if (m.matches()) {
    return version;
  }
  int group=0;
  boolean groupToken=true;
  String[] groups=new String[4];
  groups[0]="0";
  groups[1]="0";
  groups[2]="0";
  groups[3]="";
  StringTokenizer st=new StringTokenizer(version,",./;'?:\\|=+-_*&^%$#@!~",true);
  while (st.hasMoreTokens()) {
    String token=st.nextToken();
    if (groupToken) {
      if (group < 3) {
        if (ONLY_NUMBERS.matcher(token).matches()) {
          groups[group++]=token;
          groupToken=false;
        }
 else {
          groups[3]=token + fillQualifier(st);
        }
      }
 else {
        groups[3]=token + fillQualifier(st);
      }
    }
 else {
      if (".".equals(token)) {
        groupToken=true;
      }
 else {
        groups[3]=fillQualifier(st);
      }
    }
  }
  String ver=groups[0] + "." + groups[1]+ "."+ groups[2];
  String result;
  if (groups[3].length() > 0) {
    result=ver + "." + groups[3];
  }
 else {
    result=ver;
  }
  if (!OSGI_VERSION_PATTERN.matcher(result).matches()) {
    throw new GradleException("OSGi plugin unable to convert version to a compliant version");
  }
  return result;
}
