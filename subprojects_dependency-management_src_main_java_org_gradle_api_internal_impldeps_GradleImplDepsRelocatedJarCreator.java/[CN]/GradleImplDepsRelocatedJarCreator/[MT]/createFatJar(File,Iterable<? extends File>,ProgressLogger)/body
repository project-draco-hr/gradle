{
  final File tmpFile=new File(outputJar.getParentFile(),outputJar.getName() + ".tmp");
  try {
    IoActions.withResource(openJarOutputStream(tmpFile),new ErroringAction<ZipOutputStream>(){
      @Override protected void doExecute(      ZipOutputStream jarOutputStream) throws Exception {
        try {
          processFiles(jarOutputStream,files,new byte[BUFFER_SIZE],new HashSet<String>(),progressLogger);
        }
  finally {
          jarOutputStream.finish();
        }
      }
    }
);
  }
 catch (  Exception e) {
    GFileUtils.forceDelete(tmpFile);
    throw UncheckedException.throwAsUncheckedException(e);
  }
  GFileUtils.moveFile(tmpFile,outputJar);
}
