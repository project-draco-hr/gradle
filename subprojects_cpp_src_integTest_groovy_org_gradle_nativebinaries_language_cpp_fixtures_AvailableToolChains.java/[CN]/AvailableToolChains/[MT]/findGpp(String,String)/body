{
  String name=String.format("g++ %s",versionPrefix);
  GccVersionDeterminer versionDeterminer=new GccVersionDeterminer();
  List<File> gppCandidates=OperatingSystem.current().findAllInPath("g++");
  for (int i=0; i < gppCandidates.size(); i++) {
    File candidate=gppCandidates.get(i);
    if (versionDeterminer.transform(candidate).startsWith(versionPrefix)) {
      InstalledGcc gcc=new InstalledGcc(name);
      if (i > 0) {
        gcc.inPath(candidate.getParentFile());
      }
      return gcc;
    }
  }
  if (hardcodedFallback != null) {
    File fallback=new File(hardcodedFallback);
    if (fallback.isFile()) {
      return new InstalledGcc(name).inPath(fallback.getParentFile());
    }
  }
  return new UnavailableToolChain(name);
}
