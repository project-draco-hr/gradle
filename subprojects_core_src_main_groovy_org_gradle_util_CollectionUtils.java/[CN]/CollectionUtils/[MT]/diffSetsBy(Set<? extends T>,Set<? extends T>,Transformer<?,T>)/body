{
  SetDiff<T> setDiff=new SetDiff<T>();
  Map<Object,T> indexedLeft=collectMap(left,compareBy);
  Map<Object,T> indexedRight=collectMap(right,compareBy);
  for (  Map.Entry<Object,T> leftEntry : indexedLeft.entrySet()) {
    T rightValue=indexedRight.remove(leftEntry.getKey());
    if (rightValue == null) {
      setDiff.leftOnly.add(leftEntry.getValue());
    }
 else {
      SetDiff.Pair<T> pair=new SetDiff.Pair<T>();
      pair.left=leftEntry.getValue();
      pair.right=rightValue;
      setDiff.common.add(pair);
    }
  }
  for (  T rightValue : indexedRight.values()) {
    setDiff.rightOnly.add(rightValue);
  }
  return setDiff;
}
