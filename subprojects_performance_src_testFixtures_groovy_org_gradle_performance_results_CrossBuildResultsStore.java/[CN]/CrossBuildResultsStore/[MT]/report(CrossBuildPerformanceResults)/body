{
  try {
    db.withConnection(new ConnectionAction<Void>(){
      public Void execute(      Connection connection) throws Exception {
        long executionId;
        PreparedStatement statement=connection.prepareStatement("insert into testExecution(testId, executionTime, versionUnderTest, operatingSystem, jvm, vcsBranch, vcsCommit) values (?, ?, ?, ?, ?, ?, ?)");
        try {
          statement.setString(1,results.getTestId());
          statement.setTimestamp(2,new Timestamp(results.getTestTime()));
          statement.setString(3,results.getVersionUnderTest());
          statement.setString(4,results.getOperatingSystem());
          statement.setString(5,results.getJvm());
          statement.setString(6,results.getVcsBranch());
          statement.setString(7,results.getVcsCommit());
          statement.execute();
          ResultSet keys=statement.getGeneratedKeys();
          keys.next();
          executionId=keys.getLong(1);
        }
  finally {
          statement.close();
        }
        statement=connection.prepareStatement("insert into testOperation(testExecution, testProject, displayName, tasks, args, executionTimeMs, heapUsageBytes, totalHeapUsageBytes, maxHeapUsageBytes, maxUncollectedHeapBytes, maxCommittedHeapBytes) values (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)");
        try {
          for (          BuildSpecification specification : results.getBuildSpecifications()) {
            addOperations(statement,executionId,specification,results.buildResult(specification));
          }
        }
  finally {
          statement.close();
        }
        return null;
      }
    }
);
  }
 catch (  Exception e) {
    throw new RuntimeException(String.format("Could not open results datastore '%s'.",dbFile),e);
  }
}
