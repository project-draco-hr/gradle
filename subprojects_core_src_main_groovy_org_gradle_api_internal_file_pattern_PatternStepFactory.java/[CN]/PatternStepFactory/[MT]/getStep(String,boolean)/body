{
  if (source.length() == 0) {
    return new FixedPatternStep(source,caseSensitive);
  }
  char ch=source.charAt(0);
  if (ch == '*') {
    if (source.length() == 2 && source.charAt(1) == '*') {
      return new GreedyPatternStep();
    }
    int pos=1;
    while (pos < source.length() && source.charAt(pos) == '*') {
      pos++;
    }
    for (int i=pos; i < source.length(); i++) {
      ch=source.charAt(i);
      if (ch == '?' || ch == '*') {
        return new RegExpPatternStep(source,caseSensitive);
      }
    }
    return new WildcardPrefixPatternStep(source.substring(pos),caseSensitive);
  }
  for (int i=0; i < source.length(); i++) {
    ch=source.charAt(i);
    if (ch == '?' || ch == '*') {
      return new RegExpPatternStep(source,caseSensitive);
    }
  }
  return new FixedPatternStep(source,caseSensitive);
}
