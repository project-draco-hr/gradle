{
  try {
    Class<? extends LibrarySpec> type=componentModel.type();
    if (!LibrarySpec.class.isAssignableFrom(type)) {
      throw new InvalidComponentModelException("Invalid 'type' parameter for ComponentModel declaration.");
    }
  }
 catch (  IncompleteAnnotationException ex) {
    throw new InvalidComponentModelException("Parameter 'type' not declared in ComponentModel declaration.",ex);
  }
  try {
    Class<? extends LibrarySpec> type=componentModel.implementation();
    if (!DefaultLibrarySpec.class.isAssignableFrom(type)) {
      throw new InvalidComponentModelException("Invalid 'implementation' parameter for ComponentModel declaration.");
    }
  }
 catch (  IncompleteAnnotationException ex) {
    throw new InvalidComponentModelException("Parameter 'implementation' not declared in ComponentModel declaration.",ex);
  }
}
