{
  project.getTasks().whenTaskAdded(Groovydoc.class,new Action<Groovydoc>(){
    public void execute(    Groovydoc groovydoc){
      groovydoc.setGroovyClasspath(project.getConfigurations().get("groovy"));
      groovydoc.conventionMapping(GUtil.map("srcDirs",new ConventionValue(){
        public Object getValue(        Convention convention,        IConventionAware conventionAwareObject){
          return groovy(convention).getGroovySrcDirs();
        }
      }
,"destinationDir",new ConventionValue(){
        public Object getValue(        Convention convention,        IConventionAware conventionAwareObject){
          return groovy(convention).getGroovydocDir();
        }
      }
));
    }
  }
);
  project.createTask(GUtil.map("type",Groovydoc.class),GROOVYDOC_TASK_NAME).setDescription("Generates the groovydoc for the source code.");
}
