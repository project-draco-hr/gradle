{
  LOGGER.debug("using ANTLR v2");
  XRef xref=new MetadataExtracter().extractMetadata(getSource());
  List<GenerationPlan> generationPlans=new GenerationPlanBuilder(outputDirectory).buildGenerationPlans(xref);
  for (  GenerationPlan generationPlan : generationPlans) {
    LOGGER.info("performing grammar generation [" + generationPlan.getId() + "]");
    GFileUtils.mkdirs(generationPlan.getGenerationDirectory());
    ANTLR antlr=new ANTLR();
    antlr.setProject(getAnt().getAntProject());
    Path antlrTaskClasspath=antlr.createClasspath();
    for (    File dep : getAntlrClasspath()) {
      antlrTaskClasspath.createPathElement().setLocation(dep);
    }
    antlr.setTrace(trace);
    antlr.setTraceLexer(traceLexer);
    antlr.setTraceParser(traceParser);
    antlr.setTraceTreeWalker(traceTreeWalker);
    antlr.setOutputdirectory(generationPlan.getGenerationDirectory());
    antlr.setTarget(generationPlan.getSource());
    antlr.execute();
  }
}
