{
  ModelSchema<T> cached=cache.get(type);
  if (cached != null) {
    return new ModelSchemaExtractionResult<T>(cached);
  }
  ModelSchemaExtractionHandler<?> handler=Iterables.find(EXTRACTION_HANDLERS,new Predicate<ModelSchemaExtractionHandler<?>>(){
    public boolean apply(    ModelSchemaExtractionHandler<?> candidate){
      if (candidate.getType().isAssignableFrom(type)) {
        ModelSchemaExtractionHandler<? super T> castCandidate=Cast.uncheckedCast(candidate);
        return castCandidate.getSpec().isSatisfiedBy(type);
      }
 else {
        return false;
      }
    }
  }
);
  ModelSchemaExtractionHandler<? super T> castHandler=Cast.uncheckedCast(handler);
  ModelSchemaExtractionResult<T> schemaExtraction=castHandler.extract(type,cache,context);
  cache.set(type,schemaExtraction.getSchema());
  return schemaExtraction;
}
