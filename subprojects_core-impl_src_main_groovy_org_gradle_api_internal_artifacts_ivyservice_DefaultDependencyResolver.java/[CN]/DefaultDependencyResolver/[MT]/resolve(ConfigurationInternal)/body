{
  Ivy ivy=ivyFactory.create(configuration.getResolutionStrategy());
  ModuleDescriptor moduleDescriptor=moduleDescriptorConverter.convert(configuration.getAll(),configuration.getModule());
  DependencyResolver resolver=ivy.getSettings().getDefaultResolver();
  ResolveOptions options=new ResolveOptions();
  options.setDownload(false);
  options.setConfs(WrapUtil.toArray(configuration.getName()));
  ResolveData resolveData=new ResolveData(ivy.getResolveEngine(),options);
  DependencyToModuleResolver dependencyResolver=new IvyResolverBackedDependencyToModuleResolver(ivy,resolveData,resolver);
  IvyResolverBackedArtifactToFileResolver artifactResolver=new IvyResolverBackedArtifactToFileResolver(resolver);
  ResolveState resolveState=new ResolveState();
  ConfigurationResolveState root=resolveState.getConfiguration(moduleDescriptor,configuration.getName());
  ModuleConflictResolver conflictResolver;
  if (configuration.getResolutionStrategy().getConflictResolution() instanceof StrictConflictResolution) {
    conflictResolver=new StrictConflictResolver();
  }
 else {
    conflictResolver=new LatestModuleConflictResolver();
  }
  conflictResolver=new ForcedModuleConflictResolver(conflictResolver);
  ResolvedConfigurationImpl result=new ResolvedConfigurationImpl(configuration,root.getResult());
  resolve(dependencyResolver,result,root,resolveState,resolveData,artifactResolver,conflictResolver);
  return result;
}
