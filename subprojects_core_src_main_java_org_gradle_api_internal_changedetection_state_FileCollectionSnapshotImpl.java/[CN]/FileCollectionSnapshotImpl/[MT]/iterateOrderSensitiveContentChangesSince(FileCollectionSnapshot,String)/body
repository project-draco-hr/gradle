{
  final Iterator<Map.Entry<String,IncrementalFileSnapshot>> currentEntries=snapshots.entrySet().iterator();
  final Iterator<Map.Entry<String,IncrementalFileSnapshot>> otherEntries=oldSnapshot.getSnapshots().entrySet().iterator();
  return new AbstractIterator<TaskStateChange>(){
    @Override protected TaskStateChange computeNext(){
      while (true) {
        if (currentEntries.hasNext()) {
          Map.Entry<String,IncrementalFileSnapshot> current=currentEntries.next();
          if (otherEntries.hasNext()) {
            Map.Entry<String,IncrementalFileSnapshot> other=otherEntries.next();
            if (current.getKey().equals(other.getKey())) {
              if (current.getValue().isContentUpToDate(other.getValue())) {
                continue;
              }
 else {
                return new FileChange(current.getKey(),ChangeType.MODIFIED,fileType);
              }
            }
 else {
              return new FileChange(current.getKey(),ChangeType.MODIFIED,fileType);
            }
          }
 else {
            return new FileChange(current.getKey(),ChangeType.ADDED,fileType);
          }
        }
 else {
          if (otherEntries.hasNext()) {
            return new FileChange(otherEntries.next().getKey(),ChangeType.REMOVED,fileType);
          }
 else {
            return endOfData();
          }
        }
      }
    }
  }
;
}
