{
  if (spec instanceof ScalaJavaJointCompileSpec) {
    Configuration scalaClasspath=resolveDependency(String.format("org.scala-lang:scala-compiler:%s",scalaVersion));
    Configuration zincClasspath=resolveDependency(String.format("com.typesafe.zinc:zinc:%s",DEFAULT_ZINC_VERSION));
    File projectDir=projectFinder.getProject(":").getProjectDir();
    org.gradle.language.base.internal.compile.Compiler<ScalaJavaJointCompileSpec> scalaCompiler;
    Set<File> zincClasspathFiles=zincClasspath.getFiles();
    Set<File> scalaClasspathFiles=scalaClasspath.getFiles();
    try {
      scalaCompiler=(Compiler<ScalaJavaJointCompileSpec>)getClass().getClassLoader().loadClass("org.gradle.api.internal.tasks.scala.jdk6.ZincScalaCompiler").getConstructor(Iterable.class,Iterable.class).newInstance(scalaClasspathFiles,zincClasspathFiles);
    }
 catch (    Exception e) {
      throw new RuntimeException("Internal error: Failed to load org.gradle.api.internal.tasks.scala.jdk6.ZincScalaCompiler",e);
    }
    return (Compiler<T>)new NormalizingScalaCompiler(new DaemonScalaCompiler<ScalaJavaJointCompileSpec>(projectDir,scalaCompiler,compilerDaemonManager,zincClasspathFiles));
  }
  throw new IllegalArgumentException(String.format("Cannot create Compiler for unsupported CompileSpec type '%s'",spec.getClass().getSimpleName()));
}
