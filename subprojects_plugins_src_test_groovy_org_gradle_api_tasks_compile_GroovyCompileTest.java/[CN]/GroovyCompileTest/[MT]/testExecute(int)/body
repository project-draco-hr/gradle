{
  setUpMocksAndAttributes(testObj,TEST_GROOVY_CLASSPATH);
  context.checking(new Expectations(){
{
      WorkResult result=context.mock(WorkResult.class);
      one(groovyCompilerMock).setSource(with(hasSameItems(testObj.getSource())));
      one(groovyCompilerMock).setDestinationDir(testObj.getDestinationDir());
      one(groovyCompilerMock).setClasspath(testObj.getClasspath());
      one(specMock).setSourceCompatibility(testObj.getSourceCompatibility());
      one(specMock).setTargetCompatibility(testObj.getTargetCompatibility());
      one(groovyCompilerMock).setGroovyClasspath(TEST_GROOVY_CLASSPATH);
      one(groovyCompilerMock).execute();
      will(returnValue(result));
      allowing(result).getDidWork();
      will(returnValue(numFilesCompiled > 0));
    }
  }
);
  testObj.compile();
}
