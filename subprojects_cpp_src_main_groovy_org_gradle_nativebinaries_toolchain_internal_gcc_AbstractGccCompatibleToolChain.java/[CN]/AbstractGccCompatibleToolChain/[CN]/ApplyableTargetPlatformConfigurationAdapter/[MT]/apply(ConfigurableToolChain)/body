{
  configurableToolChain.getAssembler().withArguments(new Action<List<String>>(){
    public void execute(    List<String> args){
      args.addAll(targetPlatformConfiguration.getAssemblerArgs());
    }
  }
);
  configurableToolChain.getCppCompiler().withArguments(new Action<List<String>>(){
    public void execute(    List<String> args){
      args.addAll(targetPlatformConfiguration.getCppCompilerArgs());
    }
  }
);
  configurableToolChain.getCCompiler().withArguments(new Action<List<String>>(){
    public void execute(    List<String> args){
      args.addAll(targetPlatformConfiguration.getCCompilerArgs());
    }
  }
);
  configurableToolChain.getStaticLibArchiver().withArguments(new Action<List<String>>(){
    public void execute(    List<String> args){
      args.addAll(targetPlatformConfiguration.getStaticLibraryArchiverArgs());
    }
  }
);
  configurableToolChain.getLinker().withArguments(new Action<List<String>>(){
    public void execute(    List<String> args){
      args.addAll(targetPlatformConfiguration.getLinkerArgs());
    }
  }
);
  configurableToolChain.getObjcCompiler().withArguments(new Action<List<String>>(){
    public void execute(    List<String> args){
      args.addAll(targetPlatformConfiguration.getObjectiveCCompilerArgs());
    }
  }
);
  configurableToolChain.getObjcppCompiler().withArguments(new Action<List<String>>(){
    public void execute(    List<String> args){
      args.addAll(targetPlatformConfiguration.getObjectiveCppCompilerArgs());
    }
  }
);
  return configurableToolChain;
}
