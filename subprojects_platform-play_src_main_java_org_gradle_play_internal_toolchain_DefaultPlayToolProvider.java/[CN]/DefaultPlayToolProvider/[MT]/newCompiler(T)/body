{
  if (spec instanceof TwirlCompileSpec) {
    TwirlCompiler twirlCompiler=TwirlCompilerFactory.create(targetPlatform);
    Set<File> twirlClasspath=resolveToolClasspath(twirlCompiler.getDependencyNotation()).getFiles();
    return cast(new DaemonPlayCompiler<TwirlCompileSpec>(fileResolver.resolve("."),twirlCompiler,compilerDaemonManager,twirlClasspath,twirlCompiler.getClassLoaderPackages()));
  }
 else   if (spec instanceof RoutesCompileSpec) {
    RoutesCompiler routesCompiler=RoutesCompilerFactory.create(targetPlatform);
    Set<File> routesClasspath=resolveToolClasspath(routesCompiler.getDependencyNotation()).getFiles();
    return cast(new DaemonPlayCompiler<RoutesCompileSpec>(fileResolver.resolve("."),routesCompiler,compilerDaemonManager,routesClasspath,routesCompiler.getClassLoaderPackages()));
  }
 else   if (spec instanceof JavaScriptCompileSpec) {
    JavaScriptCompiler javaScriptCompiler=new JavaScriptCompiler();
    Set<File> javaScriptCompilerClasspath=resolveToolClasspath(javaScriptCompiler.getDependencyNotation()).getFiles();
    return cast(new DaemonPlayCompiler<JavaScriptCompileSpec>(fileResolver.resolve("."),javaScriptCompiler,compilerDaemonManager,javaScriptCompilerClasspath,javaScriptCompiler.getClassLoaderPackages()));
  }
  throw new IllegalArgumentException(String.format("Cannot create Compiler for unsupported CompileSpec type '%s'",spec.getClass().getSimpleName()));
}
