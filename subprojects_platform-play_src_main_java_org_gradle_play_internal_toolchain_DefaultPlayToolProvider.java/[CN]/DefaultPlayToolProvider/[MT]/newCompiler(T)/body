{
  if (spec instanceof TwirlCompileSpec) {
    TwirlCompileSpec twirlCompileSpec=(TwirlCompileSpec)spec;
    VersionedTwirlCompileSpec versionedSpec=TwirlCompileSpecFactory.create(twirlCompileSpec,targetPlatform);
    DaemonPlayCompiler<VersionedTwirlCompileSpec> compiler=new DaemonPlayCompiler<VersionedTwirlCompileSpec>(fileResolver.resolve("."),new TwirlCompiler(),compilerDaemonManager,resolveClasspath(versionedSpec.getDependencyNotation()).getFiles());
    @SuppressWarnings("unchecked") Compiler<T> twirlCompileSpecCompiler=(Compiler<T>)new MappingSpecCompiler<TwirlCompileSpec,VersionedTwirlCompileSpec>(compiler,WrapUtil.toMap(twirlCompileSpec,versionedSpec));
    return twirlCompileSpecCompiler;
  }
 else   if (spec instanceof RoutesCompileSpec) {
    RoutesCompileSpec routesCompileSpec=(RoutesCompileSpec)spec;
    VersionedRoutesCompileSpec versionedSpec=RoutesCompileSpecFactory.create(routesCompileSpec,targetPlatform);
    DaemonPlayCompiler<VersionedRoutesCompileSpec> compiler=new DaemonPlayCompiler<VersionedRoutesCompileSpec>(fileResolver.resolve("."),new RoutesCompiler(),compilerDaemonManager,resolveClasspath(versionedSpec.getDependencyNotation()).getFiles());
    @SuppressWarnings("unchecked") Compiler<T> routesSpecCompiler=(Compiler<T>)new MappingSpecCompiler<RoutesCompileSpec,VersionedRoutesCompileSpec>(compiler,WrapUtil.toMap(routesCompileSpec,versionedSpec));
    return routesSpecCompiler;
  }
  return null;
}
