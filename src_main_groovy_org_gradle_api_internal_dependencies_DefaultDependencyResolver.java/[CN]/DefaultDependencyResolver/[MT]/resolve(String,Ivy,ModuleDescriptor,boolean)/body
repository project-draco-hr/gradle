{
  Clock clock=new Clock();
  if (resolveCache.keySet().contains(conf)) {
    return resolveCache.get(conf);
  }
  ResolveOptions resolveOptions=new ResolveOptions();
  resolveOptions.setConfs(WrapUtil.toArray(conf));
  resolveOptions.setOutputReport(true);
  Clock ivyClock=new Clock();
  ResolveReport resolveReport=null;
  try {
    resolveReport=ivy.resolve(moduleDescriptor,resolveOptions);
  }
 catch (  Exception e) {
    throw new RuntimeException(e);
  }
  logger.debug("Timing: Ivy resolve took {}",clock.getTime());
  if (resolveReport.hasError() && failForMissingDependencies) {
    throw new GradleException("Not all dependencies could be resolved!");
  }
  resolveCache.put(conf,report2Classpath.getClasspath(conf,resolveReport));
  logger.debug("Timing: Complete resolve took {}",clock.getTime());
  return resolveCache.get(conf);
}
