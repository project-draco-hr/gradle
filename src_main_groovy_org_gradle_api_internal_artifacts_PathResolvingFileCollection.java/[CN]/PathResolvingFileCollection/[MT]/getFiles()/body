{
  Set<File> result=new LinkedHashSet<File>();
  List<Object> flattened=new ArrayList<Object>();
  GUtil.flatten(files,flattened);
  for (  Object element : flattened) {
    if (element instanceof Closure) {
      Closure closure=(Closure)element;
      Object closureResult=closure.call();
      if (closureResult instanceof Collection) {
        for (        Object nested : (Collection<?>)closureResult) {
          result.add(resolver.resolve(nested));
        }
      }
 else {
        result.add(resolver.resolve(closureResult));
      }
    }
 else     if (element instanceof FileCollection) {
      FileCollection fileCollection=(FileCollection)element;
      result.addAll(fileCollection.getFiles());
    }
 else {
      result.add(resolver.resolve(element));
    }
  }
  return result;
}
