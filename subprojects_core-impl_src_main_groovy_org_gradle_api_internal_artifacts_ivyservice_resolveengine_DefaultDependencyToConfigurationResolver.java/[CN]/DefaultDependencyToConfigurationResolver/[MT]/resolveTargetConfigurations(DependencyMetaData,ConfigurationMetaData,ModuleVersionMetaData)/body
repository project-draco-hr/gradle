{
  ModuleDescriptor targetDescriptor=targetModuleVersion.getDescriptor();
  DependencyDescriptor dependencyDescriptor=dependencyMetaData.getDescriptor();
  Set<String> targetConfigurationNames=new LinkedHashSet<String>();
  for (  String config : dependencyDescriptor.getModuleConfigurations()) {
    if (config.equals("*")) {
      collectTargetConfiguration(dependencyDescriptor,fromConfiguration,fromConfiguration.getName(),targetDescriptor,targetConfigurationNames);
    }
 else     if (fromConfiguration.getHierarchy().contains(config)) {
      collectTargetConfiguration(dependencyDescriptor,fromConfiguration,config,targetDescriptor,targetConfigurationNames);
    }
  }
  Set<ConfigurationMetaData> targets=new LinkedHashSet<ConfigurationMetaData>();
  for (  String targetConfigurationName : targetConfigurationNames) {
    if (targetDescriptor.getConfiguration(targetConfigurationName) == null) {
      throw new RuntimeException(String.format("Module version %s, configuration '%s' declares a dependency on configuration '%s' which is not declared in the module descriptor for %s",fromConfiguration.getModuleVersion().getId(),fromConfiguration.getName(),targetConfigurationName,targetModuleVersion.getId()));
    }
    ConfigurationMetaData targetConfiguration=targetModuleVersion.getConfiguration(targetConfigurationName);
    targets.add(targetConfiguration);
  }
  return targets;
}
