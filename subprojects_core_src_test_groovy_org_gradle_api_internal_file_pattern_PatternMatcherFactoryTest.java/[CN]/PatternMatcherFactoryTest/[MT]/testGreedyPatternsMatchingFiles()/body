{
  matcher=PatternMatcherFactory.getPatternMatcher(false,true,"**");
  assertThat(matcher,matchesFile());
  assertThat(matcher,matchesFile("a"));
  assertThat(matcher,matchesFile("a","b","c"));
  matcher=PatternMatcherFactory.getPatternMatcher(false,true,"**/a");
  assertThat(matcher,matchesFile("a"));
  assertThat(matcher,matchesFile("b","a"));
  assertThat(matcher,matchesFile("a","b","a"));
  assertThat(matcher,not(matchesFile()));
  assertThat(matcher,not(matchesFile("b")));
  assertThat(matcher,not(matchesFile("a","b")));
  assertThat(matcher,not(matchesFile("b","a","c")));
  matcher=PatternMatcherFactory.getPatternMatcher(false,true,"**/a/b/**");
  assertThat(matcher,matchesFile("a","b"));
  assertThat(matcher,matchesFile("c","a","b"));
  assertThat(matcher,matchesFile("a","b","c"));
  assertThat(matcher,matchesFile("c","a","b","d"));
  assertThat(matcher,matchesFile("a","b","a","b"));
  assertThat(matcher,not(matchesFile()));
  assertThat(matcher,not(matchesFile("a")));
  assertThat(matcher,not(matchesFile("b")));
  assertThat(matcher,not(matchesFile("a","c","b")));
  assertThat(matcher,not(matchesFile("c","d")));
  matcher=PatternMatcherFactory.getPatternMatcher(false,true,"**/a/**/b");
  assertThat(matcher,matchesFile("a","b"));
  assertThat(matcher,matchesFile("a","c","b"));
  assertThat(matcher,matchesFile("c","a","b"));
  assertThat(matcher,matchesFile("c","a","d","b"));
  assertThat(matcher,not(matchesFile()));
  assertThat(matcher,not(matchesFile("a")));
  assertThat(matcher,not(matchesFile("a","b","c")));
  assertThat(matcher,not(matchesFile("c","d")));
  matcher=PatternMatcherFactory.getPatternMatcher(false,true,"a/b/**");
  assertThat(matcher,matchesFile("a","b"));
  assertThat(matcher,matchesFile("a","b","c"));
  assertThat(matcher,not(matchesFile()));
  assertThat(matcher,not(matchesFile("a")));
  assertThat(matcher,not(matchesFile("a","c","b")));
  assertThat(matcher,not(matchesFile("c","a","b")));
  assertThat(matcher,not(matchesFile("c","d")));
  matcher=PatternMatcherFactory.getPatternMatcher(false,true,"a/b/**/c");
  assertThat(matcher,matchesFile("a","b","c"));
  assertThat(matcher,matchesFile("a","b","d","c"));
  assertThat(matcher,not(matchesFile()));
  assertThat(matcher,not(matchesFile("a")));
  assertThat(matcher,not(matchesFile("a","b")));
  assertThat(matcher,not(matchesFile("a","b","c","d")));
  assertThat(matcher,not(matchesFile("a","c","b","c")));
  assertThat(matcher,not(matchesFile("d","a","b")));
  matcher=PatternMatcherFactory.getPatternMatcher(false,true,"a/b/**/c/**");
  assertThat(matcher,matchesFile("a","b","c"));
  assertThat(matcher,matchesFile("a","b","d","c"));
  assertThat(matcher,matchesFile("a","b","c","d"));
  assertThat(matcher,matchesFile("a","b","d","c","d"));
  assertThat(matcher,not(matchesFile()));
  assertThat(matcher,not(matchesFile("a")));
  assertThat(matcher,not(matchesFile("a","b")));
  assertThat(matcher,not(matchesFile("d","a","b")));
}
