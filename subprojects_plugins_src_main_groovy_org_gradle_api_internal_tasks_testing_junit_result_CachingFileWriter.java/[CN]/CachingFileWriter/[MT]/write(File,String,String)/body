{
  Output out;
  try {
    try {
      if (openFiles.containsKey(file)) {
        out=openFiles.get(file);
      }
 else {
        out=new Output(new FileOutputStream(file,true));
        openFiles.put(file,out);
        if (openFiles.size() > maxOpenFiles) {
          Iterator<Map.Entry<File,Output>> iterator=openFiles.entrySet().iterator();
          close(iterator.next().getValue(),file.toString());
          iterator.remove();
        }
      }
      out.writeString(methodName);
      out.writeString(message);
    }
 catch (    IOException e) {
      throw new UncheckedIOException("Problems writing to file: " + file,e);
    }
  }
 catch (  UncheckedIOException e) {
    cleanUpQuietly();
    throw e;
  }
}
