{
  context.checking(new Expectations(){
{
      one(analyzerMock).setProperty(Analyzer.BUNDLE_SYMBOLICNAME,osgiManifest.getSymbolicName());
      one(analyzerMock).setProperty(Analyzer.BUNDLE_NAME,osgiManifest.getName());
      one(analyzerMock).setProperty(Analyzer.BUNDLE_DESCRIPTION,osgiManifest.getDescription());
      one(analyzerMock).setProperty(Analyzer.BUNDLE_LICENSE,osgiManifest.getLicense());
      one(analyzerMock).setProperty(Analyzer.BUNDLE_VENDOR,osgiManifest.getVendor());
      one(analyzerMock).setProperty(Analyzer.BUNDLE_DOCURL,osgiManifest.getDocURL());
      one(analyzerMock).setProperty(Analyzer.EXPORT_PACKAGE,GUtil.join(osgiManifest.instructionValue(Analyzer.EXPORT_PACKAGE),","));
      one(analyzerMock).setProperty(Analyzer.IMPORT_PACKAGE,GUtil.join(osgiManifest.instructionValue(Analyzer.IMPORT_PACKAGE),","));
      one(analyzerMock).setJar(osgiManifest.getClassesDir());
      one(analyzerMock).setClasspath(osgiManifest.getClasspath().toArray(new File[osgiManifest.getClasspath().size()]));
      allowing(analyzerMock).calcManifest();
      will(returnValue(testManifest));
    }
  }
);
}
