{
  final List<FileVisitDetails> allFileVisitDetails=Lists.newLinkedList();
  final List<File> missingFiles=Lists.newArrayList();
  visitFiles(input,allFileVisitDetails,missingFiles);
  if (allFileVisitDetails.isEmpty() && missingFiles.isEmpty()) {
    return new FileCollectionSnapshotImpl(Collections.<String,IncrementalFileSnapshot>emptyMap());
  }
  final Map<String,IncrementalFileSnapshot> snapshots=new HashMap<String,IncrementalFileSnapshot>();
  cacheAccess.useCache("Create file snapshot",new Runnable(){
    public void run(){
      for (      FileVisitDetails fileDetails : allFileVisitDetails) {
        String absolutePath=stringInterner.intern(fileDetails.getFile().getAbsolutePath());
        if (!snapshots.containsKey(absolutePath)) {
          if (fileDetails.isDirectory()) {
            snapshots.put(absolutePath,DirSnapshot.getInstance());
          }
 else {
            snapshots.put(absolutePath,new FileHashSnapshot(snapshotter.snapshot(fileDetails).getHash()));
          }
        }
      }
      for (      File missingFile : missingFiles) {
        String absolutePath=stringInterner.intern(missingFile.getAbsolutePath());
        if (!snapshots.containsKey(absolutePath)) {
          snapshots.put(absolutePath,MissingFileSnapshot.getInstance());
        }
      }
    }
  }
);
  return new FileCollectionSnapshotImpl(snapshots);
}
