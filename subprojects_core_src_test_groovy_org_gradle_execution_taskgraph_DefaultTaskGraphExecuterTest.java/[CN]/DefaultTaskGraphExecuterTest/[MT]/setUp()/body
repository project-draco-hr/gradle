{
  root=createRootProject();
  context.checking(new Expectations(){
{
      one(listenerManager).createAnonymousBroadcaster(TaskExecutionGraphListener.class);
      will(returnValue(new ListenerBroadcast<TaskExecutionGraphListener>(TaskExecutionGraphListener.class)));
      one(listenerManager).createAnonymousBroadcaster(TaskExecutionListener.class);
      will(returnValue(new ListenerBroadcast<TaskExecutionListener>(TaskExecutionListener.class)));
      allowing(taskArtifactStateCacheAccess).useCache(with(notNullValue(String.class)),with(notNullValue(Runnable.class)));
      will(new CustomAction("run action"){
        public Object invoke(        Invocation invocation) throws Throwable {
          Runnable action=(Runnable)invocation.getParameter(1);
          action.run();
          return null;
        }
      }
);
    }
  }
);
  taskExecuter=new DefaultTaskGraphExecuter(listenerManager,new DefaultTaskPlanExecutor(taskArtifactStateCacheAccess));
}
