{
  dependency1=createDependency("org1","name1","rev1");
  dependency2=createDependency("org2","name2","rev2");
  dependency2.addArtifact(new DefaultDependencyArtifact("name2",null,null,null,null));
  dependency31=createDependency("org3","name3","rev3");
  dependency32=createDependency("org3","name3","rev3");
  dependency32.addArtifact(new DefaultDependencyArtifact("artifactName32","type32","ext","classifier32",null));
  compileConfStub=createNamedConfigurationStubWithDependencies("compile",dependency1,dependency31);
  testCompileConfStub=createNamedConfigurationStubWithDependencies("testCompile",dependency2,dependency32);
  context.checking(new Expectations(){
{
      allowing(conf2ScopeMappingContainerMock).getMapping(toSet(testCompileConfStub,compileConfStub));
      will(returnValue(createMapping(testCompileConfStub,"test")));
      allowing(conf2ScopeMappingContainerMock).getMapping(toSet(compileConfStub,testCompileConfStub));
      will(returnValue(createMapping(testCompileConfStub,"test")));
      allowing(conf2ScopeMappingContainerMock).getMapping(toSet(testCompileConfStub));
      will(returnValue(createMapping(testCompileConfStub,"test")));
      allowing(conf2ScopeMappingContainerMock).getMapping(toSet(compileConfStub));
      will(returnValue(createMapping(compileConfStub,"compile")));
      allowing(versionRangeMapper).map("rev1");
      will(returnValue("rev1"));
      allowing(versionRangeMapper).map("rev2");
      will(returnValue("rev2"));
      allowing(versionRangeMapper).map("rev3");
      will(returnValue("rev3"));
    }
  }
);
}
