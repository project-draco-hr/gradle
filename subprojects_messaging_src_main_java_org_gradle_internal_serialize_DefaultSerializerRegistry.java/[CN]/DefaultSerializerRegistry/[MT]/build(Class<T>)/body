{
  Map<Class<?>,Serializer<?>> matches=new LinkedHashMap<Class<?>,Serializer<?>>();
  for (  Map.Entry<Class<?>,Serializer<?>> entry : serializerMap.entrySet()) {
    if (baseType.isAssignableFrom(entry.getKey())) {
      matches.put(entry.getKey(),entry.getValue());
    }
  }
  Set<Class<?>> matchingJavaSerialization=new LinkedHashSet<Class<?>>();
  for (  Class<?> candidate : javaSerialization) {
    if (baseType.isAssignableFrom(candidate)) {
      matchingJavaSerialization.add(candidate);
    }
  }
  if (matches.isEmpty() && matchingJavaSerialization.isEmpty()) {
    throw new IllegalArgumentException(String.format("Don't know how to serialize objects of type %s.",baseType.getName()));
  }
  if (matches.size() == 1 && matchingJavaSerialization.isEmpty()) {
    return (Serializer<T>)matches.values().iterator().next();
  }
  return new TaggedTypeSerializer<T>(matches,matchingJavaSerialization);
}
