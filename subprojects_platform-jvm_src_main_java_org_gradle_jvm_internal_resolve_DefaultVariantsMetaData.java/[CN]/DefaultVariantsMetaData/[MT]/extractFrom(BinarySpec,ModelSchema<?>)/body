{
  Map<String,Object> variants=Maps.newLinkedHashMap();
  ImmutableMap.Builder<String,ModelType<?>> dimensionTypesBuilder=ImmutableMap.builder();
  if (binarySpecSchema instanceof StructSchema) {
    VariantAspect variantAspect=((StructSchema<?>)binarySpecSchema).getAspect(VariantAspect.class);
    if (variantAspect != null) {
      for (      ModelProperty<?> property : variantAspect.getDimensions()) {
        Object value=property.getPropertyValue(binarySpec);
        variants.put(property.getName(),value);
        dimensionTypesBuilder.put(property.getName(),property.getType());
      }
    }
  }
  return new DefaultVariantsMetaData(Collections.unmodifiableMap(variants),dimensionTypesBuilder.build());
}
