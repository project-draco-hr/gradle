{
  LoggingServiceRegistry loggingServices;
  DaemonParameters daemonParams=init(operationParameters);
  GradleLauncherActionExecuter<BuildActionParameters> executer;
  if (Boolean.TRUE.equals(operationParameters.isEmbedded())) {
    loggingServices=embeddedExecuterSupport.getLoggingServices();
    executer=embeddedExecuterSupport.getExecuter();
  }
 else {
    loggingServices=LoggingServiceRegistry.newEmbeddableLogging();
    loggingServices.get(OutputEventRenderer.class).configure(operationParameters.getBuildLogLevel());
    DaemonClientServices clientServices=new DaemonClientServices(loggingServices,daemonParams,operationParameters.getStandardInput(SafeStreams.emptyInput()));
    executer=clientServices.get(DaemonClient.class);
  }
  Factory<LoggingManagerInternal> loggingManagerFactory=loggingServices.getFactory(LoggingManagerInternal.class);
  return new LoggingBridgingGradleLauncherActionExecuter(new DaemonGradleLauncherActionExecuter(executer,daemonParams),loggingManagerFactory);
}
