{
  final CountDownLatch complete=new CountDownLatch(1);
  GradlePluginLord.RequestObserver observer=new GradlePluginLord.RequestObserver(){
    public void executionRequestAdded(    ExecutionRequest request){
      request.setExecutionInteraction(executionInteraction);
    }
    public void refreshRequestAdded(    RefreshTaskListRequest request){
    }
    public void aboutToExecuteRequest(    Request request){
    }
    public void requestExecutionComplete(    Request request,    int result,    String output){
      complete.countDown();
    }
  }
;
  gradlePluginLord.addRequestObserver(observer,false);
  Request request=gradlePluginLord.addExecutionRequestToQueue(fullCommandLine,displayName);
  Assert.assertNotNull(request);
  boolean timeout;
  try {
    timeout=!complete.await(maximumWaitSeconds,TimeUnit.SECONDS);
  }
 catch (  InterruptedException e) {
    throw UncheckedException.throwAsUncheckedException(e);
  }
  gradlePluginLord.removeRequestObserver(observer);
  if (timeout) {
    request.cancel();
    throw new AssertionError("Failed to comlete execution in alotted time: " + maximumWaitSeconds + " seconds. Considering this failed.");
  }
}
