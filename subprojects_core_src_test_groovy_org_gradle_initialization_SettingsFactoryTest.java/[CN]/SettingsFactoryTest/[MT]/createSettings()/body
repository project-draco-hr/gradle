{
  final File expectedSettingsDir=new File("settingsDir");
  ScriptSource expectedScriptSource=context.mock(ScriptSource.class);
  Map<String,String> expectedGradleProperties=WrapUtil.toMap("key","myvalue");
  IProjectDescriptorRegistry expectedProjectDescriptorRegistry=new DefaultProjectDescriptorRegistry();
  StartParameter expectedStartParameter=new StartParameter();
  SettingsFactory settingsFactory=new SettingsFactory(expectedProjectDescriptorRegistry);
  final URLClassLoader urlClassLoader=new URLClassLoader(new URL[0]);
  GradleInternal gradle=context.mock(GradleInternal.class);
  DefaultSettings settings=(DefaultSettings)settingsFactory.createSettings(gradle,expectedSettingsDir,expectedScriptSource,expectedGradleProperties,expectedStartParameter,urlClassLoader);
  assertSame(gradle,settings.getGradle());
  assertSame(expectedProjectDescriptorRegistry,settings.getProjectDescriptorRegistry());
  for (  Map.Entry<String,String> entry : expectedGradleProperties.entrySet()) {
    assertEquals(entry.getValue(),((DynamicObjectAware)settings).getAsDynamicObject().getProperty(entry.getKey()));
  }
  assertSame(expectedSettingsDir,settings.getSettingsDir());
  assertSame(expectedScriptSource,settings.getSettingsScript());
  assertSame(expectedStartParameter,settings.getStartParameter());
}
