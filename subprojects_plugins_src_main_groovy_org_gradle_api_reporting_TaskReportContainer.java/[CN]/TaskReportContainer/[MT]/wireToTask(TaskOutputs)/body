{
  final Transformer<File,T> toFile=new Transformer<File,T>(){
    public File transform(    T original){
      return original.getDestination();
    }
  }
;
  final Spec<T> isDirectoryOutputType=new Spec<T>(){
    public boolean isSatisfiedBy(    T report){
      return report.getOutputType() == Report.OutputType.DIRECTORY;
    }
  }
;
  outputs.dir(new Callable<Collection<File>>(){
    public Collection<File> call() throws Exception {
      return CollectionUtils.collect(CollectionUtils.filter(getEnabled(),isDirectoryOutputType),toFile);
    }
  }
);
  outputs.files(new Callable<Collection<File>>(){
    public Collection<File> call() throws Exception {
      return CollectionUtils.collect(CollectionUtils.filter(getEnabled(),Specs.not(isDirectoryOutputType)),toFile);
    }
  }
);
}
