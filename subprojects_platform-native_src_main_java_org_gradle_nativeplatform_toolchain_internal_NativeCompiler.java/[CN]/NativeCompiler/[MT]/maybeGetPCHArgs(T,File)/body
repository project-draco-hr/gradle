{
  if (spec.getPreCompiledHeader() == null) {
    return Lists.newArrayList();
  }
  final IncludeDirectives includes=spec.getSourceFileIncludeDirectives().get(sourceFile);
  final String header=spec.getPreCompiledHeader();
  List<Include> headers=includes.getIncludesAndImports();
  boolean usePCH=!headers.isEmpty() && header.equals(headers.get(0).getValue());
  if (usePCH) {
    return getPCHArgs(spec);
  }
 else {
    boolean containsHeader=CollectionUtils.any(headers,new Spec<Include>(){
      @Override public boolean isSatisfiedBy(      Include include){
        return include.getValue().equals(header);
      }
    }
);
    if (containsHeader) {
      logger.log(LogLevel.WARN,getCantUsePCHMessage(spec.getPreCompiledHeader(),sourceFile));
    }
    return Lists.newArrayList();
  }
}
