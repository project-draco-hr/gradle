{
  BuildClientMetaData metaData=getServices().get(BuildClientMetaData.class);
  StyledTextOutput textOutput=getRenderer().getTextOutput();
  render(project,new GraphRenderer(textOutput),true,textOutput);
  if (project.getChildProjects().isEmpty()) {
    textOutput.withStyle(Info).text("No sub-projects");
    textOutput.println();
  }
  textOutput.println();
  textOutput.text("To see a list of the tasks of a project, run ");
  metaData.describeCommand(textOutput.withStyle(UserInput),String.format("<project-path>:%s",ImplicitTasksConfigurer.TASKS_TASK));
  textOutput.println();
  textOutput.text("For example, try running ");
  Project exampleProject=project.getChildProjects().isEmpty() ? project : getChildren(project).get(0);
  metaData.describeCommand(textOutput.withStyle(UserInput),exampleProject.absoluteProjectPath(ImplicitTasksConfigurer.TASKS_TASK));
  textOutput.println();
  if (project != project.getRootProject()) {
    textOutput.println();
    textOutput.text("To see a list of all the projects in this build, run ");
    metaData.describeCommand(textOutput.withStyle(UserInput),project.getRootProject().absoluteProjectPath(ImplicitTasksConfigurer.PROJECTS_TASK));
    textOutput.println();
  }
}
