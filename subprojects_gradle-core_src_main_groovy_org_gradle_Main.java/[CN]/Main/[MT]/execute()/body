{
  Clock buildTimeClock=new Clock();
  StartParameter startParameter=null;
  try {
    startParameter=parameterConverter.convert(args);
  }
 catch (  Exception e) {
    System.err.println(e.getMessage());
    parameterConverter.showHelp(System.err);
    buildCompleter.exit(e);
  }
  if (startParameter.isShowHelp()) {
    parameterConverter.showHelp(System.out);
    buildCompleter.exit(null);
  }
  if (startParameter.isShowVersion()) {
    System.out.println(new GradleVersion().prettyPrint());
    buildCompleter.exit(null);
  }
  if (startParameter.isLaunchGUI()) {
    try {
      Class blockingApplicationClass=getClass().forName("org.gradle.gradleplugin.userinterface.swing.standalone.BlockingApplication");
      Method method=blockingApplicationClass.getDeclaredMethod("launchAndBlock");
      method.invoke(null);
    }
 catch (    Throwable e) {
      logger.error("Failed to run the UI.",e);
    }
    buildCompleter.exit(null);
  }
  BuildListener resultLogger=new BuildLogger(logger,buildTimeClock,startParameter);
  try {
    GradleLauncher gradleLauncher=GradleLauncher.newInstance(startParameter);
    gradleLauncher.useLogger(resultLogger);
    BuildResult buildResult=gradleLauncher.run();
    if (buildResult.getFailure() != null) {
      buildCompleter.exit(buildResult.getFailure());
    }
  }
 catch (  Throwable e) {
    resultLogger.buildFinished(new BuildResult(null,e));
    buildCompleter.exit(e);
  }
  buildCompleter.exit(null);
}
