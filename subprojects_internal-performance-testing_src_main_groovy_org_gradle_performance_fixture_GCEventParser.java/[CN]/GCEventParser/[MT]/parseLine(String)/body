{
  if (line.trim().isEmpty()) {
    return GCEvent.IGNORED;
  }
  Matcher matcher=pattern.matcher(line);
  if (!matcher.lookingAt()) {
    if (ignorePattern.matcher(line).matches()) {
      return GCEvent.IGNORED;
    }
 else {
      notParsed.add(line);
      return GCEvent.IGNORED;
    }
  }
  try {
    DateTime timestamp=DateTime.parse(matcher.group(1));
    timestamp=timestamp.toLocalDateTime().toDateTime(DateTimeZone.getDefault());
    long start=Long.parseLong(matcher.group(2));
    long end=Long.parseLong(matcher.group(3));
    long committed=Long.parseLong(matcher.group(4));
    return new GCEvent(start,end,committed,timestamp);
  }
 catch (  Exception ex) {
    notParsed.add(line);
    return GCEvent.IGNORED;
  }
}
