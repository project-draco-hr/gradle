{
  ExternalModuleDependency externalModuleDependency=(ExternalModuleDependency)dependency;
  boolean force=externalModuleDependency.isForce();
  boolean changing=externalModuleDependency.isChanging();
  boolean transitive=externalModuleDependency.isTransitive();
  ModuleRevisionId moduleRevisionId=createModuleRevisionId(dependency);
  DefaultDependencyDescriptor dependencyDescriptor=new DefaultDependencyDescriptor(parent,moduleRevisionId,force,changing,transitive);
  configureDependencyDescriptor(configuration,externalModuleDependency,dependencyDescriptor);
  ModuleVersionSelector requested=new DefaultModuleVersionSelector(moduleRevisionId.getOrganisation(),moduleRevisionId.getName(),moduleRevisionId.getRevision());
  ModuleComponentSelector selector=DefaultModuleComponentSelector.newSelector(requested);
  LocalComponentDependencyMetaData dependencyMetaData=new LocalComponentDependencyMetaData(selector,requested,configuration,dependency.getConfiguration(),convertExcludeRules(configuration,dependency.getExcludeRules()),force,changing,transitive,dependencyDescriptor);
  return new DslOriginDependencyMetaDataWrapper(dependencyMetaData,dependency);
}
