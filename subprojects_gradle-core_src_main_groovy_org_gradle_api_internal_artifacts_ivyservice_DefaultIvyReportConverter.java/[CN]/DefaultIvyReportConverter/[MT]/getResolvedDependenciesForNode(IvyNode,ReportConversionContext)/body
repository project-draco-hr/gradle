{
  ModuleRevisionId nodeId=ivyNode.getId();
  if (context.handledNodes.containsKey(nodeId)) {
    return;
  }
  Map<String,DefaultResolvedDependency> resolvedDependencies=new LinkedHashMap<String,DefaultResolvedDependency>();
  if (ivyNode == ivyNode.getRoot()) {
    DefaultResolvedDependency dependency=createResolvedDependency(ivyNode,context.conf);
    context.root=dependency;
    resolvedDependencies.put(context.conf,dependency);
  }
 else {
    for (    IvyNodeCallers.Caller caller : ivyNode.getCallers(context.conf)) {
      Set<String> dependencyConfigurationsForNode=getDependencyConfigurationsByCaller(ivyNode,caller);
      for (      String dependencyConfiguration : dependencyConfigurationsForNode) {
        DefaultResolvedDependency resolvedDependencyForDependencyConfiguration=resolvedDependencies.get(dependencyConfiguration);
        if (resolvedDependencyForDependencyConfiguration == null) {
          resolvedDependencyForDependencyConfiguration=createResolvedDependency(ivyNode,dependencyConfiguration);
          context.resolvedArtifacts.addAll(resolvedDependencyForDependencyConfiguration.getModuleArtifacts());
          resolvedDependencies.put(dependencyConfiguration,resolvedDependencyForDependencyConfiguration);
          context.resolvedDependencies2Nodes.put(resolvedDependencyForDependencyConfiguration,ivyNode);
        }
      }
      IvyNode parentNode=isRootCaller(context.configurationResolveReport,caller) ? ivyNode.getRoot() : context.configurationResolveReport.getDependency(caller.getModuleRevisionId());
      getResolvedDependenciesForNode(parentNode,context);
      Map<String,DefaultResolvedDependency> parentResolvedDependencies=context.handledNodes.get(parentNode.getId());
      createAssociationsBetweenChildAndParentResolvedDependencies(ivyNode,resolvedDependencies,context.resolvedArtifacts,parentNode,caller,dependencyConfigurationsForNode,parentResolvedDependencies);
    }
  }
  context.handledNodes.put(nodeId,resolvedDependencies);
}
