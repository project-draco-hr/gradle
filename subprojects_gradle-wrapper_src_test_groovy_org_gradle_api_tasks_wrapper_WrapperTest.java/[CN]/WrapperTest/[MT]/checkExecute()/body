{
  context.checking(new Expectations(){
{
      one(wrapperScriptGeneratorMock).generate(toNative("../" + targetWrapperJarPath + "/gradle-wrapper.jar"),toNative("../" + targetWrapperJarPath + "/gradle-wrapper.properties"),wrapper.getScriptFile());
    }
  }
);
  wrapper.execute();
  TestFile unjarDir=tmpDir.createDir("unjar");
  expectedTargetWrapperJar.unzipTo(unjarDir);
  unjarDir.file(GradleWrapperMain.class.getName().replace(".","/") + ".class").assertIsFile();
  Properties properties=GUtil.loadProperties(expectedTargetWrapperProperties);
  assertEquals(properties.getProperty(Wrapper.DISTRIBUTION_URL_PROPERTY),wrapper.getDistributionUrl());
  assertEquals(properties.getProperty(Wrapper.DISTRIBUTION_BASE_PROPERTY),wrapper.getDistributionBase().toString());
  assertEquals(properties.getProperty(Wrapper.DISTRIBUTION_PATH_PROPERTY),wrapper.getDistributionPath());
  assertEquals(properties.getProperty(Wrapper.ZIP_STORE_BASE_PROPERTY),wrapper.getArchiveBase().toString());
  assertEquals(properties.getProperty(Wrapper.ZIP_STORE_PATH_PROPERTY),wrapper.getArchivePath());
}
