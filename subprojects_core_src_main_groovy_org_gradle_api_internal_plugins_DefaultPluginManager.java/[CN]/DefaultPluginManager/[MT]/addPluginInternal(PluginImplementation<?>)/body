{
  final Class<?> pluginClass=plugin.asClass();
  if (plugins.containsKey(pluginClass)) {
    return null;
  }
  plugins.put(pluginClass,plugin);
  return new Runnable(){
    @Override public void run(){
      Iterable<PluginId> pluginIds=Lists.newArrayList(idMappings.keySet());
      for (      PluginId id : pluginIds) {
        if (plugin.isAlsoKnownAs(id)) {
          idMappings.get(id).add(new PluginWithId(id,pluginClass));
        }
      }
    }
  }
;
}
