{
  String[] parts=fieldName.split("#");
  ClassMetaData targetClass;
  if (parts[0].length() > 0) {
    String targetClassName=typeNameResolver.resolve(parts[0],classMetaData);
    targetClass=repository.find(targetClassName);
    if (targetClass == null) {
      listener.warning(String.format("Could not locate target class '%s' for field value link '%s'",targetClass,fieldName));
      Element element=document.createElement("UNHANDLED-VALUE");
      element.appendChild(document.createTextNode(targetClassName + ":" + parts[1]));
      return element;
    }
  }
 else {
    targetClass=classMetaData;
  }
  String value=targetClass.getConstants().get(parts[1]);
  if (value == null) {
    listener.warning(String.format("Field '%s' does not have any value",fieldName));
    Element element=document.createElement("NO-VALUE-FOR_FIELD");
    element.appendChild(document.createTextNode(targetClass.getClassName() + ":" + parts[1]));
    return element;
  }
  return createLiteralNode(value);
}
