{
  final ModelView<? extends ModelMap<E>> rawView;
  ModelType<ModelMap<E>> type=DefaultModelMap.modelMapTypeOf(elementType);
  if (writable) {
    rawView=delegateAdapter.asWritable(type,modelNode,ruleDescriptor,Collections.<ModelView<?>>emptyList());
  }
 else {
    rawView=delegateAdapter.asReadOnly(type,modelNode,ruleDescriptor);
  }
  if (rawView == null) {
    throw new IllegalStateException("delegateAdapter " + delegateAdapter + " returned null for type "+ type);
  }
  P instance=factory.transform(rawView.getInstance());
  return InstanceModelView.of(modelNode.getPath(),publicType,instance,new Action<P>(){
    @Override public void execute(    P es){
      rawView.close();
    }
  }
);
}
