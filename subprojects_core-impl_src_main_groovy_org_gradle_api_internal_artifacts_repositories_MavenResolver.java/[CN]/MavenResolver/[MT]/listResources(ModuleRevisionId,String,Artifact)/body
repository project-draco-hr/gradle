{
  List<String> revisions=listRevisionsWithMavenMetadata(moduleRevisionId.getModuleId().getAttributes());
  if (revisions != null) {
    LOGGER.debug("Found revisions: {}",revisions);
    List<ResolvedResource> resources=new ArrayList<ResolvedResource>();
    for (    String revision : revisions) {
      String resolvedPattern=IvyPatternHelper.substitute(pattern,ModuleRevisionId.newInstance(moduleRevisionId,revision),artifact);
      try {
        Resource res=getResource(resolvedPattern,artifact);
        if ((res != null) && res.exists()) {
          resources.add(new ResolvedResource(res,revision));
        }
      }
 catch (      IOException e) {
        LOGGER.warn("impossible to get resource from name listed by maven-metadata.xml: " + resources,e);
      }
    }
    return resources.toArray(new ResolvedResource[resources.size()]);
  }
 else {
    return super.listResources(moduleRevisionId,pattern,artifact);
  }
}
