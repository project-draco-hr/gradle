{
  List revs=null;
  InputStream metadataStream=null;
  try {
    Resource metadata=repository.getResource(metadataLocation);
    if (metadata.exists()) {
      LOGGER.debug("listing revisions from maven-metadata: {}",metadata);
      final List metadataRevs=new ArrayList();
      metadataStream=metadata.openStream();
      XMLHelper.parse(metadataStream,null,new ContextualSAXHandler(){
        public void endElement(        String uri,        String localName,        String qName) throws SAXException {
          if ("metadata/versioning/versions/version".equals(getContext())) {
            metadataRevs.add(getText().trim());
          }
          super.endElement(uri,localName,qName);
        }
      }
,null);
      revs=metadataRevs;
    }
 else {
      LOGGER.debug("maven-metadata not available: {}",metadata);
    }
  }
 catch (  IOException e) {
    LOGGER.warn("impossible to access maven metadata file, ignored.",e);
  }
catch (  SAXException e) {
    LOGGER.warn("impossible to parse maven metadata file, ignored.",e);
  }
catch (  ParserConfigurationException e) {
    LOGGER.warn("impossible to parse maven metadata file, ignored.",e);
  }
 finally {
    if (metadataStream != null) {
      try {
        metadataStream.close();
      }
 catch (      IOException e) {
      }
    }
  }
  return revs;
}
