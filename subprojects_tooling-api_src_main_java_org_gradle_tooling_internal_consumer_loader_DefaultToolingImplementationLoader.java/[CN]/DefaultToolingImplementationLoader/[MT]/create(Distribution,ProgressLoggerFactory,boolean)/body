{
  LOGGER.debug("Using tooling provider from {}",distribution.getDisplayName());
  ClassLoader classLoader=createImplementationClassLoader(distribution,progressLoggerFactory);
  ServiceLocator serviceLocator=new ServiceLocator(classLoader);
  try {
    Factory<ConnectionVersion4> factory=serviceLocator.findFactory(ConnectionVersion4.class);
    if (factory == null) {
      Matcher m=Pattern.compile("\\w+Version(\\d+)").matcher(ConnectionVersion4.class.getSimpleName());
      m.matches();
      String protocolVersion=m.group(1);
      throw new UnsupportedVersionException(String.format("The specified %s is not supported by this tooling API version (%s, protocol version %s)",distribution.getDisplayName(),GradleVersion.current().getVersion(),protocolVersion));
    }
    ConnectionVersion4 connection=factory.create();
    AdaptedConnection adaptedConnection;
    if (connection instanceof BuildActionRunner) {
      adaptedConnection=new BuildActionRunnerBackedConsumerConnection(connection);
    }
 else     if (connection instanceof InternalConnection) {
      adaptedConnection=new InternalConnectionBackedConsumerConnection(connection);
    }
 else {
      adaptedConnection=new AdaptedConnection(connection);
    }
    adaptedConnection.configureLogging(verboseLogging);
    return adaptedConnection;
  }
 catch (  UnsupportedVersionException e) {
    throw e;
  }
catch (  Throwable t) {
    throw new GradleConnectionException(String.format("Could not create an instance of Tooling API implementation using the specified %s.",distribution.getDisplayName()),t);
  }
}
