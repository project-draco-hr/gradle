{
  for (int i=0; i < Math.max(components.size(),o.components.size()); ++i) {
    boolean hasLeft=components.size() > i;
    boolean hasRight=o.components.size() > i;
    if (!hasLeft && hasRight) {
      return -1;
    }
 else     if (hasLeft && !hasRight) {
      return 1;
    }
 else {
      int result=components.get(i).compareTo(o.components.get(i));
      if (result != 0) {
        return result;
      }
    }
  }
  return 0;
}
