{
  if (visit == OPENING_VISIT) {
    ClassMetaData outerClass=getCurrentClass();
    String baseName=extractIdent(t);
    String className=outerClass != null ? outerClass.getClassName() + '.' + baseName : packageName + '.' + baseName;
    String comment=getJavaDocCommentsBeforeNode(t);
    ClassMetaData currentClass=new ClassMetaData(className,packageName,isInterface,groovy,comment);
    if (outerClass != null) {
      outerClass.addInnerClassName(className);
      currentClass.setOuterClassName(outerClass.getClassName());
    }
    findAnnotations(t,currentClass);
    classStack.addFirst(currentClass);
    allClasses.add(currentClass);
    typeTokens.put(t,currentClass);
    repository.put(className,currentClass);
  }
}
