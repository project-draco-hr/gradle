{
  project.getConvention().getPlugins().put("groovyCodeQuality",new GroovyCodeQualityPluginConvention(project));
  project.getTasks().withType(CodeNarc.class).allTasks(new Action<CodeNarc>(){
    public void execute(    CodeNarc codeNarc){
      codeNarc.conventionMapping("source",new ConventionValue(){
        public Object getValue(        Convention convention,        IConventionAware conventionAwareObject){
          return convention.getPlugin(GroovyPluginConvention.class).getAllGroovySrc();
        }
      }
);
      codeNarc.conventionMapping("configFile",new ConventionValue(){
        public Object getValue(        Convention convention,        IConventionAware conventionAwareObject){
          return convention.getPlugin(GroovyCodeQualityPluginConvention.class).getCodeNarcConfigFile();
        }
      }
);
    }
  }
);
  CodeNarc codeNarc=project.getTasks().add(CODE_NARC_TASK,CodeNarc.class);
  codeNarc.setDescription("Runs CodeNarc against the Groovy source code.");
  codeNarc.conventionMapping("reportFile",new ConventionValue(){
    public Object getValue(    Convention convention,    IConventionAware conventionAwareObject){
      return convention.getPlugin(GroovyCodeQualityPluginConvention.class).getCodeNarcReportFile();
    }
  }
);
  codeNarc=project.getTasks().add(CODE_NARC_TESTS_TASK,CodeNarc.class);
  codeNarc.setDescription("Runs CodeNarc against the Groovy test source code.");
  codeNarc.conventionMapping("source",new ConventionValue(){
    public Object getValue(    Convention convention,    IConventionAware conventionAwareObject){
      return convention.getPlugin(GroovyPluginConvention.class).getAllGroovyTestSrc();
    }
  }
);
  codeNarc.conventionMapping("configFile",new ConventionValue(){
    public Object getValue(    Convention convention,    IConventionAware conventionAwareObject){
      return convention.getPlugin(GroovyCodeQualityPluginConvention.class).getCodeNarcTestConfigFile();
    }
  }
);
  codeNarc.conventionMapping("reportFile",new ConventionValue(){
    public Object getValue(    Convention convention,    IConventionAware conventionAwareObject){
      return convention.getPlugin(GroovyCodeQualityPluginConvention.class).getCodeNarcTestReportFile();
    }
  }
);
  addToBuildTask(project);
}
