{
  project.getConvention().getPlugins().put("javaCodeQuality",new JavaCodeQualityPluginConvention(project));
  project.getTasks().withType(Checkstyle.class).allTasks(new Action<Checkstyle>(){
    public void execute(    Checkstyle checkstyle){
      checkstyle.conventionMapping("source",new ConventionValue(){
        public Object getValue(        Convention convention,        IConventionAware conventionAwareObject){
          return convention.getPlugin(JavaPluginConvention.class).getSource().getByName(JavaPlugin.MAIN_SOURCE_SET_NAME).getAllJava();
        }
      }
);
      checkstyle.conventionMapping("configFile",new ConventionValue(){
        public Object getValue(        Convention convention,        IConventionAware conventionAwareObject){
          return convention.getPlugin(JavaCodeQualityPluginConvention.class).getCheckstyleConfigFile();
        }
      }
);
      checkstyle.conventionMapping("classpath",new ConventionValue(){
        public Object getValue(        Convention convention,        IConventionAware conventionAwareObject){
          return convention.getPlugin(JavaPluginConvention.class).getSource().getByName(JavaPlugin.MAIN_SOURCE_SET_NAME).getCompileClasspath();
        }
      }
);
    }
  }
);
  Checkstyle checkstyle=project.getTasks().add(CHECKSTYLE_TASK,Checkstyle.class);
  checkstyle.setDescription("Runs Checkstyle against the Java source code.");
  checkstyle.conventionMapping("resultFile",new ConventionValue(){
    public Object getValue(    Convention convention,    IConventionAware conventionAwareObject){
      return convention.getPlugin(JavaCodeQualityPluginConvention.class).getCheckstyleResultFile();
    }
  }
);
  checkstyle=project.getTasks().add(CHECKSTYLE_TESTS_TASK,Checkstyle.class);
  checkstyle.setDescription("Runs Checkstyle against the Java test source code.");
  checkstyle.conventionMapping("source",new ConventionValue(){
    public Object getValue(    Convention convention,    IConventionAware conventionAwareObject){
      return convention.getPlugin(JavaPluginConvention.class).getSource().getByName(JavaPlugin.TEST_SOURCE_SET_NAME).getAllJava();
    }
  }
);
  checkstyle.conventionMapping("classpath",new ConventionValue(){
    public Object getValue(    Convention convention,    IConventionAware conventionAwareObject){
      return convention.getPlugin(JavaPluginConvention.class).getSource().getByName(JavaPlugin.TEST_SOURCE_SET_NAME).getCompileClasspath();
    }
  }
);
  checkstyle.conventionMapping("configFile",new ConventionValue(){
    public Object getValue(    Convention convention,    IConventionAware conventionAwareObject){
      return convention.getPlugin(JavaCodeQualityPluginConvention.class).getCheckstyleTestConfigFile();
    }
  }
);
  checkstyle.conventionMapping("resultFile",new ConventionValue(){
    public Object getValue(    Convention convention,    IConventionAware conventionAwareObject){
      return convention.getPlugin(JavaCodeQualityPluginConvention.class).getCheckstyleTestResultFile();
    }
  }
);
  addToBuildTask(project);
}
