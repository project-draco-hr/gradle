{
  ComponentOverrideMetadata forced=requestMetaData.withChanging();
  delegate.getRemoteAccess().resolveComponentMetaData(moduleComponentIdentifier,forced,result);
switch (result.getState()) {
case Missing:
    moduleMetaDataCache.cacheMissing(delegate,moduleComponentIdentifier);
  break;
case Resolved:
MutableModuleComponentResolveMetaData metaData=result.getMetaData();
ModuleSource moduleSource=metaData.getSource();
ModuleMetaDataCache.CachedMetaData cachedMetaData=moduleMetaDataCache.cacheMetaData(delegate,metaData);
metadataProcessor.processMetadata(metaData);
moduleSource=new CachingModuleSource(cachedMetaData.getDescriptorHash(),requestMetaData.isChanging() || metaData.isChanging(),moduleSource);
metaData.setSource(moduleSource);
result.resolved(metaData);
break;
case Failed:
break;
default :
throw new IllegalStateException("Unexpected resolve state: " + result.getState());
}
}
