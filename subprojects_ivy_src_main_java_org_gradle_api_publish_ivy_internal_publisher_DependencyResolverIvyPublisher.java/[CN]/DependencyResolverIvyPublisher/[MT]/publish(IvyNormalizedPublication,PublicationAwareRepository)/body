{
  ModuleVersionPublisher publisher=repository.createPublisher();
  IvyPublicationIdentity projectIdentity=publication.getProjectIdentity();
  Map<String,String> extraAttributes=Collections.emptyMap();
  ModuleRevisionId moduleRevisionId=IvyUtil.createModuleRevisionId(projectIdentity.getOrganisation(),projectIdentity.getModule(),projectIdentity.getRevision(),extraAttributes);
  try {
    Map<Artifact,File> artifactFiles=new LinkedHashMap<Artifact,File>();
    for (    IvyArtifact publishArtifact : publication.getArtifacts()) {
      Artifact ivyArtifact=createIvyArtifact(publishArtifact,moduleRevisionId);
      artifactFiles.put(ivyArtifact,publishArtifact.getFile());
    }
    Artifact artifact=DefaultArtifact.newIvyArtifact(moduleRevisionId,null);
    artifactFiles.put(artifact,publication.getDescriptorFile());
    publisher.publish(new DefaultModuleVersionPublishMetaData(moduleRevisionId,artifactFiles));
  }
 catch (  IOException e) {
    throw new UncheckedIOException(e);
  }
}
