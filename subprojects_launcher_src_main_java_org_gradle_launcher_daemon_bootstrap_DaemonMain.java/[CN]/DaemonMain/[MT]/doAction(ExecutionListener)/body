{
  LoggingServiceRegistry loggingRegistry=LoggingServiceRegistry.newChildProcessLogging();
  DaemonServices daemonServices=new DaemonServices(daemonBaseDir,idleTimeoutMs,loggingRegistry);
  final DaemonContext daemonContext=daemonServices.get(DaemonContext.class);
  Daemon daemon=daemonServices.get(Daemon.class);
  DaemonDir daemonDir=daemonServices.get(DaemonDir.class);
  LoggingManagerInternal loggingManager=loggingRegistry.get(LoggingManagerInternal.class);
  OutputEventRenderer outputRenderer=loggingRegistry.get(OutputEventRenderer.class);
  try {
    startDaemonLogging(loggingManager,outputRenderer,daemonDir,daemonContext.getPid());
    daemon.start();
    daemon.awaitIdleTimeout(idleTimeoutMs);
    LOGGER.info("Daemon hit idle timeout (" + idleTimeoutMs + "ms), stopping");
    daemon.stop();
  }
 catch (  IOException e) {
    listener.onFailure(e);
  }
catch (  DaemonStoppedException e) {
    LOGGER.info("Daemon stopping due to stop request");
    listener.onFailure(e);
  }
 finally {
    stopDaemonLogging(loggingManager);
  }
}
