{
  LoggingServiceRegistry loggingRegistry=LoggingServiceRegistry.newChildProcessLogging();
  LoggingManagerInternal loggingManager=loggingRegistry.getFactory(LoggingManagerInternal.class).create();
  DaemonServices daemonServices=new DaemonServices(daemonBaseDir,idleTimeoutMs,daemonUid,loggingRegistry,loggingManager);
  File daemonLog=daemonServices.getDaemonLogFile();
  final DaemonContext daemonContext=daemonServices.get(DaemonContext.class);
  initialiseLogging(loggingRegistry.get(OutputEventRenderer.class),loggingManager,daemonLog);
  Runtime.getRuntime().addShutdownHook(new Thread(){
    public void run(){
      LOGGER.info("Daemon[pid = {}] finishing",daemonContext.getPid());
    }
  }
);
  Daemon daemon=startDaemon(daemonServices);
  try {
    daemon.awaitIdleTimeout(idleTimeoutMs);
    LOGGER.info("Daemon hit idle timeout (" + idleTimeoutMs + "ms), stopping");
    daemon.stop();
  }
 catch (  DaemonStoppedException e) {
    LOGGER.info("Daemon stopping due to stop request");
    listener.onFailure(e);
  }
}
