{
  final Task task1=context.mock(Task.class,"task1");
  final Task task2=context.mock(Task.class,"task2");
  final TaskDependency dependencyMock=context.mock(TaskDependency.class);
  getTask().dependsOn(dependencyMock);
  context.checking(new Expectations(){
{
      allowing(dependencyMock).getDependencies(getTask());
      will(returnValue(WrapUtil.toSet(task1,task2)));
      exactly(2).of(task1).getDidWork();
      will(returnValue(false));
      exactly(2).of(task2).getDidWork();
      will(onConsecutiveCalls(returnValue(false),returnValue(true)));
    }
  }
);
  assertFalse(getTask().dependsOnTaskDidWork());
  assertTrue(getTask().dependsOnTaskDidWork());
}
