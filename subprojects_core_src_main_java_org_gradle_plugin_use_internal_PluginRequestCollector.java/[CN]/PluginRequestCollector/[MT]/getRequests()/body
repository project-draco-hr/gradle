{
  List<PluginRequest> pluginRequests=collect(specs,new Transformer<PluginRequest,DependencySpecImpl>(){
    public PluginRequest transform(    DependencySpecImpl original){
      return new DefaultPluginRequest(original.id,original.version,original.apply,original.lineNumber,scriptSource);
    }
  }
);
  ListMultimap<PluginId,PluginRequest> groupedById=CollectionUtils.groupBy(pluginRequests,new Transformer<PluginId,PluginRequest>(){
    public PluginId transform(    PluginRequest pluginRequest){
      return pluginRequest.getId();
    }
  }
);
  for (  PluginId key : groupedById.keySet()) {
    List<PluginRequest> pluginRequestsForId=groupedById.get(key);
    if (pluginRequestsForId.size() > 1) {
      PluginRequest first=pluginRequests.get(0);
      PluginRequest second=pluginRequests.get(1);
      InvalidPluginRequestException exception=new InvalidPluginRequestException(second,"Plugin with id '" + key + "' was already requested at line "+ first.getLineNumber());
      throw new LocationAwareException(exception,second.getScriptDisplayName(),second.getLineNumber());
    }
  }
  return pluginRequests;
}
