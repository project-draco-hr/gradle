{
  return new DefaultVersionList(){
    final Set<String> patterns=new HashSet<String>();
    public void visit(    ResourcePattern resourcePattern,    Artifact artifact) throws ResourceNotFoundException, ResourceException {
      String pattern=resourcePattern.getPattern();
      if (!pattern.endsWith(MavenPattern.M2_PATTERN)) {
        throw new InvalidUserDataException("Cannot locate maven-metadata.xml for non-maven layout");
      }
      if (!patterns.add(pattern)) {
        return;
      }
      Map attributes=moduleRevisionId.getModuleId().getAttributes();
      String metaDataPattern=pattern.substring(0,pattern.length() - MavenPattern.M2_PER_MODULE_PATTERN.length()) + "maven-metadata.xml";
      String metadataLocation=IvyPatternHelper.substituteTokens(metaDataPattern,attributes);
      MavenMetadata mavenMetaData=mavenMetadataLoader.load(metadataLocation);
      add(mavenMetaData.versions);
    }
  }
;
}
