{
  String[] commandLine=toArray(spec.asCommandLineWithFiles());
  try {
    Object toolObj=loadTool("org.antlr.v4.Tool",commandLine);
    LOGGER.info("Processing with ANTLR 4");
    return processV4(toolObj);
  }
 catch (  ClassNotFoundException e) {
    LOGGER.debug("ANTLR 4 not found on classpath");
  }
  try {
    Object toolObj=loadTool("org.antlr.Tool",commandLine);
    LOGGER.info("Processing with ANTLR 3");
    return processV3(toolObj);
  }
 catch (  ClassNotFoundException e) {
    LOGGER.debug("ANTLR 3 not found on classpath");
  }
  try {
    Object toolObj=loadTool("antlr.Tool",null);
    LOGGER.info("Processing with ANTLR 2");
    return processV2(toolObj,spec.getArguments(),spec.getGrammarFiles(),spec.getOutputDirectory());
  }
 catch (  ClassNotFoundException e) {
    LOGGER.debug("ANTLR 2 not found on classpath");
  }
  throw new IllegalStateException("No Antlr implementation available");
}
