{
  XRef xref=new MetadataExtracter().extractMetadata(spec.getGrammarFiles());
  List<GenerationPlan> generationPlans=new GenerationPlanBuilder(spec.getOutputDirectory()).buildGenerationPlans(xref);
  for (  GenerationPlan generationPlan : generationPlans) {
    List<String> generationPlanArguments=Lists.newArrayList(spec.getArguments());
    generationPlanArguments.add("-o");
    generationPlanArguments.add(generationPlan.getGenerationDirectory().getAbsolutePath());
    generationPlanArguments.add(generationPlan.getSource().getAbsolutePath());
    String[] argArr=generationPlanArguments.toArray(new String[generationPlanArguments.size()]);
    JavaReflectionUtil.method(tool,Integer.class,"doEverything",String[].class).invoke(tool,new Object[]{argArr});
  }
  return new AntlrResult(0);
}
