{
  project.getTasks().whenTaskAdded(Test.class,new Action<Test>(){
    public void execute(    Test test){
      test.dependsOn(COMPILE_TESTS_TASK_NAME);
      test.conventionMapping(DefaultConventionsToPropertiesMapping.TEST);
      test.setConfiguration(project.getConfigurations().get(TEST_RUNTIME_CONFIGURATION_NAME));
      addDependsOnProjectDependencies(test,TEST_RUNTIME_CONFIGURATION_NAME);
      test.doFirst(new TaskAction(){
        public void execute(        Task task){
          Test test=(Test)task;
          List unmanagedClasspathFromTestCompile=((Compile)test.getProject().task(COMPILE_TESTS_TASK_NAME)).getUnmanagedClasspath();
          test.unmanagedClasspath(unmanagedClasspathFromTestCompile.toArray(new Object[unmanagedClasspathFromTestCompile.size()]));
        }
      }
);
    }
  }
);
  project.createTask(GUtil.map("type",Test.class),TEST_TASK_NAME).setDescription("Runs the tests.");
}
