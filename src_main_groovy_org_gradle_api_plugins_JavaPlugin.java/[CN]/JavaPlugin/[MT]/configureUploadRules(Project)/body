{
  project.getTasks().addRule(new Rule(){
    public String getDescription(){
      return "Pattern: upload<ConfigurationName>Internal: Upload the project artifacts of a configuration to the internal Gradle repository.";
    }
    public void apply(    String taskName){
      Set<Configuration> configurations=project.getConfigurations().getAll();
      for (      Configuration configuration : configurations) {
        if (taskName.equals(configuration.getUploadInternalTaskName())) {
          Upload uploadInternal=createUploadTask(configuration.getUploadInternalTaskName(),configuration,project);
          uploadInternal.getRepositories().add(project.getInternalRepository());
        }
      }
    }
  }
);
  project.getTasks().addRule(new Rule(){
    public String getDescription(){
      return "Pattern: upload<ConfigurationName>: Upload the project artifacts of a configuration to a public Gradle repository.";
    }
    public void apply(    String taskName){
      Set<Configuration> configurations=project.getConfigurations().getAll();
      for (      Configuration configuration : configurations) {
        if (taskName.equals(configuration.getUploadTaskName())) {
          createUploadTask(configuration.getUploadTaskName(),configuration,project);
        }
      }
    }
  }
);
}
