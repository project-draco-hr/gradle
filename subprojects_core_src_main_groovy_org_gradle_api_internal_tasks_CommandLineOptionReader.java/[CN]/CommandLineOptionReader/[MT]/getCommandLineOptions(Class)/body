{
  Map<String,CommandLineOptionDescriptor> options=new HashMap<String,CommandLineOptionDescriptor>();
  for (Class<?> type=taskClazz; type != Object.class && type != null; type=type.getSuperclass()) {
    for (    Method method : type.getDeclaredMethods()) {
      if (!Modifier.isStatic(method.getModifiers())) {
        CommandLineOption commandLineOption=method.getAnnotation(CommandLineOption.class);
        if (commandLineOption != null) {
          final CommandLineOptionDescriptor optionDescriptor=new CommandLineOptionDescriptor(commandLineOption,method);
          assertMethodTypeSupported(optionDescriptor,taskClazz,method);
          if (options.containsKey(optionDescriptor.getName())) {
            throw new CommandLineArgumentException(String.format("Option '%s' linked to multiple methods in class '%s'.",optionDescriptor.getName(),taskClazz.getName()));
          }
          options.put(optionDescriptor.getName(),optionDescriptor);
        }
      }
    }
  }
  return CollectionUtils.sort(options.values());
}
