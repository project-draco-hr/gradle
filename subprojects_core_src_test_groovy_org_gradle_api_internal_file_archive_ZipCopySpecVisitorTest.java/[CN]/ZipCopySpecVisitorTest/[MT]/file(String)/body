{
  final FileVisitDetails details=context.mock(FileVisitDetails.class,path);
  context.checking(new Expectations(){
{
      allowing(details).getRelativePath();
      will(returnValue(RelativePath.parse(true,path)));
      allowing(details).getLastModified();
      will(returnValue(1000L));
      allowing(details).isDirectory();
      will(returnValue(false));
      allowing(details).getMode();
      will(returnValue(1));
      allowing(details).copyTo(with(notNullValue(OutputStream.class)));
      will(new Action(){
        public void describeTo(        Description description){
          description.appendText("write content");
        }
        public Object invoke(        Invocation invocation) throws Throwable {
          IOUtils.write(String.format("contents of %s",path),(OutputStream)invocation.getParameter(0));
          return null;
        }
      }
);
    }
  }
);
  return details;
}
