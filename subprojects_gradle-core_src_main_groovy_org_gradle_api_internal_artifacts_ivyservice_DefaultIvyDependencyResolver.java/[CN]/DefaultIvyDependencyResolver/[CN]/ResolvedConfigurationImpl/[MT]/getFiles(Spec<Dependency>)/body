{
  buildResolvedDependencies();
  Set<ModuleDependency> allModuleDependencies=Specs.filterIterable(configuration.getAllDependencies(ModuleDependency.class),dependencySpec);
  Set<File> files=new LinkedHashSet<File>();
  for (  ModuleDependency moduleDependency : allModuleDependencies) {
    Set<ResolvedDependency> resolvedDependencies=conversionResult.getFirstLevelResolvedDependencies().get(moduleDependency);
    if (resolvedDependencies != null) {
      for (      ResolvedDependency resolvedDependency : resolvedDependencies) {
        for (        File depFile : ResolvedDependencies.getFilesFromArtifacts(resolvedDependency.getAllArtifacts(null))) {
          if (depFile == null) {
            throw new GradleException(String.format("Resolved files for %s contains a null value.",resolvedDependency));
          }
          files.add(depFile);
        }
      }
    }
  }
  return files;
}
