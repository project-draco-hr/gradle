{
  rethrowFailure();
  Set<ModuleDependency> allDependencies=configuration.getAllDependencies(ModuleDependency.class);
  Set<ModuleDependency> selectedDependencies=Specs.filterIterable(allDependencies,dependencySpec);
  Set<File> files=new LinkedHashSet<File>();
  if (allDependencies.equals(selectedDependencies)) {
    for (    File depFile : ResolvedDependencies.getFilesFromArtifacts(getResolvedArtifacts())) {
      if (depFile == null) {
        throw new GradleException(String.format("Resolved files for %s contains a null value.",this));
      }
      files.add(depFile);
    }
  }
 else {
    for (    ModuleDependency moduleDependency : selectedDependencies) {
      Set<ResolvedDependency> resolvedDependencies=conversionResult.getFirstLevelResolvedDependencies().get(moduleDependency);
      if (resolvedDependencies != null) {
        for (        ResolvedDependency resolvedDependency : resolvedDependencies) {
          for (          File depFile : ResolvedDependencies.getFilesFromArtifacts(resolvedDependency.getAllArtifacts(conversionResult.getRoot()))) {
            if (depFile == null) {
              throw new GradleException(String.format("Resolved files for %s contains a null value.",resolvedDependency));
            }
            files.add(depFile);
          }
        }
      }
    }
  }
  return files;
}
