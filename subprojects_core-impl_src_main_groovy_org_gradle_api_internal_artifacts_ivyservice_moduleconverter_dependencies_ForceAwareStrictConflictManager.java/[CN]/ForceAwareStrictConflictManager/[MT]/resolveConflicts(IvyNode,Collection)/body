{
  VersionMatcher versionMatcher=getSettings().getVersionMatcher();
  if (conflicts.size() < 2) {
    return conflicts;
  }
  IvyNode lastNode=null;
  for (  Object conflict : conflicts) {
    IvyNode node=(IvyNode)conflict;
    if (versionMatcher.isDynamic(node.getResolvedId())) {
      return null;
    }
    DependencyDescriptor dd=node.getDependencyDescriptor(parent);
    if (dd != null && dd.isForce()) {
      return Collections.singleton(node);
    }
    if (lastNode != null && !lastNode.equals(node)) {
      IvyNode chosenOne=strategyType.maybeChooseVersion(lastNode,node);
      if (chosenOne != null) {
        return Collections.singleton(chosenOne);
      }
      throw new StrictConflictException(lastNode,node);
    }
    lastNode=node;
  }
  return Collections.singleton(lastNode);
}
