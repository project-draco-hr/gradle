{
  try {
    final int pipelineId=Integer.parseInt(arguments.get(0));
    final int forkId=Integer.parseInt(arguments.get(1));
    final int testServerPort=Integer.parseInt(arguments.get(2));
    AsyncDispatch<TestControlMessage> asyncDispatch=new AsyncDispatch<TestControlMessage>(Executors.newSingleThreadExecutor());
    final IoConnectorFactory ioConnectorFactory=new ExternalIoConnectorFactory(testServerPort);
    final DefaultTestControlClient testControlClient=new DefaultTestControlClient(forkId,ioConnectorFactory,asyncDispatch);
    try {
      testControlClient.open();
      testControlClient.reportStarted();
      TestControlMessageDispatcher testControlMessageDispatcher=new TestControlMessageDispatcher(testControlClient,sandboxClassLoader);
      asyncDispatch.add(testControlMessageDispatcher);
      testControlMessageDispatcher.waitForExitReceived();
      asyncDispatch.stop();
      testControlClient.reportStopped();
    }
  finally {
      testControlClient.close();
    }
  }
 catch (  Throwable t) {
    t.printStackTrace();
  }
}
