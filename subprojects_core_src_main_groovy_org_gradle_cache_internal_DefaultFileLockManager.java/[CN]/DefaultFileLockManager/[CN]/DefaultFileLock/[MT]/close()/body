{
  if (lockFileAccess == null) {
    return;
  }
  try {
    LOGGER.debug("Releasing lock on {}.",displayName);
    lockedFiles.remove(target);
    try {
      if (lock != null && !lock.isShared()) {
        java.nio.channels.FileLock info;
        try {
          info=lockInformationRegion(LockMode.Exclusive);
        }
 catch (        InterruptedException e) {
          throw throwAsUncheckedException(e);
        }
        if (info != null) {
          try {
            lockFileAccess.setLength(INFORMATION_REGION_POS);
          }
  finally {
            info.release();
          }
        }
      }
    }
  finally {
      lockFileAccess.close();
    }
  }
 catch (  IOException e) {
    LOGGER.warn("Error releasing lock on {}: {}",displayName,e);
  }
 finally {
    lock=null;
    lockFileAccess=null;
    fileLockListener.lockClosed(target);
  }
}
