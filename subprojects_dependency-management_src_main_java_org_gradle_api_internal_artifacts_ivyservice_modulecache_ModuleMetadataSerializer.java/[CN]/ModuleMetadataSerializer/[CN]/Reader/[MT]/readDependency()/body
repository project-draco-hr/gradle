{
  ModuleVersionSelector requested=DefaultModuleVersionSelector.newSelector(readString(),readString(),readString());
  byte type=decoder.readByte();
switch (type) {
case TYPE_IVY:
    SetMultimap<String,String> configMappings=readDependencyConfigurationMapping();
  List<Artifact> artifacts=readDependencyArtifactDescriptors();
List<Exclude> excludes=readExcludeRules();
String dynamicConstraintVersion=readString();
boolean force=readBoolean();
boolean changing=readBoolean();
boolean transitive=readBoolean();
return new IvyDependencyMetadata(requested,dynamicConstraintVersion,force,changing,transitive,configMappings,artifacts,excludes);
case TYPE_MAVEN:
artifacts=readDependencyArtifactDescriptors();
excludes=readExcludeRules();
MavenScope scope=MavenScope.values()[decoder.readSmallInt()];
boolean optional=decoder.readBoolean();
return new MavenDependencyMetadata(scope,optional,requested,artifacts,excludes);
default :
throw new IllegalArgumentException("Unexpected dependency type found.");
}
}
