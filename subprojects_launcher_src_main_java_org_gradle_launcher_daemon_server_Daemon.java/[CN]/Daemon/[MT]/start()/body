{
  lifecycleLock.lock();
  try {
    if (stateCoordinator.isStarted()) {
      throw new IllegalStateException("cannot start daemon as it is already running");
    }
    connectorAddress=connector.start(new IncomingConnectionHandler(){
      public void handle(      final Connection<Object> connection){
        handlersExecutor.execute(new Runnable(){
          public void run(){
            try {
              handleIncoming(connection);
            }
 catch (            RuntimeException e) {
              LOGGER.error("Error processing the incoming command.",e);
              throw e;
            }
          }
        }
);
      }
    }
);
    stopperExecutor.execute(new Runnable(){
      public void run(){
        try {
          stopLatch.await();
        }
 catch (        InterruptedException e) {
          return;
        }
        onStop();
      }
    }
);
    registryUpdater=new DomainRegistryUpdater(daemonRegistry,connectorAddress);
    onStart();
  }
 catch (  Exception e) {
    LOGGER.warn("exception starting daemon",e);
    stopLatch.countDown();
  }
 finally {
    lifecycleLock.unlock();
  }
}
