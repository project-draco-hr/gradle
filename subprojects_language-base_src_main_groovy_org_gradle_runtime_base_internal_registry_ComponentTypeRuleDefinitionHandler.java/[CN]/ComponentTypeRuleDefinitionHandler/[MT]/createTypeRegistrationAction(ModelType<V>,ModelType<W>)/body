{
  return new Action<TypeRegistrationContext>(){
    public void execute(    final TypeRegistrationContext context){
      ExtensionContainer extensions=context.getExtensions();
      final ProjectSourceSet projectSourceSet=extensions.getByType(ProjectSourceSet.class);
      ComponentSpecContainer componentSpecs=extensions.getByType(ComponentSpecContainer.class);
      componentSpecs.registerFactory(type.getConcreteClass(),new NamedDomainObjectFactory<V>(){
        public V create(        String name){
          FunctionalSourceSet componentSourceSet=projectSourceSet.maybeCreate(name);
          ComponentSpecIdentifier id=new DefaultComponentSpecIdentifier(context.getProjectIdentifier().getPath(),name);
          @SuppressWarnings("unchecked") V created=(V)BaseComponentSpec.create(implementation.getConcreteClass(),id,componentSourceSet,instantiator);
          return created;
        }
      }
);
    }
  }
;
}
