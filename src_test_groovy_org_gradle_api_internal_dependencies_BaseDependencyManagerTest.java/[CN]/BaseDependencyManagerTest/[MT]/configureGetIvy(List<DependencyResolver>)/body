{
  final Ivy testIvy=new Ivy();
  final List<DependencyResolver> testResolvers=WrapUtil.toList(context.mock(DependencyResolver.class));
  final Map<String,ModuleDescriptor> testClientModuleRegistry=WrapUtil.toMap("key",context.mock(ModuleDescriptor.class));
  final File testGradleUserHome=new File("testGradleUserHome");
  project.getBuild().getStartParameter().setGradleUserHomeDir(testGradleUserHome);
  context.checking(new Expectations(){
{
      allowing(dependencyContainerMock).getClientModuleRegistry();
      will(returnValue(testClientModuleRegistry));
      allowing(dependencyResolversMock).getResolverList();
      will(returnValue(testResolvers));
      allowing(ivyServiceMock).ivy(testResolvers,publishResolvers,testGradleUserHome,testClientModuleRegistry);
      will(returnValue(testIvy));
    }
  }
);
  return testIvy;
}
