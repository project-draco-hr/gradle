{
  final FileCollectionSnapshot inputFilesSnapshot=inputFilesSnapshotter.snapshot(task.getInputs().getFiles());
  return new TaskUpToDateState(){
    public void checkUpToDate(    final Collection<String> messages){
      if (previousExecution.getInputFilesSnapshot() == null) {
        messages.add(String.format("Input file history is not available for %s.",task));
        return;
      }
      inputFilesSnapshot.changesSince(previousExecution.getInputFilesSnapshot(),new ChangeListener<File>(){
        public void added(        File file){
          messages.add(String.format("Input file %s for %s added.",file,task));
        }
        public void removed(        File file){
          messages.add(String.format("Input file %s for %s removed.",file,task));
        }
        public void changed(        File file){
          messages.add(String.format("Input file %s for %s has changed.",file,task));
        }
      }
);
    }
    public void snapshotAfterTask(){
      currentExecution.setInputFilesSnapshot(inputFilesSnapshot);
    }
  }
;
}
