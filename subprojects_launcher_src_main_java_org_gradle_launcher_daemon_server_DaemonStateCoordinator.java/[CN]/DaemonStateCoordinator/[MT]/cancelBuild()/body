{
  requestCancel();
  lock.lock();
  try {
    while (true) {
      try {
switch (state) {
case Idle:
case Stopped:
          return;
case Busy:
case Canceled:
case StopRequested:
        condition.await();
      break;
case Broken:
    throw new IllegalStateException("This daemon is in a broken state.");
}
}
 catch (InterruptedException e) {
throw UncheckedException.throwAsUncheckedException(e);
}
}
}
  finally {
lock.unlock();
}
}
