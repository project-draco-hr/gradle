{
  List<Spec> specs=new ArrayList<Spec>();
  String[] patterns=constraint.trim().split("\\s+");
  for (  String value : patterns) {
    if (value.startsWith(">=")) {
      final GradleVersion minVersion=GradleVersion.version(value.substring(2));
      specs.add(new Spec<GradleVersion>(){
        public boolean isSatisfiedBy(        GradleVersion element){
          return element.compareTo(minVersion) >= 0;
        }
      }
);
    }
 else     if (value.startsWith("<=")) {
      final GradleVersion maxVersion=GradleVersion.version(value.substring(2));
      specs.add(new Spec<GradleVersion>(){
        public boolean isSatisfiedBy(        GradleVersion element){
          return element.compareTo(maxVersion) <= 0;
        }
      }
);
    }
 else {
      throw new RuntimeException(String.format("Unsupported version range '%s' specified in constraint '%s'. Supported formats: '>=nnn' or '<=nnn' or space-separate patterns",value,constraint));
    }
  }
  return Specs.and(specs.toArray(new Spec[specs.size()]));
}
