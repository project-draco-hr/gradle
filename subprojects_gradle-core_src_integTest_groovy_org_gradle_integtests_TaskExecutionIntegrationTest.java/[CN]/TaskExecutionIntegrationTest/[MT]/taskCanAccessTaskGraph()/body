{
  TestFile buildFile=testFile("build.gradle");
  buildFile.writelns("import org.gradle.integtests.TaskExecutionIntegrationTest","task a(dependsOn: 'b') << { task ->","    assert gradle.taskGraph.hasTask(task)","    assert gradle.taskGraph.hasTask(':a')","    assert gradle.taskGraph.hasTask(a)","    assert gradle.taskGraph.hasTask(':b')","    assert gradle.taskGraph.hasTask(b)","    assert gradle.taskGraph.allTasks.contains(task)","    assert gradle.taskGraph.allTasks.contains(tasks.getByName('b'))","}","task b","gradle.taskGraph.whenReady { graph ->","    assert graph.hasTask(':a')","    assert graph.hasTask(a)","    assert graph.hasTask(':b')","    assert graph.hasTask(b)","    assert graph.allTasks.contains(a)","    assert graph.allTasks.contains(b)","    TaskExecutionIntegrationTest.graphListenerNotified = true","}");
  usingBuildFile(buildFile).withTasks("a").run().assertTasksExecuted(":b",":a");
  assertTrue(graphListenerNotified);
}
