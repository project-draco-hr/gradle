{
  List<T> matches=new ArrayList<T>();
  for (Class<?> cl=target.getClass(); cl != Object.class; cl=cl.getSuperclass()) {
    for (    Field field : cl.getDeclaredFields()) {
      if (!Modifier.isStatic(field.getModifiers()) && type.isAssignableFrom(field.getType())) {
        field.setAccessible(true);
        try {
          matches.add(type.cast(field.get(target)));
        }
 catch (        IllegalAccessException e) {
          throw new RuntimeException(e);
        }
      }
    }
  }
  if (matches.isEmpty()) {
    return null;
  }
  if (matches.size() > 1) {
    throw new RuntimeException(String.format("Multiple %s fields found for test class %s.",type.getSimpleName(),target.getClass().getSimpleName()));
  }
  return matches.get(0);
}
