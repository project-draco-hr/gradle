{
  ClassLoader antClassLoader=Project.class.getClassLoader();
  File toolsJar=Jvm.current().getToolsJar();
  if (toolsJar != null) {
    ClasspathUtil.addUrl((URLClassLoader)antClassLoader,GFileUtils.toURLs(Collections.singleton(toolsJar)));
  }
  ClassLoader runtimeClassLoader=getClass().getClassLoader();
  URL[] coreImplClassPath=classPathRegistry.getClassPathUrls("GRADLE_CORE_IMPL");
  coreImplClassLoader=new URLClassLoader(coreImplClassPath,runtimeClassLoader);
  URL[] pluginsClassPath=classPathRegistry.getClassPathUrls("GRADLE_PLUGINS");
  MultiParentClassLoader pluginsImports=new MultiParentClassLoader(runtimeClassLoader,coreImplClassLoader);
  pluginsClassLoader=new URLClassLoader(pluginsClassPath,pluginsImports);
  rootClassLoader=classLoaderFactory.createFilteringClassLoader(pluginsClassLoader);
  rootClassLoader.allowPackage("org.gradle");
  rootClassLoader.allowResources("META-INF/gradle-plugins");
  rootClassLoader.allowPackage("org.apache.tools.ant");
  rootClassLoader.allowPackage("groovy");
  rootClassLoader.allowPackage("org.codehaus.groovy");
  rootClassLoader.allowPackage("groovyjarjarantlr");
  rootClassLoader.allowPackage("org.apache.ivy");
  rootClassLoader.allowPackage("org.slf4j");
  rootClassLoader.allowPackage("org.apache.commons.logging");
  rootClassLoader.allowPackage("org.apache.log4j");
}
