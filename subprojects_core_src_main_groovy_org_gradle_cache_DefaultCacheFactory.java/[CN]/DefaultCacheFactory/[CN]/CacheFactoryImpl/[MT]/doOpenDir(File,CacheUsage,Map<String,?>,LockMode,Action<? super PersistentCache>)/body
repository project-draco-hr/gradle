{
  File canonicalDir=GFileUtils.canonicalise(cacheDir);
  DirCacheReference dirCacheReference=dirCaches.get(canonicalDir);
  if (dirCacheReference == null) {
    DefaultPersistentDirectoryCache cache=new DefaultPersistentDirectoryCache(canonicalDir,usage,properties,action);
    dirCacheReference=new DirCacheReference(cache,properties,lockMode);
    dirCaches.put(canonicalDir,dirCacheReference);
  }
 else {
    if (usage == CacheUsage.REBUILD && dirCacheReference.rebuiltBy != this) {
      throw new IllegalStateException(String.format("Cannot rebuild cache '%s' as it is already open.",cacheDir));
    }
    if (lockMode != dirCacheReference.lockMode) {
      throw new IllegalStateException(String.format("Cannot open cache '%s' with %s lock mode as it is already open with %s lock mode.",cacheDir,lockMode.toString().toLowerCase(),dirCacheReference.lockMode.toString().toLowerCase()));
    }
    if (!properties.equals(dirCacheReference.properties)) {
      throw new IllegalStateException(String.format("Cache '%s' is already open with different state.",cacheDir));
    }
  }
  if (usage == CacheUsage.REBUILD) {
    dirCacheReference.rebuiltBy=this;
  }
  dirCacheReference.addReference(this);
  return dirCacheReference;
}
