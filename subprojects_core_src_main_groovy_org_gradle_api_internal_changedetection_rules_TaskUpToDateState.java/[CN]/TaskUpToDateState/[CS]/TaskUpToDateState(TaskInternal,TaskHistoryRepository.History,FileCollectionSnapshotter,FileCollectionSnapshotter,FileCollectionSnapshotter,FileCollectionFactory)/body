{
  TaskExecution thisExecution=history.getCurrentExecution();
  TaskExecution lastExecution=history.getPreviousExecution();
  TaskStateChanges noHistoryState=NoHistoryStateChangeRule.create(task,lastExecution);
  TaskStateChanges taskTypeState=TaskTypeStateChangeRule.create(task,lastExecution,thisExecution);
  TaskStateChanges inputPropertiesState=InputPropertiesStateChangeRule.create(task,lastExecution,thisExecution);
  TaskStateChanges outputFileChanges;
  try {
    outputFileChanges=caching(OutputFilesStateChangeRule.create(task,lastExecution,thisExecution,outputFilesSnapshotter));
  }
 catch (  UncheckedIOException e) {
    throw new UncheckedIOException(String.format("Failed to capture snapshot of output files for task '%s' during up-to-date check.",task.getName()),e);
  }
  TaskStateChanges inputFileChanges;
  try {
    FileCollectionSnapshot inputFilesSnapshot=inputFilesSnapshotter.snapshot(task.getInputs().getFiles());
    this.inputFilesSnapshot=inputFilesSnapshot.getSnapshot();
    inputFileChanges=caching(InputFilesStateChangeRule.create(new InputFilesSnapshotAccess(lastExecution,thisExecution,inputFilesSnapshot),"Input"));
  }
 catch (  UncheckedIOException e) {
    throw new UncheckedIOException(String.format("Failed to capture snapshot of input files for task '%s' during up-to-date check.",task.getName()),e);
  }
  TaskStateChanges discoveredInputFilesChanges;
  try {
    DiscoveredInputFilesSnapshotAccess discoveredInputFilesSnapshotAccess=new DiscoveredInputFilesSnapshotAccess(discoveredInputsSnapshotter,fileCollectionFactory,lastExecution,thisExecution);
    this.discoveredInputsListener=discoveredInputFilesSnapshotAccess;
    discoveredInputFilesChanges=InputFilesStateChangeRule.create(discoveredInputFilesSnapshotAccess,"Discovered input");
  }
 catch (  UncheckedIOException e) {
    throw new UncheckedIOException(String.format("Failed to capture snapshot of input files for task '%s' during up-to-date check.",task.getName()),e);
  }
  allTaskChanges=new SummaryTaskStateChanges(MAX_OUT_OF_DATE_MESSAGES,noHistoryState,taskTypeState,inputPropertiesState,outputFileChanges,inputFileChanges,discoveredInputFilesChanges);
  rebuildChanges=new SummaryTaskStateChanges(1,noHistoryState,taskTypeState,inputPropertiesState,outputFileChanges);
  this.inputFileChanges=inputFileChanges;
}
