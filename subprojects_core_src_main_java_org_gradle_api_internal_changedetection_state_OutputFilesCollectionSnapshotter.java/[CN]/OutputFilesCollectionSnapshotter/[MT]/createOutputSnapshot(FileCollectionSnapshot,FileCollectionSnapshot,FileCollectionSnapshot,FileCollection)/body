{
  FileCollectionSnapshot filesSnapshot;
  Map<String,NormalizedFileSnapshot> afterSnapshots=afterExecution.getSnapshots();
  if (!beforeExecution.getSnapshots().isEmpty() && !afterSnapshots.isEmpty()) {
    Map<String,NormalizedFileSnapshot> beforeSnapshots=beforeExecution.getSnapshots();
    Map<String,NormalizedFileSnapshot> afterPreviousSnapshots=afterPreviousExecution != null ? afterPreviousExecution.getSnapshots() : new HashMap<String,NormalizedFileSnapshot>();
    int newEntryCount=0;
    ImmutableMap.Builder<String,NormalizedFileSnapshot> outputEntries=ImmutableMap.builder();
    for (    Map.Entry<String,NormalizedFileSnapshot> entry : afterSnapshots.entrySet()) {
      final String path=entry.getKey();
      NormalizedFileSnapshot fileSnapshot=entry.getValue();
      if (isOutputEntry(path,fileSnapshot,beforeSnapshots,afterPreviousSnapshots)) {
        outputEntries.put(entry.getKey(),fileSnapshot);
        newEntryCount++;
      }
    }
    if (newEntryCount == afterSnapshots.size()) {
      filesSnapshot=afterExecution;
    }
 else {
      filesSnapshot=new DefaultFileCollectionSnapshot(outputEntries.build(),TaskFilePropertyCompareStrategy.OUTPUT);
    }
  }
 else {
    filesSnapshot=afterExecution;
  }
  return filesSnapshot;
}
