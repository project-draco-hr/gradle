{
  FileCollectionSnapshot filesSnapshot;
  Map<String,IncrementalFileSnapshot> afterSnapshots=afterExecution.getSnapshots();
  if (!beforeExecution.getSnapshots().isEmpty() && !afterSnapshots.isEmpty()) {
    Map<String,IncrementalFileSnapshot> beforeSnapshots=beforeExecution.getSnapshots();
    Map<String,IncrementalFileSnapshot> afterPreviousSnapshots=afterPreviousExecution != null ? afterPreviousExecution.getSnapshots() : new HashMap<String,IncrementalFileSnapshot>();
    int newEntryCount=0;
    ImmutableMap.Builder<String,IncrementalFileSnapshot> outputEntries=ImmutableMap.builder();
    for (    Map.Entry<String,IncrementalFileSnapshot> entry : afterSnapshots.entrySet()) {
      final String path=entry.getKey();
      IncrementalFileSnapshot fileSnapshot=entry.getValue();
      if (isOutputEntry(path,fileSnapshot,beforeSnapshots,afterPreviousSnapshots)) {
        outputEntries.put(entry.getKey(),fileSnapshot);
        newEntryCount++;
      }
    }
    if (newEntryCount == afterSnapshots.size()) {
      filesSnapshot=unwrap(afterExecution);
    }
 else {
      filesSnapshot=new DefaultFileCollectionSnapshot(outputEntries.build(),TaskFilePropertyCompareType.OUTPUT);
    }
  }
 else {
    filesSnapshot=unwrap(afterExecution);
  }
  return new OutputFilesCollectionSnapshot(getRoots(roots),filesSnapshot);
}
