{
  project.getPlugins().apply(PublishingPlugin.class);
  final TaskContainer tasks=project.getTasks();
  final Task publishLifecycleTask=tasks.getByName(PublishingPlugin.PUBLISH_LIFECYCLE_TASK_NAME);
  final Task publishLocalLifecycleTask=tasks.add(PUBLISH_LOCAL_LIFECYCLE_TASK_NAME);
  publishLocalLifecycleTask.setDescription("Publishes all Maven publications produced by this project to the local Maven cache.");
  publishLocalLifecycleTask.setGroup("publishing");
  project.getExtensions().configure(PublishingExtension.class,new Action<PublishingExtension>(){
    public void execute(    PublishingExtension extension){
      extension.getPublications().registerFactory(MavenPublication.class,new MavenPublicationFactory(dependencyMetaDataProvider,instantiator,fileResolver));
      GeneratePomTaskCreator descriptorGenerationTaskCreator=new GeneratePomTaskCreator(project);
      descriptorGenerationTaskCreator.monitor(extension.getPublications());
      MavenPublishDynamicTaskCreator publishTaskCreator=new MavenPublishDynamicTaskCreator(tasks,publishLifecycleTask);
      publishTaskCreator.monitor(extension.getPublications(),extension.getRepositories());
      MavenPublishLocalDynamicTaskCreator publishLocalTaskCreator=new MavenPublishLocalDynamicTaskCreator(tasks,publishLocalLifecycleTask);
      publishLocalTaskCreator.monitor(extension.getPublications());
    }
  }
);
}
