{
  new Html(writer){
{
      List<String> versions=store.getVersions();
      html();
      head();
      headSection(this);
      title().text("Profile report").end();
      end();
      body();
      div().id("content");
      h2().text("All tests").end();
      List<String> testNames=store.getTestNames();
      div().id("controls").end();
      table().classAttr("history");
      for (      String testName : testNames) {
        TestExecutionHistory testHistory=store.getTestResults(testName);
        tr();
        th().colspan("6").classAttr("test-execution");
        text(testName);
        end();
        end();
        tr().classAttr("control-groups");
        th().colspan("3").end();
        th().colspan(String.valueOf(versions.size())).text("Average execution time").end();
        th().colspan(String.valueOf(versions.size())).text("Average heap usage").end();
        end();
        tr();
        th().text("Date").end();
        th().text("Test version").end();
        th().text("Branch").end();
        for (        String version : versions) {
          th().classAttr("numeric").text(version).end();
        }
        for (        String version : versions) {
          th().classAttr("numeric").text(version).end();
        }
        end();
        for (int i=0; i < testHistory.getResults().size() && i < 5; i++) {
          PerformanceResults performanceResults=testHistory.getResults().get(i);
          tr();
          td().text(format.timestamp(new Date(performanceResults.getTestTime()))).end();
          td().text(performanceResults.getVersionUnderTest()).end();
          td().text(performanceResults.getVcsBranch()).end();
          for (          String version : versions) {
            VersionResults versionResults=performanceResults.version(version);
            td().classAttr("numeric");
            if (versionResults.getResults().isEmpty()) {
              text("");
            }
 else {
              text(versionResults.getResults().getExecutionTime().getAverage().format());
            }
            end();
          }
          for (          String version : versions) {
            VersionResults versionResults=performanceResults.version(version);
            td().classAttr("numeric");
            if (versionResults.getResults().isEmpty()) {
              text("");
            }
 else {
              text(versionResults.getResults().getTotalMemoryUsed().getAverage().format());
            }
            end();
          }
          end();
        }
        tr();
        td().colspan("6");
        String url=testHistory.getId() + ".html";
        a().href(url).text("details...").end();
        end();
        end();
      }
      end();
      end();
      footer(this);
      endAll();
    }
  }
;
}
