{
  final String selectorProjectPath=selector.getProjectPath();
  final String libraryName=selector.getLibraryName();
  final String variant=selector.getVariant();
  LibraryResolutionErrorMessageBuilder.LibraryResolutionResult resolutionResult=doResolve(selectorProjectPath,libraryName);
  VariantComponentSpec selectedLibrary=resolutionResult.getSelectedLibrary();
  if (selectedLibrary != null) {
    if (variant == null) {
      selectMatchingVariant(result,selectedLibrary,selector,selectorProjectPath,libraryName);
    }
 else {
      selectExplicitlyProvidedVariant(result,selectedLibrary,selectorProjectPath,variant);
    }
  }
  if (!result.hasResult()) {
    String message=resolutionResult.toResolutionErrorMessage(binaryType,selector);
    ModuleVersionResolveException failure=new ModuleVersionResolveException(selector,new LibraryResolveException(message));
    result.failed(failure);
  }
}
