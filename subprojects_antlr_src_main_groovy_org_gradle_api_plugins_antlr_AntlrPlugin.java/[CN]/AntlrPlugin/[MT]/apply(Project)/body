{
  project.getPluginManager().apply(JavaPlugin.class);
  final Configuration antlrConfiguration=project.getConfigurations().create(ANTLR_CONFIGURATION_NAME).setVisible(false).setDescription("The Antlr libraries to be used for this project.");
  antlrConfiguration.defaultDependencies(new Action<DependencySet>(){
    @Override public void execute(    DependencySet dependencies){
      dependencies.add(project.getDependencies().create("antlr:antlr:2.7.7@jar"));
    }
  }
);
  project.getConfigurations().getByName(COMPILE_CONFIGURATION_NAME).extendsFrom(antlrConfiguration);
  project.getTasks().withType(AntlrTask.class,new Action<AntlrTask>(){
    public void execute(    AntlrTask antlrTask){
      antlrTask.getConventionMapping().map("antlrClasspath",new Callable<Object>(){
        public Object call() throws Exception {
          return project.getConfigurations().getByName(ANTLR_CONFIGURATION_NAME);
        }
      }
);
    }
  }
);
  project.getConvention().getPlugin(JavaPluginConvention.class).getSourceSets().all(new Action<SourceSet>(){
    public void execute(    SourceSet sourceSet){
      final AntlrSourceVirtualDirectoryImpl antlrDirectoryDelegate=new AntlrSourceVirtualDirectoryImpl(((DefaultSourceSet)sourceSet).getDisplayName(),sourceDirectorySetFactory);
      new DslObject(sourceSet).getConvention().getPlugins().put(AntlrSourceVirtualDirectory.NAME,antlrDirectoryDelegate);
      final String srcDir="src/" + sourceSet.getName() + "/antlr";
      antlrDirectoryDelegate.getAntlr().srcDir(srcDir);
      sourceSet.getAllSource().source(antlrDirectoryDelegate.getAntlr());
      final String taskName=sourceSet.getTaskName("generate","GrammarSource");
      AntlrTask antlrTask=project.getTasks().create(taskName,AntlrTask.class);
      antlrTask.setDescription("Processes the " + sourceSet.getName() + " Antlr grammars.");
      antlrTask.setSource(antlrDirectoryDelegate.getAntlr());
      final String outputDirectoryName=project.getBuildDir() + "/generated-src/antlr/" + sourceSet.getName();
      final File outputDirectory=new File(outputDirectoryName);
      antlrTask.setOutputDirectory(outputDirectory);
      sourceSet.getJava().srcDir(outputDirectory);
      project.getTasks().getByName(sourceSet.getCompileJavaTaskName()).dependsOn(taskName);
    }
  }
);
}
