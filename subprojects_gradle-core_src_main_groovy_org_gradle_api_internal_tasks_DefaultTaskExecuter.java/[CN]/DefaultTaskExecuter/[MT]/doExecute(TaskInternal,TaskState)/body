{
  if (!task.getEnabled()) {
    logger.info("Skipping execution as task is disabled.");
    String skipMessage="SKIPPED";
    logger.lifecycle("{} {}",task.getPath(),skipMessage);
    return new TaskExecutionResultImpl(task,null,skipMessage);
  }
  if (!startParameter.isNoOpt()) {
    boolean skip;
    try {
      skip=!task.getOnlyIf().isSatisfiedBy(task);
    }
 catch (    Throwable t) {
      Throwable failure=new GradleScriptException(String.format("Could not evaluate onlyIf predicate for %s.",task),t,((ProjectInternal)task.getProject()).getBuildScriptSource());
      return new TaskExecutionResultImpl(task,failure,null);
    }
    if (skip) {
      String skipMessage="SKIPPED as onlyIf is false";
      logger.lifecycle("{} {}",task.getPath(),skipMessage);
      return new TaskExecutionResultImpl(task,null,skipMessage);
    }
  }
  logger.lifecycle(task.getPath());
  state.setExecuting(true);
  try {
    GradleException failure=executeActions(task,state);
    return new TaskExecutionResultImpl(task,failure,null);
  }
  finally {
    state.setExecuting(false);
  }
}
