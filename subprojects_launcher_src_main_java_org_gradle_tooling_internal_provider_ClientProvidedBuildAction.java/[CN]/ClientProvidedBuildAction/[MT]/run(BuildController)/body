{
  final DefaultGradleLauncher gradleLauncher=(DefaultGradleLauncher)buildController.getLauncher();
  PayloadSerializer payloadSerializer=gradleLauncher.getGradle().getServices().get(PayloadSerializer.class);
  final InternalBuildAction<?> action=(InternalBuildAction<?>)payloadSerializer.deserialize(this.action);
  final AtomicReference<Object> result=new AtomicReference<Object>();
  gradleLauncher.addListener(new ModelConfigurationListener(){
    public void onConfigure(    final GradleInternal gradle){
      ToolingModelBuilderRegistry builderRegistry=gradle.getDefaultProject().getServices().get(ToolingModelBuilderRegistry.class);
      InternalBuildController internalBuildController=new DefaultBuildController(gradle,builderRegistry);
      result.set(action.execute(internalBuildController));
    }
  }
);
  buildController.configure();
  return payloadSerializer.serialize(result.get());
}
