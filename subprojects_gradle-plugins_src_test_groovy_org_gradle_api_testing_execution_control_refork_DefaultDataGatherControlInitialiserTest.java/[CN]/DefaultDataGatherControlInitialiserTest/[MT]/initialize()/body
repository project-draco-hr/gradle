{
  final DataGatherControl dataGatherControl=context.mock(DataGatherControl.class);
  final ReforkReasonConfigs reforkReasonConfig=context.mock(ReforkReasonConfigs.class);
  final ReforkReasonRegisterAdapter reforkReasonRegisterAdapter=context.mock(ReforkReasonRegisterAdapter.class);
  final ReforkReason reasonOne=context.mock(ReforkReason.class,"one#reason");
  final ReforkReasonConfig configOne=context.mock(ReforkReasonConfig.class,"one#config");
  final ReforkReasonDataGatherer dataGathererOne=context.mock(ReforkReasonDataGatherer.class,"one#dataGatherer");
  final ReforkReason reasonTwo=context.mock(ReforkReason.class,"two#reason");
  final ReforkReasonConfig configTwo=context.mock(ReforkReasonConfig.class,"two#config");
  final ReforkReasonDataGatherer dataGathererTwo=context.mock(ReforkReasonDataGatherer.class,"two#dataGatherer");
  final Map<ReforkReasonKey,ReforkReasonConfig> reasonConfigs=new HashMap<ReforkReasonKey,ReforkReasonConfig>();
  reasonConfigs.put(TestReforkReasons.TEST_KEY_1,configOne);
  reasonConfigs.put(TestReforkReasons.TEST_KEY_2,configTwo);
  final List<ReforkReasonKey> reasonKeys=new ArrayList<ReforkReasonKey>();
  reasonKeys.add(TestReforkReasons.TEST_KEY_1);
  reasonKeys.add(TestReforkReasons.TEST_KEY_2);
  context.checking(new Expectations(){
{
      one(reforkReasonConfig).getConfigs();
      will(returnValue(reasonConfigs));
      one(reforkReasonConfig).getKeys();
      will(returnValue(reasonKeys));
      one(reforkReasonRegisterAdapter).getReforkReason(TestReforkReasons.TEST_KEY_1);
      will(returnValue(reasonOne));
      one(reasonOne).getDataGatherer();
      will(returnValue(dataGathererOne));
      one(dataGathererOne).configure(configOne);
      will(throwException(new NullPointerException()));
      one(reforkReasonRegisterAdapter).getReforkReason(TestReforkReasons.TEST_KEY_2);
      will(returnValue(reasonTwo));
      one(reasonTwo).getDataGatherer();
      will(returnValue(dataGathererTwo));
      one(dataGathererTwo).configure(configTwo);
      one(dataGatherControl).addDataGatherer(dataGathererTwo);
    }
  }
);
  initialiser.setReforkReasonRegisterAdapter(reforkReasonRegisterAdapter);
  initialiser.initialize(dataGatherControl,reforkReasonConfig);
}
