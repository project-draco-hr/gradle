{
  component.getBinaries().withType(BinarySpecInternal.class).beforeEach(new Action<BinarySpecInternal>(){
    @Override public void execute(    BinarySpecInternal binary){
      for (      LanguageRegistration<?> languageRegistration : languageRegistry) {
        registerLanguageSourceSets(binary,component.getName(),languageRegistration);
      }
      addComponentSourceSetsToBinaryInputs(binary,component);
    }
    private <U extends LanguageSourceSet>void registerLanguageSourceSets(    BinarySpecInternal binary,    String componentName,    LanguageRegistration<U> languageRegistration){
      NamedDomainObjectFactory<? extends U> sourceSetFactory=languageRegistration.getSourceSetFactory(componentName);
      binary.getEntityInstantiator().registerFactory(languageRegistration.getSourceSetType(),sourceSetFactory);
    }
    private void addComponentSourceSetsToBinaryInputs(    BinarySpec binary,    ComponentSpec component){
      binary.getInputs().addAll(component.getSources().values());
    }
  }
);
}
