{
  Map<String,Object> args=new HashMap<String,Object>(map);
  String group=getAndRemove(args,"group");
  String name=getAndRemove(args,"name");
  String version=getAndRemove(args,"version");
  try {
    ExternalDependency dependency=dependencyType.getConstructor(String.class,String.class,String.class).newInstance(group,name,version);
    for (    String property : args.keySet()) {
      ReflectionUtil.setProperty(dependency,property,args.get(property));
    }
    return dependency;
  }
 catch (  InstantiationException e) {
    throw new GradleException(e);
  }
catch (  IllegalAccessException e) {
    throw new GradleException(e);
  }
catch (  InvocationTargetException e) {
    throw new GradleException(e);
  }
catch (  NoSuchMethodException e) {
    throw new GradleException(e);
  }
}
