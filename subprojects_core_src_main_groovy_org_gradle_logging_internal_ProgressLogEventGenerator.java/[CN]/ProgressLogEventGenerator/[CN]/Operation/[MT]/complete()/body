{
  boolean hasStatus=status.length() > 0;
  boolean hasDescription=description.length() > 0;
switch (state) {
case None:
    if (hasDescription && hasStatus) {
      doOutput(new StyledTextOutputEvent(completeTime,category,LogLevel.LIFECYCLE,new StyledTextOutputEvent.Span(description + ' '),new StyledTextOutputEvent.Span(Style.ProgressStatus,status),new StyledTextOutputEvent.Span(EOL)));
    }
 else     if (hasDescription) {
      doOutput(new StyledTextOutputEvent(completeTime,category,LogLevel.LIFECYCLE,description + EOL));
    }
 else     if (hasStatus) {
      doOutput(new StyledTextOutputEvent(completeTime,category,LogLevel.LIFECYCLE,new StyledTextOutputEvent.Span(Style.ProgressStatus,status),new StyledTextOutputEvent.Span(EOL)));
    }
  break;
case HeaderStarted:
if (hasStatus) {
  doOutput(new StyledTextOutputEvent(completeTime,category,LogLevel.LIFECYCLE,new StyledTextOutputEvent.Span(" "),new StyledTextOutputEvent.Span(Style.ProgressStatus,status),new StyledTextOutputEvent.Span(EOL)));
}
 else {
  doOutput(new StyledTextOutputEvent(completeTime,category,LogLevel.LIFECYCLE,EOL));
}
break;
case HeaderCompleted:
if (hasDescription && hasStatus) {
doOutput(new StyledTextOutputEvent(completeTime,category,LogLevel.LIFECYCLE,new StyledTextOutputEvent.Span(description + ' '),new StyledTextOutputEvent.Span(Style.ProgressStatus,status),new StyledTextOutputEvent.Span(EOL)));
}
 else if (hasStatus) {
doOutput(new StyledTextOutputEvent(completeTime,category,LogLevel.LIFECYCLE,new StyledTextOutputEvent.Span(Style.ProgressStatus,status),new StyledTextOutputEvent.Span(EOL)));
}
break;
default :
throw new IllegalStateException();
}
state=State.Completed;
}
