{
  DefaultModuleRegistry registry=new DefaultModuleRegistry();
  Set<File> bootstrapClasspath=new LinkedHashSet<File>();
  bootstrapClasspath.addAll(registry.getModule("gradle-launcher").getImplementationClasspath());
  if (registry.getGradleHome() == null) {
    bootstrapClasspath.addAll(registry.getFullClasspath());
  }
  if (bootstrapClasspath.isEmpty()) {
    throw new IllegalStateException("Unable to construct a bootstrap classpath when starting the daemon");
  }
  List<String> daemonArgs=new ArrayList<String>();
  try {
    JavaExecutableFinder finder=new AntBasedJavaExecutableFinder(daemonParameters.getJavaHome().getCanonicalPath());
    daemonArgs.add(finder.getJdkExecutable("java"));
  }
 catch (  IOException e) {
    throw new RuntimeException("Unable to find java executable for the daemon process.",e);
  }
  List<String> daemonOpts=daemonParameters.getJvmArgs();
  LOGGER.debug("Using daemon opts: {}",daemonOpts);
  daemonArgs.addAll(daemonOpts);
  daemonArgs.add("-cp");
  daemonArgs.add(GUtil.join(bootstrapClasspath,File.pathSeparator));
  daemonArgs.add(GradleDaemon.class.getName());
  daemonArgs.add(GradleVersion.current().getVersion());
  daemonArgs.add(daemonDir.getBaseDir().getAbsolutePath());
  daemonArgs.add(String.valueOf(daemonParameters.getIdleTimeout()));
  startProcess(daemonArgs,daemonDir.getVersionedDir());
}
