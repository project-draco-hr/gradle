{
  if (classLoader == leakingLoader) {
    throw new IllegalStateException("Cannot remove own types from Groovy loader.");
  }
  try {
    Iterator<?> it=globalClassSetIterator();
    while (it.hasNext()) {
      Object classInfo=it.next();
      if (classInfo != null) {
        Class clazz=(Class)clazzField.get(classInfo);
        if (clazz.getClassLoader() == classLoader) {
          removeFromGlobalClassValue.invoke(globalClassValue,clazz);
          if (LOG.isDebugEnabled()) {
            LOG.debug("Removed ClassInfo from {} loaded by {}",clazz.getName(),clazz.getClassLoader());
          }
        }
      }
    }
  }
 catch (  Exception e) {
    throw new GradleException("Could not remove types for ClassLoader " + classLoader + " from the Groovy system "+ leakingLoader,e);
  }
}
