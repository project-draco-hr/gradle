{
  if (commandLine.hasOption(HELP)) {
    return new ActionAdapter(new ShowUsageAction(parser));
  }
  if (commandLine.hasOption(VERSION)) {
    return new ActionAdapter(new ShowVersionAction());
  }
  if (commandLine.hasOption(GUI)) {
    return new ActionAdapter(new ShowGuiAction());
  }
  StartParameter startParameter=new StartParameter();
  startParameterConverter.convert(commandLine,startParameter);
  DaemonConnector connector=new DaemonConnector(startParameter.getGradleUserHomeDir());
  if (commandLine.hasOption(FOREGROUND)) {
    return new ActionAdapter(new DaemonMain(loggingServices,connector));
  }
  if (commandLine.hasOption(STOP)) {
    return new StopDaemonAction(connector,loggingServices.get(OutputEventListener.class));
  }
  boolean useDaemon=System.getProperty("org.gradle.daemon","false").equals("true");
  useDaemon=useDaemon || commandLine.hasOption(DAEMON);
  useDaemon=useDaemon && !commandLine.hasOption(NO_DAEMON);
  if (useDaemon) {
    return new DaemonBuildAction(loggingServices.get(OutputEventListener.class),connector,commandLine,new File(System.getProperty("user.dir")));
  }
  return new RunBuildAction(startParameter,loggingServices);
}
