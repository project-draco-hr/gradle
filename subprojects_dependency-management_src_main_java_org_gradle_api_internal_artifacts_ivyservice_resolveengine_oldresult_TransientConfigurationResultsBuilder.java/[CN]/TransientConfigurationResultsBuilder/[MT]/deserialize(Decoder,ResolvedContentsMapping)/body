{
  Clock clock=new Clock();
  Map<Long,DefaultResolvedDependency> allDependencies=new HashMap<Long,DefaultResolvedDependency>();
  DefaultTransientConfigurationResults results=new DefaultTransientConfigurationResults();
  int valuesRead=0;
  byte type=-1;
  try {
    while (true) {
      type=decoder.readByte();
      long id;
      valuesRead++;
switch (type) {
case NEW_DEP:
        id=decoder.readSmallLong();
      ResolvedConfigurationIdentifier details=resolvedConfigurationIdentifierSerializer.read(decoder);
    allDependencies.put(id,new DefaultResolvedDependency(details.getId(),details.getConfiguration()));
  break;
case ROOT:
id=decoder.readSmallLong();
results.root=allDependencies.get(id);
if (results.root == null) {
throw new IllegalStateException(String.format("Unexpected root id %s. Seen ids: %s",id,allDependencies.keySet()));
}
LOG.debug("Loaded resolved configuration results ({}) from {}",clock.getTime(),binaryStore);
return results;
case FIRST_LVL:
id=decoder.readSmallLong();
DefaultResolvedDependency dependency=allDependencies.get(id);
if (dependency == null) {
throw new IllegalStateException(String.format("Unexpected first level id %s. Seen ids: %s",id,allDependencies.keySet()));
}
results.firstLevelDependencies.put(mapping.getModuleDependency(id),dependency);
break;
case PARENT_CHILD:
long parentId=decoder.readSmallLong();
long childId=decoder.readSmallLong();
DefaultResolvedDependency parent=allDependencies.get(parentId);
DefaultResolvedDependency child=allDependencies.get(childId);
if (parent == null) {
throw new IllegalStateException(String.format("Unexpected parent dependency id %s. Seen ids: %s",parentId,allDependencies.keySet()));
}
if (child == null) {
throw new IllegalStateException(String.format("Unexpected child dependency id %s. Seen ids: %s",childId,allDependencies.keySet()));
}
parent.addChild(child);
child.addParentSpecificArtifacts(parent,newHashSet(mapping.getArtifacts(decoder.readSmallLong())));
break;
default :
throw new IOException("Unknown value type read from stream: " + type);
}
}
}
 catch (IOException e) {
throw new RuntimeException("Problems loading the resolved configuration. Read " + valuesRead + " values, last was: "+ type,e);
}
}
