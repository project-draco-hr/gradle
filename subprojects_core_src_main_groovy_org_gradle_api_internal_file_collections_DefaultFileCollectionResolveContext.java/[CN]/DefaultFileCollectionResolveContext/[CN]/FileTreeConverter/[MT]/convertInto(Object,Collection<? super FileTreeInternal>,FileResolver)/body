{
  if (element instanceof DefaultFileCollectionResolveContext) {
    DefaultFileCollectionResolveContext nestedContext=(DefaultFileCollectionResolveContext)element;
    result.addAll(nestedContext.resolveAsFileTrees());
  }
 else   if (element instanceof FileTree) {
    FileTree fileTree=(FileTree)element;
    result.add(Cast.cast(FileTreeInternal.class,fileTree));
  }
 else   if (element instanceof MinimalFileTree) {
    MinimalFileTree fileTree=(MinimalFileTree)element;
    result.add(new FileTreeAdapter(fileTree));
  }
 else   if (element instanceof MinimalFileSet) {
    MinimalFileSet fileSet=(MinimalFileSet)element;
    for (    File file : fileSet.getFiles()) {
      convertFileToFileTree(file,result);
    }
  }
 else   if (element instanceof FileCollection || element instanceof MinimalFileCollection) {
    throw new UnsupportedOperationException(String.format("Cannot convert instance of %s to FileTree",element.getClass().getSimpleName()));
  }
 else   if (element instanceof TaskDependency) {
    return;
  }
 else {
    convertFileToFileTree(fileResolver.resolve(element),result);
  }
}
