{
  if (element instanceof DefaultFileCollectionResolveContext) {
    DefaultFileCollectionResolveContext nestedContext=(DefaultFileCollectionResolveContext)element;
    result.addAll(nestedContext.resolveAsFileTrees());
  }
 else   if (element instanceof FileTreeInternal) {
    FileTreeInternal fileTree=(FileTreeInternal)element;
    result.add(fileTree);
  }
 else   if (element instanceof FileTree) {
    throw new UnsupportedOperationException("Cannot convert instance of FileTree to FileTreeInternal");
  }
 else   if (element instanceof FileCollectionInternal) {
    FileCollectionInternal fileCollection=(FileCollectionInternal)element;
    result.add(fileCollection.getAsFileTree());
  }
 else   if (element instanceof FileCollection) {
    throw new UnsupportedOperationException("Cannot convert instance of FileCollection to FileTreeInternal");
  }
 else   if (element instanceof MinimalFileCollection) {
    MinimalFileCollection fileCollection=(MinimalFileCollection)element;
    for (    File file : fileCollection.getFiles()) {
      convertFileToFileTree(file,result);
    }
  }
 else   if (element instanceof MinimalFileTree) {
    MinimalFileTree fileTree=(MinimalFileTree)element;
    result.add(new FileTreeAdapter(fileTree));
  }
 else   if (element instanceof TaskDependency) {
    result.add(new FileTreeAdapter(new EmptyFileTree((TaskDependency)element)));
  }
 else {
    convertFileToFileTree(fileResolver.resolve(element),result);
  }
}
