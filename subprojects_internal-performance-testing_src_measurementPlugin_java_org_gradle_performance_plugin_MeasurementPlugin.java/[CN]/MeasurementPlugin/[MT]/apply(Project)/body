{
  Gradle gradle=project.getGradle();
  final PerformanceCounterMeasurement performanceCounterMeasurement=new PerformanceCounterMeasurement(project.getRootProject().getBuildDir());
  performanceCounterMeasurement.recordStart();
  gradle.addBuildListener(new BuildAdapter(){
    @Override public void buildFinished(    BuildResult result){
      BuildEventTimeStamps.buildFinished(result);
      performanceCounterMeasurement.recordFinish();
      Project rootProject=result.getGradle().getRootProject();
      Logger logger=rootProject.getLogger();
      JavaFlightRecorderControl.handle(rootProject,logger);
      HeapDumper.handle(rootProject,logger);
      new HeapMeasurement().handle(rootProject,logger);
      ExternalResources.printAndResetStats();
    }
  }
);
  gradle.getTaskGraph().addTaskExecutionGraphListener(new TaskExecutionGraphListener(){
    @Override public void graphPopulated(    TaskExecutionGraph graph){
      BuildEventTimeStamps.configurationEvaluated();
    }
  }
);
}
