{
  LockOptions lockOptions=LockOptionsBuilder.mode(FileLockManager.LockMode.Exclusive);
  CacheLayout layout=new CacheLayoutBuilder().withBuildScope(task.getProject()).withPath("taskState",task.getName()).build();
  PersistentCache cache=cacheRepository.cache("incrementalCompile").withLayout(layout).withLockOptions(lockOptions).open();
  PersistentIndexedCache<File,FileState> stateCache=createCache(cache,"state",File.class,new DefaultSerializer<FileState>(FileState.class.getClassLoader()));
  PersistentIndexedCache<String,List<File>> listCache=createCache(cache,"previous",String.class,new DefaultSerializer<List<File>>());
  DefaultSourceDependencyParser dependencyParser=new DefaultSourceDependencyParser(includesParser,CollectionUtils.toList(includes));
  return new IncrementalCompileProcessor(cache,stateCache,listCache,dependencyParser,hasher);
}
