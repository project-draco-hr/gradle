{
  final AtomicBoolean operationCompleted=new AtomicBoolean();
  Future<?> handle=null;
  try {
    handle=executorService.submit(new Runnable(){
      @Override public void run(){
        try {
          while (!Thread.currentThread().isInterrupted()) {
            int c=input.read();
            if (operationCompleted.get()) {
              break;
            }
            if (isCancellation(c) && !operationCompleted.get()) {
              cancellationToken.cancel();
              break;
            }
          }
        }
 catch (        IOException e) {
          throw UncheckedException.throwAsUncheckedException(e);
        }
      }
    }
);
    operation.execute(cancellationToken);
    operationCompleted.set(true);
  }
  finally {
    if (handle != null) {
      handle.cancel(true);
    }
  }
}
