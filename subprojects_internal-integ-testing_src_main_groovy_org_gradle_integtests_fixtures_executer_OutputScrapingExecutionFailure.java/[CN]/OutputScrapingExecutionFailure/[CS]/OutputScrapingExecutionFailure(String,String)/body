{
  super(output,error);
  java.util.regex.Matcher matcher=FAILURE_PATTERN.matcher(error);
  if (matcher.find()) {
    if (matcher.find()) {
      throw new AssertionError("Found multiple failure sections in build error output.");
    }
  }
  matcher=LOCATION_PATTERN.matcher(error);
  if (matcher.find()) {
    fileName=matcher.group(1).trim();
    lineNumber=matcher.group(3);
  }
 else {
    fileName="";
    lineNumber="";
  }
  matcher=DESCRIPTION_PATTERN.matcher(error);
  if (matcher.find()) {
    String problemStr=matcher.group(1);
    Problem problem=extract(problemStr);
    description=problem.description;
    causes.addAll(problem.causes);
    while (matcher.find()) {
      problemStr=matcher.group(1);
      problem=extract(problemStr);
      causes.addAll(problem.causes);
    }
  }
 else {
    description="";
  }
  matcher=RESOLUTION_PATTERN.matcher(error);
  if (!matcher.find()) {
    resolution="";
  }
 else {
    resolution=matcher.group(1).trim();
  }
}
