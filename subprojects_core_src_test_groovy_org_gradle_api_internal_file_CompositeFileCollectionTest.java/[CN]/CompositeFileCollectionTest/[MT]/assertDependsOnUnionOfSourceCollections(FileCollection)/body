{
  final Task target=context.mock(Task.class,"target");
  final Task task1=context.mock(Task.class,"task1");
  final Task task2=context.mock(Task.class,"task2");
  context.checking(new Expectations(){
{
      TaskDependency dependency1=context.mock(TaskDependency.class,"dep1");
      TaskDependency dependency2=context.mock(TaskDependency.class,"dep2");
      one(source1).getBuildDependencies();
      will(returnValue(dependency1));
      one(dependency1).getDependencies(target);
      will(returnValue(toSet(task1)));
      one(source2).getBuildDependencies();
      will(returnValue(dependency2));
      one(dependency2).getDependencies(target);
      will(returnValue(toSet(task2)));
    }
  }
);
  TaskDependency dependency=collection.getBuildDependencies();
  assertThat(dependency.getDependencies(target),equalTo((Set)toSet(task1,task2)));
}
