{
  return new Transformer<Factory<List<File>>,ModuleComponentArtifactMetadata>(){
    public Factory<List<File>> transform(    final ModuleComponentArtifactMetadata artifact){
      return new Factory<List<File>>(){
        public List<File> create(){
          final List<File> files=new LinkedList<File>();
          if (artifact != null) {
            getMatchingFiles(artifact).visit(new EmptyFileVisitor(){
              public void visitFile(              FileVisitDetails fileDetails){
                files.add(fileDetails.getFile());
              }
            }
);
          }
          return files;
        }
      }
;
    }
    private MinimalFileTree getMatchingFiles(    ModuleComponentArtifactMetadata artifact){
      String patternString=pattern.getLocation(artifact).getPath();
      return new SingleIncludePatternFileTree(baseDir,patternString);
    }
  }
;
}
