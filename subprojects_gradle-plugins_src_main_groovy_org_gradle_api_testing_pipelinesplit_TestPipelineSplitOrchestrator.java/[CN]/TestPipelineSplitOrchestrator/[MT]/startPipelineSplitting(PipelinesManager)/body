{
  final Map<Spec<TestClassRunInfo>,Pipeline> pipelineMatchers=new HashMap<Spec<TestClassRunInfo>,Pipeline>();
  final List<Spec<TestClassRunInfo>> splitPolicyMatchers=new ArrayList<Spec<TestClassRunInfo>>();
  for (  final Pipeline pipeline : pipelinesManager.getPipelines()) {
    final PipelineConfig pipelineConfig=pipeline.getConfig();
    final SplitPolicyConfig splitPolicyConfig=pipelineConfig.getSplitPolicyConfig();
    final SplitPolicy splitPolicy=SplitPolicyRegister.getSplitPolicy(splitPolicyConfig.getPolicyName());
    final SplitPolicyInstance splitPolicyInstance=splitPolicy.getSplitPolicyInstance(pipelineConfig);
    splitPolicyInstance.prepare();
    final Spec<TestClassRunInfo> matcher=splitPolicyInstance.createSplitPolicyMatcher();
    pipelineMatchers.put(matcher,pipeline);
    splitPolicyMatchers.add(matcher);
  }
  TestClassProcessor splitter=new PipelineSplitWorker(Collections.unmodifiableList(splitPolicyMatchers),Collections.unmodifiableMap(pipelineMatchers));
  asyncProxy.start(splitter);
}
