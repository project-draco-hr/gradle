{
  String[] dependencyConfigurations=dependencyDescriptor.getDependencyConfigurations(mappingRhs,fromConfiguration.getName());
  for (  String target : dependencyConfigurations) {
    String candidate=target;
    int startFallback=candidate.indexOf('(');
    if (startFallback >= 0) {
      if (candidate.charAt(candidate.length() - 1) == ')') {
        String preferred=candidate.substring(0,startFallback);
        if (targetModule.getConfiguration(preferred) != null) {
          targetConfigs.add(preferred);
          continue;
        }
        candidate=candidate.substring(startFallback + 1,candidate.length() - 1);
      }
    }
    if (candidate.equals("*")) {
      for (      String configName : targetModule.getConfigurationNames()) {
        if (targetModule.getConfiguration(configName).isVisible()) {
          targetConfigs.add(configName);
        }
      }
      continue;
    }
    if (targetModule.getConfiguration(candidate) != null) {
      targetConfigs.add(candidate);
      continue;
    }
    throw new RuntimeException(String.format("Module version %s, configuration '%s' declares a dependency on configuration '%s' which is not declared in the module descriptor for %s",fromConfiguration.getComponent().getId(),fromConfiguration.getName(),target,targetModule.getId()));
  }
}
