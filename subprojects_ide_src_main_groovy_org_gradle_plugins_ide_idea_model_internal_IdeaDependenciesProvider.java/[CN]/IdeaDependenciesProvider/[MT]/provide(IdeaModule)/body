{
  getPath=new Transformer<FilePath,File>(){
    @Nullable public FilePath transform(    File file){
      return file != null ? ideaModule.getPathFactory().path(file) : null;
    }
  }
;
  Set<Dependency> result=new LinkedHashSet<Dependency>();
  if (ideaModule.getSingleEntryLibraries() != null) {
    for (    Map.Entry<String,Iterable<File>> singleEntryLibrary : ideaModule.getSingleEntryLibraries().entrySet()) {
      String scope=singleEntryLibrary.getKey();
      for (      File file : singleEntryLibrary.getValue()) {
        if (file != null && file.isDirectory()) {
          result.add(new SingleEntryModuleLibrary(getPath.transform(file),scope));
        }
      }
    }
  }
  result.addAll(provideFromScopeRuleMappings(ideaModule));
  return result;
}
