{
  final DependencyResolveContext resolveContext=context.mock(DependencyResolveContext.class);
  final Dependency projectSelfResolvingDependency=context.mock(Dependency.class);
  final ProjectDependency transitiveProjectDependencyStub=context.mock(ProjectDependency.class);
  context.checking(new Expectations(){
{
      allowing(projectConfigurationsStub).getByName("conf1");
      will(returnValue(projectConfigurationStub));
      allowing(projectConfigurationStub).getAllDependencies();
      will(returnValue(toSet(projectSelfResolvingDependency,transitiveProjectDependencyStub)));
      allowing(resolveContext).isTransitive();
      will(returnValue(true));
      one(resolveContext).add(projectSelfResolvingDependency);
      one(resolveContext).add(transitiveProjectDependencyStub);
    }
  }
);
  DefaultProjectDependency projectDependency=new DefaultProjectDependency(dependencyProjectStub,"conf1",instruction);
  projectDependency.resolve(resolveContext);
}
