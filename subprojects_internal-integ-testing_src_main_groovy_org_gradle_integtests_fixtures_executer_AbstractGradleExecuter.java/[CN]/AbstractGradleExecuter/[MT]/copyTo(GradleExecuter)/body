{
  executer.withGradleUserHomeDir(gradleUserHomeDir);
  executer.withDaemonIdleTimeoutSecs(daemonIdleTimeoutSecs);
  executer.withDaemonBaseDir(daemonBaseDir);
  if (workingDir != null) {
    executer.inDirectory(workingDir);
  }
  if (projectDir != null) {
    executer.usingProjectDirectory(projectDir);
  }
  if (buildScript != null) {
    executer.usingBuildScript(buildScript);
  }
  if (settingsFile != null) {
    executer.usingSettingsFile(settingsFile);
  }
  if (javaHome != null) {
    executer.withJavaHome(javaHome);
  }
  for (  File initScript : initScripts) {
    executer.usingInitScript(initScript);
  }
  executer.withTasks(tasks);
  executer.withArguments(args);
  executer.withEnvironmentVars(environmentVars);
  executer.usingExecutable(executable);
  if (quiet) {
    executer.withQuietLogging();
  }
  if (taskList) {
    executer.withTaskList();
  }
  if (dependencyList) {
    executer.withDependencyList();
  }
  if (userHomeDir != null) {
    executer.withUserHomeDir(userHomeDir);
  }
  if (stdinPipe != null) {
    executer.withStdinPipe(stdinPipe);
  }
  if (defaultCharacterEncoding != null) {
    executer.withDefaultCharacterEncoding(defaultCharacterEncoding);
  }
  if (noExplicitTmpDir) {
    executer.withNoExplicitTmpDir();
  }
  if (defaultLocale != null) {
    executer.withDefaultLocale(defaultLocale);
  }
  executer.withCommandLineGradleOpts(commandLineJvmOpts);
  executer.withBuildJvmOpts(buildJvmOpts);
  if (useOnlyRequestedJvmOpts) {
    executer.useDefaultBuildJvmArgs();
  }
  executer.noExtraLogging();
  for (int i=0; i < expectedDeprecationWarnings; i++) {
    executer.expectDeprecationWarning();
  }
  if (!eagerClassLoaderCreationChecksOn) {
    executer.withEagerClassLoaderCreationCheckDisabled();
  }
  if (!stackTraceChecksOn) {
    executer.withStackTraceChecksDisabled();
  }
  if (requiresGradleDistribution) {
    executer.requireGradleDistribution();
  }
  if (requireDaemon) {
    executer.requireDaemon();
  }
  executer.withDebug(debug);
  executer.withProfiler(profiler);
  executer.withForceInteractive(interactive);
  return executer;
}
