{
  List<DefaultGradleTaskSelector> selectors=Lists.newArrayList();
  for (  GradleProject childProject : project.getChildren()) {
    selectors.addAll(buildRecursively(childProject));
  }
  Multimap<String,String> aggregatedTasks=ArrayListMultimap.create();
  for (  DefaultGradleTaskSelector childSelector : selectors) {
    aggregatedTasks.putAll(childSelector.getName(),childSelector.getTasks());
  }
  for (  GradleTask task : project.getTasks()) {
    aggregatedTasks.put(task.getName(),task.getPath());
  }
  for (  String selectorName : aggregatedTasks.keySet()) {
    selectors.add(new DefaultGradleTaskSelector().setName(selectorName).setTaskNames(Sets.newHashSet(aggregatedTasks.get(selectorName))).setDescription(project.getParent() != null ? String.format("%s:%s task selector",project.getPath(),selectorName) : String.format("%s task selector",selectorName)).setDisplayName(String.format("%s built in %s and subprojects.",selectorName,project.getName())));
  }
  return selectors;
}
