{
  String somePath=":SomePath";
  final ProjectInternal rootProject=context.mock(ProjectInternal.class,"rootProject");
  final ProjectInternal someProject=context.mock(ProjectInternal.class,"someProject");
  context.checking(new Expectations(){
{
      allowing(gradle).getRootProject();
      will(returnValue(rootProject));
      allowing(rootProject).project(":SomePath");
      will(returnValue(someProject));
    }
  }
);
  BuiltInTasksBuildExecuter executer=new BuiltInTasksBuildExecuter(BuiltInTasksBuildExecuter.Options.TASKS,somePath);
  executer.setOptions(BuiltInTasksBuildExecuter.Options.DEPENDENCIES);
  executer.select(gradle);
  assertThat(((DependencyReportTask)executer.getTask()).getProjects(),equalTo(WrapUtil.<Project>toSet(someProject)));
}
