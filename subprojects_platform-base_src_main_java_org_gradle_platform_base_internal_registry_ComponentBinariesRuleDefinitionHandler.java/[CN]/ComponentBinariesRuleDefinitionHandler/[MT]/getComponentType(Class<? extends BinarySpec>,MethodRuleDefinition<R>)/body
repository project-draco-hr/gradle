{
  List<ModelReference<?>> references=ruleDefinition.getReferences();
  Class<?> componentType=null;
  for (  ModelReference<?> reference : references) {
    if (ComponentSpec.class.isAssignableFrom(reference.getType().getConcreteClass())) {
      if (componentType != null) {
        throw new InvalidComponentModelException(String.format("%s method must have one parameter extending %s. Found multiple parameter extending %s.",ComponentBinaries.class.getSimpleName(),ComponentSpec.class.getSimpleName(),ComponentSpec.class.getSimpleName()));
      }
      componentType=reference.getType().getConcreteClass();
    }
  }
  validateComponentType(expectedBinaryType,componentType);
  return (Class<? extends ComponentSpec>)componentType;
}
