{
  ComponentSpecContainer componentSpecs=inputs.get(0,ModelType.of(ComponentSpecContainer.class)).getInstance();
  final List<String> binariesAddedByRule=new ArrayList<String>();
  for (  ComponentSpec<S> componentSpec : componentSpecs.withType(componentType)) {
    CollectionBuilder<? extends S> collectionBuilder=new ActionAwareCollectionBuilder<S>(binaries,new Action<String>(){
      public void execute(      String binaryName){
        binariesAddedByRule.add(binaryName);
      }
    }
);
    ruleDefinition.getRuleInvoker().invoke(collectionBuilder,componentSpec);
    for (    String binaryAddedByRule : binariesAddedByRule) {
      S binarySpec=modelRegistry.get(ModelPath.path(String.format("binaries.%s",binaryAddedByRule)),ModelType.of(binaryType));
      componentSpec.getBinaries().add(binarySpec);
    }
  }
}
