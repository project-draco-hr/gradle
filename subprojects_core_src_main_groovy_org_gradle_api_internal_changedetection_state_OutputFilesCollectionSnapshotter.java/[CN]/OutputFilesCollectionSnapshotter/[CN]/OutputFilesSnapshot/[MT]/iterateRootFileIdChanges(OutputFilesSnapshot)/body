{
  Set<String> added=new LinkedHashSet<String>(roots);
  added.removeAll(other.roots);
  final Iterator<String> addedIterator=added.iterator();
  Set<String> removed=new LinkedHashSet<String>(other.roots);
  removed.removeAll(roots);
  final Iterator<String> removedIterator=removed.iterator();
  return new ChangeIterator<String>(){
    public boolean next(    ChangeListener<String> listener){
      if (addedIterator.hasNext()) {
        listener.added(addedIterator.next());
        return true;
      }
      if (removedIterator.hasNext()) {
        listener.removed(removedIterator.next());
        return true;
      }
      return false;
    }
  }
;
}
