{
  FileCollectionSnapshot filesSnapshot;
  if (!beforeExecution.getSnapshots().isEmpty() && !afterExecution.getSnapshots().isEmpty()) {
    Map<String,IncrementalFileSnapshot> beforeSnapshots=beforeExecution.getSnapshots();
    Map<String,IncrementalFileSnapshot> previousSnapshots=afterPreviousExecution != null ? afterPreviousExecution.getSnapshots() : new HashMap<String,IncrementalFileSnapshot>();
    List<Map.Entry<String,IncrementalFileSnapshot>> newEntries=new ArrayList<Map.Entry<String,IncrementalFileSnapshot>>(afterExecution.getSnapshots().size());
    for (    Map.Entry<String,IncrementalFileSnapshot> entry : afterExecution.getSnapshots().entrySet()) {
      final String path=entry.getKey();
      IncrementalFileSnapshot otherFile=beforeSnapshots.get(path);
      if (otherFile == null || !entry.getValue().isContentAndMetadataUpToDate(otherFile) || previousSnapshots.containsKey(path)) {
        newEntries.add(entry);
      }
    }
    if (newEntries.size() == afterExecution.getSnapshots().size()) {
      filesSnapshot=afterExecution;
    }
 else {
      Map<String,IncrementalFileSnapshot> newSnapshots=new HashMap<String,IncrementalFileSnapshot>(newEntries.size());
      for (      Map.Entry<String,IncrementalFileSnapshot> entry : newEntries) {
        newSnapshots.put(entry.getKey(),entry.getValue());
      }
      filesSnapshot=new FileCollectionSnapshotImpl(newSnapshots);
    }
  }
 else {
    filesSnapshot=afterExecution;
  }
  if (filesSnapshot instanceof OutputFilesSnapshot) {
    filesSnapshot=((OutputFilesSnapshot)filesSnapshot).filesSnapshot;
  }
  return new OutputFilesSnapshot(getRoots(roots),filesSnapshot);
}
