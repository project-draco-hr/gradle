{
  final File[] subFiles=directory.listFiles();
  final BufferedWriter dirListLevelWriter=getDirListLevelWriter(level);
  dirListLevelWriter.write(directory.getAbsolutePath());
  dirListLevelWriter.newLine();
  if (subFiles != null && subFiles.length > 0) {
    final List<File> subDirectories=new ArrayList<File>();
    for (    final File subFile : subFiles) {
      if (subFile.isDirectory()) {
        subDirectories.add(subFile);
      }
    }
    Collections.sort(subDirectories,new Comparator<File>(){
      public int compare(      final File firstDirectory,      final File secondDirectory){
        final String relativeFirstDirectoryPath=stateFileUtil.getRelativePathToDirectoryToProcess(firstDirectory);
        final String relativeSecondDirectoryPath=stateFileUtil.getRelativePathToDirectoryToProcess(secondDirectory);
        return relativeFirstDirectoryPath.compareTo(relativeSecondDirectoryPath);
      }
    }
);
    for (    final File subDirectory : subDirectories) {
      fillDirectoryListFiles(subDirectory,level + 1);
    }
  }
}
