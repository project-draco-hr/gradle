{
  Configuration groovyClasspath=project.getConfigurations().getByName(GROOVY_CONFIGURATION_NAME);
  if (groovyClasspath.getDependencies().isEmpty() && !project.getRepositories().isEmpty()) {
    Matcher groovyJar=findGroovyJar(classpath);
    if (groovyJar != null) {
      String notation="org.codehaus.groovy:" + groovyJar.group(1) + ":"+ groovyJar.group(2);
      if (groovyJar.group(3) != null) {
        notation+=":indy";
      }
      List<Dependency> dependencies=Lists.newArrayList();
      dependencies.add(project.getDependencies().create(notation));
      if (groovyJar.group(1).equals("groovy") && VersionNumber.parse(groovyJar.group(2)).getMajor() >= 2) {
        dependencies.add(project.getDependencies().create(notation.replace(":groovy:",":groovy-ant:")));
      }
      groovyClasspath=project.getConfigurations().detachedConfiguration(dependencies.toArray(new Dependency[dependencies.size()]));
    }
  }
  return groovyClasspath;
}
