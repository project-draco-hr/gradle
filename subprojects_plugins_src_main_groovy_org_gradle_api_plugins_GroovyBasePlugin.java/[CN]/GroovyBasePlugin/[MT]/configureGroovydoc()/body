{
  project.getTasks().withType(Groovydoc.class,new Action<Groovydoc>(){
    public void execute(    final Groovydoc groovydoc){
      groovydoc.getConventionMapping().map("groovyClasspath",new Callable<Object>(){
        public Object call() throws Exception {
          FileCollection groovyClasspath=groovyRuntime.inferGroovyClasspath(groovydoc.getClasspath());
          ConfigurableFileCollection jansi=project.files(moduleRegistry.getExternalModule("jansi").getImplementationClasspath().getAsFiles());
          return groovyClasspath.plus(jansi);
        }
      }
);
      groovydoc.getConventionMapping().map("destinationDir",new Callable<Object>(){
        public Object call() throws Exception {
          return new File(java(project.getConvention()).getDocsDir(),"groovydoc");
        }
      }
);
      groovydoc.getConventionMapping().map("docTitle",new Callable<Object>(){
        public Object call() throws Exception {
          return project.getExtensions().getByType(ReportingExtension.class).getApiDocTitle();
        }
      }
);
      groovydoc.getConventionMapping().map("windowTitle",new Callable<Object>(){
        public Object call() throws Exception {
          return project.getExtensions().getByType(ReportingExtension.class).getApiDocTitle();
        }
      }
);
    }
  }
);
}
