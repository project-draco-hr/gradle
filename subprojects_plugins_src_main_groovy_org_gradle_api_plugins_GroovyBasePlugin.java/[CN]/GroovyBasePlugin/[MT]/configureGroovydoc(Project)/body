{
  project.getTasks().withType(Groovydoc.class).all(new Action<Groovydoc>(){
    public void execute(    Groovydoc groovydoc){
      groovydoc.getConventionMapping().map("groovyClasspath",new ConventionValue(){
        public Object getValue(        Convention convention,        IConventionAware conventionAwareObject){
          return project.getConfigurations().getByName(GROOVY_CONFIGURATION_NAME).copy().setTransitive(true);
        }
      }
);
      groovydoc.getConventionMapping().map("destinationDir",new ConventionValue(){
        public Object getValue(        Convention convention,        IConventionAware conventionAwareObject){
          return new File(java(convention).getDocsDir(),"groovydoc");
        }
      }
);
      groovydoc.getConventionMapping().map("docTitle",new ConventionValue(){
        public Object getValue(        Convention convention,        IConventionAware conventionAwareObject){
          return convention.getPlugin(ReportingBasePluginConvention.class).getApiDocTitle();
        }
      }
);
      groovydoc.getConventionMapping().map("windowTitle",new ConventionValue(){
        public Object getValue(        Convention convention,        IConventionAware conventionAwareObject){
          return convention.getPlugin(ReportingBasePluginConvention.class).getApiDocTitle();
        }
      }
);
    }
  }
);
}
