{
  Set<ResolvedArtifact> someModuleArtifacts=WrapUtil.toSet(createArtifact("someModuleResolvedArtifact"));
  Set<ResolvedArtifact> someChildModuleArtifacts=WrapUtil.toSet(createArtifact("someChildModuleResolvedArtifact"));
  DefaultResolvedDependency resolvedDependency=createResolvedDependency(someModuleArtifacts);
  Set<ResolvedArtifact> parent1SpecificArtifacts=WrapUtil.toSet(createArtifact("parent1Specific"));
  DefaultResolvedDependency parentResolvedDependency1=createAndAddParent("parent1",resolvedDependency,parent1SpecificArtifacts);
  createAndAddParent("parent2",resolvedDependency,WrapUtil.toSet(createArtifact("parent2Specific")));
  DefaultResolvedDependency child=new DefaultResolvedDependency("someGroup","someChild","someVersion","someChildConfiguration",someChildModuleArtifacts);
  resolvedDependency.getChildren().add(child);
  Set<ResolvedArtifact> childParent1SpecificArtifacts=WrapUtil.toSet(createArtifact("childParent1Specific"));
  createAndAddParent("childParent1",child,childParent1SpecificArtifacts);
  Set<ResolvedArtifact> childParent2SpecificArtifacts=WrapUtil.toSet(createArtifact("childParent2Specific"));
  createAndAddParent("childParent2",child,childParent2SpecificArtifacts);
  assertThat(resolvedDependency.getAllArtifacts(parentResolvedDependency1),equalTo(GUtil.addSets(someModuleArtifacts,parent1SpecificArtifacts,someChildModuleArtifacts,childParent1SpecificArtifacts,childParent2SpecificArtifacts)));
}
