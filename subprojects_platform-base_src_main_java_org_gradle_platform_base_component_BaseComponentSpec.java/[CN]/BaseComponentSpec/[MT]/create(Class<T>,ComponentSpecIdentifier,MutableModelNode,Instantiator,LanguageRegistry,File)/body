{
  if (type.equals(BaseComponentSpec.class)) {
    throw new ModelInstantiationException("Cannot create instance of abstract class BaseComponentSpec.");
  }
  FunctionalSourceSet mainSourceSet=instantiator.newInstance(DefaultFunctionalSourceSet.class,identifier.getName(),instantiator,languageRegistry,baseDir);
  nextComponentInfo.set(new ComponentInfo(identifier,modelNode,type.getSimpleName(),mainSourceSet,instantiator));
  try {
    try {
      return instantiator.newInstance(type);
    }
 catch (    ObjectInstantiationException e) {
      throw new ModelInstantiationException(String.format("Could not create component of type %s",type.getSimpleName()),e.getCause());
    }
  }
  finally {
    nextComponentInfo.set(null);
  }
}
