{
  GeneratedArchiveBuildOutcome source=association.getSource();
  GeneratedArchiveBuildOutcome target=association.getTarget();
  Set<ArchiveEntry> sourceEntries;
  if (source.getArchiveFile() != null && source.getArchiveFile().exists()) {
    sourceEntries=archiveToEntriesTransformer.transform(source.getArchiveFile());
  }
 else {
    sourceEntries=Collections.emptySet();
  }
  Set<ArchiveEntry> targetEntries;
  if (target.getArchiveFile() != null && target.getArchiveFile().exists()) {
    targetEntries=archiveToEntriesTransformer.transform(target.getArchiveFile());
  }
 else {
    targetEntries=Collections.emptySet();
  }
  CollectionUtils.SetDiff<ArchiveEntry> diff=CollectionUtils.diffSetsBy(sourceEntries,targetEntries,new Transformer<ArchiveEntry.Path,ArchiveEntry>(){
    public ArchiveEntry.Path transform(    ArchiveEntry entry){
      return entry.getPath();
    }
  }
);
  SortedSet<ArchiveEntryComparison> entryComparisons=new TreeSet<ArchiveEntryComparison>();
  for (  ArchiveEntry sourceOnly : diff.leftOnly) {
    entryComparisons.add(new ArchiveEntryComparison(sourceOnly,null));
  }
  for (  Pair<ArchiveEntry,ArchiveEntry> pair : diff.common) {
    entryComparisons.add(new ArchiveEntryComparison(pair.left,pair.right));
  }
  for (  ArchiveEntry targetOnly : diff.rightOnly) {
    entryComparisons.add(new ArchiveEntryComparison(null,targetOnly));
  }
  return new GeneratedArchiveBuildOutcomeComparisonResult(association,entryComparisons);
}
