{
  lock.lock();
  try {
    final WatchPointsRegistry.Delta delta=watchPointsRegistry.appendFileSystemSubset(fileSystemSubset);
    Iterable<? extends File> startingWatchPoints=delta.getStartingWatchPoints();
    for (    File dir : startingWatchPoints) {
      if (FILE_TREE_WATCHING_SUPPORTED) {
        watchDir(dir.toPath());
      }
 else {
        Files.walkFileTree(dir.toPath(),new SimpleFileVisitor<Path>(){
          @Override public FileVisitResult preVisitDirectory(          Path path,          BasicFileAttributes attrs) throws IOException {
            if (delta.inUnfilteredSubsetOrAncestorOfAnyRoot(path.toFile())) {
              watchDir(path);
              return FileVisitResult.CONTINUE;
            }
 else {
              return FileVisitResult.SKIP_SUBTREE;
            }
          }
        }
);
      }
    }
  }
  finally {
    lock.unlock();
  }
}
