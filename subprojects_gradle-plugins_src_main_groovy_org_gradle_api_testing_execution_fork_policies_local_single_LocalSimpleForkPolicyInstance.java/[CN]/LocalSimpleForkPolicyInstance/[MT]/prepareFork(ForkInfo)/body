{
  final LocalSimpleForkPolicyForkInfo policyInfo=(LocalSimpleForkPolicyForkInfo)forkInfo.getForkPolicyInfo();
  final QueueingPipeline pipeline=forkInfo.getPipeline();
  final NativeTest testTask=pipeline.getTestTask();
  final int pipelineId=pipeline.getId();
  final Project project=testTask.getProject();
  final TestFrameworkInstance testFramework=testTask.getTestFramework();
  final ForkConfigWriter forkConfigWriter=new ForkConfigWriter(testTask,pipelineId,forkInfo.getId(),controlServerPort);
  final File forkConfigFile=forkConfigWriter.writeConfigFile();
  final ExecHandleBuilder forkHandleBuilder=new ExecHandleBuilder(false).execDirectory(project.getRootDir()).execCommand("java").errorOutputHandle(new DummyExecOutputHandle()).standardOutputHandle(new DummyExecOutputHandle());
  testFramework.applyForkJvmArguments(forkHandleBuilder);
  forkHandleBuilder.arguments("-cp",System.getProperty("gradle.fork.launcher.cp"),"org.gradle.api.testing.execution.fork.ForkLaunchMain",forkConfigFile.getAbsolutePath(),"org.gradle.api.testing.execution.control.client.TestForkExecuter");
  testFramework.applyForkArguments(forkHandleBuilder);
  policyInfo.setForkHandleBuilder(forkHandleBuilder);
}
