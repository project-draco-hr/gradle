{
  try {
    RuleMethodDataCollector dataCollector=new RuleMethodDataCollector();
    verifyMethodSignature(dataCollector,ruleDefinition);
    Class<S> binaryType=dataCollector.getParameterType(BinarySpec.class);
    dependencies.add(ComponentModelBasePlugin.class);
    final ModelReference<TaskContainer> tasks=ModelReference.of(ModelPath.path("tasks"),new ModelType<TaskContainer>(){
    }
);
    modelRegistry.mutate(new BinaryTaskRule<R,S>(tasks,binaryType,ruleDefinition));
  }
 catch (  InvalidComponentModelException e) {
    invalidModelRule(ruleDefinition,e);
  }
}
