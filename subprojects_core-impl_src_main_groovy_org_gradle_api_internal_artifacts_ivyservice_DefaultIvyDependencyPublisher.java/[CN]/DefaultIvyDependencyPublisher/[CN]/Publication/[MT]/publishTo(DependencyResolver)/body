{
  Set<Artifact> allArtifacts=getAllArtifacts(moduleDescriptor);
  Collection<Artifact> missing=new ArrayList<Artifact>();
  Map<Artifact,File> artifactsFiles=new LinkedHashMap<Artifact,File>();
  for (  Artifact artifact : allArtifacts) {
    File artifactFile=new File(artifact.getExtraAttribute(FILE_ABSOLUTE_PATH_EXTRA_ATTRIBUTE));
    if (artifactFile.exists()) {
      artifactsFiles.put(artifact,artifactFile);
    }
 else {
      logMissingArtifactFile(artifact,artifactFile);
      missing.add(artifact);
    }
  }
  if (descriptorFile != null) {
    Artifact artifact=MDArtifact.newIvyArtifact(moduleDescriptor);
    if (descriptorFile.exists()) {
      artifactsFiles.put(artifact,descriptorFile);
    }
 else {
      logMissingArtifactFile(artifact,descriptorFile);
      missing.add(artifact);
    }
  }
  boolean successfullyPublished=false;
  try {
    boolean overwrite=true;
    resolver.beginPublishTransaction(moduleDescriptor.getModuleRevisionId(),overwrite);
    for (    Map.Entry<Artifact,File> entry : artifactsFiles.entrySet()) {
      Artifact artifact=entry.getKey();
      File artifactFile=entry.getValue();
      publish(artifact,artifactFile,resolver,overwrite);
    }
    resolver.commitPublishTransaction();
    successfullyPublished=true;
  }
  finally {
    if (!successfullyPublished) {
      resolver.abortPublishTransaction();
    }
  }
  return missing;
}
