{
  final Task task=addTask("task");
  context.checking(new Expectations(){
{
      one(taskFactory).createTask(project,singletonMap(Task.TASK_NAME,"task"));
      will(returnValue(task("task")));
    }
  }
);
  try {
    container.add("task");
    fail();
  }
 catch (  InvalidUserDataException e) {
    assertThat(e.getMessage(),equalTo("Cannot add [task2] as a task with that name already exists."));
  }
  assertThat(container.getByName("task"),sameInstance(task));
}
