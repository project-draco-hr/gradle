{
  DependencyMetaDataProvider dependencyMetaDataProvider=context.mock(DependencyMetaDataProvider.class);
  ResolverProvider resolverProvider=context.mock(ResolverProvider.class);
  SettingsConverter settingsConverter=context.mock(SettingsConverter.class);
  ModuleDescriptorConverter moduleDescriptorConverter=context.mock(ModuleDescriptorConverter.class);
  IvyFactory ivyFactory=context.mock(IvyFactory.class);
  IvyDependencyResolver dependencyResolver=context.mock(IvyDependencyResolver.class);
  IvyDependencyPublisher dependencyPublisher=context.mock(IvyDependencyPublisher.class);
  Map clientModuleRegistry=new HashMap();
  DefaultIvyService ivyService=new DefaultIvyService(dependencyMetaDataProvider,resolverProvider,settingsConverter,moduleDescriptorConverter,ivyFactory,dependencyResolver,dependencyPublisher,clientModuleRegistry);
  assertThat(ivyService.getMetaDataProvider(),sameInstance(dependencyMetaDataProvider));
  assertThat(ivyService.getSettingsConverter(),sameInstance(settingsConverter));
  assertThat(ivyService.getModuleDescriptorConverter(),sameInstance(moduleDescriptorConverter));
  assertThat(ivyService.getIvyFactory(),sameInstance(ivyFactory));
  assertThat(ivyService.getDependencyResolver(),sameInstance(dependencyResolver));
  assertThat(ivyService.getDependencyPublisher(),sameInstance(dependencyPublisher));
  assertThat(ivyService.getClientModuleRegistry(),sameInstance(clientModuleRegistry));
}
