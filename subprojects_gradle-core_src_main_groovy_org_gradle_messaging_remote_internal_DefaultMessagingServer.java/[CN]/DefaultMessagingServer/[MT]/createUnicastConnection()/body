{
  final MultiChannelConnection<Message> messageConnection=connector.listen();
  IncomingMethodInvocationHandler incoming=new IncomingMethodInvocationHandler(classLoader,messageConnection);
  OutgoingMethodInvocationHandler outgoing=new OutgoingMethodInvocationHandler(messageConnection);
  final AtomicReference<ObjectConnection> connectionRef=new AtomicReference<ObjectConnection>();
  AsyncStoppable stopControl=new AsyncStoppable(){
    public void requestStop(){
      messageConnection.requestStop();
    }
    public void stop(){
      try {
        messageConnection.stop();
      }
  finally {
        connections.remove(connectionRef.get());
      }
    }
  }
;
  DefaultObjectConnection connection=new DefaultObjectConnection(messageConnection,stopControl,outgoing,incoming);
  connectionRef.set(connection);
  connections.add(connection);
  return connection;
}
