{
  antBuilder.withClasspath(scalaClasspath).execute(new Closure<Object>(this){
    @SuppressWarnings("unused") public Object doCall(    final AntBuilderDelegate ant){
      ant.invokeMethod("taskdef",Collections.singletonMap("resource","scala/tools/ant/antlib.xml"));
      ImmutableMap.Builder<String,Object> optionsBuilder=ImmutableMap.builder();
      optionsBuilder.put("destDir",targetDir);
      optionsBuilder.putAll(docOptions.optionMap());
      ImmutableMap<String,Object> options=optionsBuilder.build();
      return ant.invokeMethod("scaladoc",new Object[]{options,new Closure<Void>(this){
        public void doCall(){
          source.addToAntBuilder(ant,"src",FileCollection.AntType.MatchingTask);
          for (          File file : bootclasspathFiles) {
            ant.invokeMethod("bootclasspath",Collections.singletonMap("location",file));
          }
          for (          File dir : extensionDirs) {
            ant.invokeMethod("extdirs",Collections.singletonMap("location",dir));
          }
          for (          File file : classpathFiles) {
            ant.invokeMethod("classpath",Collections.singletonMap("location",file));
          }
        }
      }
});
    }
  }
);
}
