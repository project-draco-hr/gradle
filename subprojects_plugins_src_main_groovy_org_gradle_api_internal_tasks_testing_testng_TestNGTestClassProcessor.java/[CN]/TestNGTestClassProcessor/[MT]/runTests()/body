{
  TestNG testNg=new TestNG();
  testNg.setOutputDirectory(testReportDir.getAbsolutePath());
  testNg.setDefaultSuiteName(options.getDefaultSuiteName());
  testNg.setDefaultTestName(options.getDefaultTestName());
  testNg.setParallel(options.getParallel());
  testNg.setThreadCount(options.getThreadCount());
  String configFailurePolicy=options.getConfigFailurePolicy();
  try {
    JavaReflectionUtil.method(TestNG.class,Object.class,"setConfigFailurePolicy",String.class).invoke(testNg,configFailurePolicy);
  }
 catch (  NoSuchMethodException e) {
    if (!configFailurePolicy.equals(TestNGOptions.DEFAULT_CONFIG_FAILURE_POLICY)) {
      throw e;
    }
  }
  try {
    JavaReflectionUtil.method(TestNG.class,Object.class,"setAnnotations").invoke(testNg,options.getAnnotations());
  }
 catch (  NoSuchMethodException e) {
  }
  if (options.getJavadocAnnotations()) {
    testNg.setSourcePath(CollectionUtils.join(File.pathSeparator,options.getTestResources()));
  }
  testNg.setUseDefaultListeners(options.getUseDefaultListeners());
  testNg.setVerbose(0);
  testNg.setGroups(CollectionUtils.join(",",options.getIncludeGroups()));
  testNg.setExcludedGroups(CollectionUtils.join(",",options.getExcludeGroups()));
  for (  String listenerClass : options.getListeners()) {
    try {
      testNg.addListener(applicationClassLoader.loadClass(listenerClass).newInstance());
    }
 catch (    Throwable e) {
      throw new GradleException(String.format("Could not add a test listener with class '%s'.",listenerClass),e);
    }
  }
  if (!options.getIncludedTests().isEmpty()) {
    testNg.addListener(new SelectedTestsFilter(options.getIncludedTests()));
  }
  if (!suiteFiles.isEmpty()) {
    testNg.setTestSuites(GFileUtils.toPaths(suiteFiles));
  }
 else {
    testNg.setTestClasses(testClasses.toArray(new Class[testClasses.size()]));
  }
  testNg.addListener((Object)adaptListener(new TestNGTestResultProcessorAdapter(resultProcessor,idGenerator,timeProvider)));
  try {
    JavaReflectionUtil.method(TestNG.class,void.class,"setPreserveOrder",boolean.class).invoke(testNg,options.getPreserveOrder());
  }
 catch (  NoSuchMethodException e) {
    if (options.getPreserveOrder()) {
      throw e;
    }
  }
  try {
    JavaReflectionUtil.method(TestNG.class,void.class,"setGroupByInstances",boolean.class).invoke(testNg,options.getGroupByInstances());
  }
 catch (  NoSuchMethodException e) {
    if (options.getPreserveOrder()) {
      throw e;
    }
  }
  testNg.run();
}
