{
  InstanceFactory.TypeRegistrationBuilder<S> registration=register(publicType,definedBy);
  if (implementationType != null) {
    registration.withImplementation(Cast.<ModelType<? extends S>>uncheckedCast(implementationType),new InstanceFactory.ImplementationFactory<S>(){
      @Override public S create(      ModelType<? extends S> publicType,      String sourceSetName,      MutableModelNode modelNode){
        return Cast.uncheckedCast(BaseLanguageSourceSet.create(publicType.getConcreteClass(),implementationType.getConcreteClass(),sourceSetName,determineParentName(modelNode),sourceDirectorySetFactory));
      }
    }
);
  }
  for (  Class<?> internalView : internalViews) {
    registration.withInternalView(ModelType.of(internalView));
  }
}
