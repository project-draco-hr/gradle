{
  ModelRegistry modelRegistry=target.getModelRegistry();
  Iterable<Class<? extends RuleSource>> declaredSources=ruleDetector.getDeclaredSources(clazz);
  for (  Class<? extends RuleSource> ruleSource : declaredSources) {
    Iterable<ExtractedModelRule> rules=ruleInspector.extract(ruleSource);
    for (    ExtractedModelRule rule : rules) {
      for (      Class<?> dependency : rule.getRuleDependencies()) {
        target.getPluginManager().apply(dependency);
      }
      if (rule.getType().equals(ExtractedModelRule.Type.ACTION)) {
        modelRegistry.apply(ModelPath.ROOT,rule.getActionRole(),rule.getAction());
      }
 else       if (rule.getType().equals(ExtractedModelRule.Type.CREATOR)) {
        modelRegistry.create(rule.getCreator());
      }
 else       if (!rule.getType().equals(ExtractedModelRule.Type.DEPENDENCIES)) {
        throw new IllegalStateException("unhandled extracted model rule type: " + rule.getType());
      }
    }
  }
}
