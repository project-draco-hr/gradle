{
  StringBuilder confs=new StringBuilder();
  String[] modConfs=dep.getModuleConfigurations();
  Map<String,List<String>> configMappings;
  if (dep instanceof DefaultDependencyDescriptor) {
    try {
      configMappings=(Map<String,List<String>>)dependencyConfigField.get(dep);
    }
 catch (    IllegalAccessException e) {
      throw UncheckedException.throwAsUncheckedException(e);
    }
  }
 else {
    configMappings=new HashMap<String,List<String>>();
    for (    String modConf : modConfs) {
      configMappings.put(modConf,Arrays.asList(dep.getDependencyConfigurations(modConfs)));
    }
  }
  for (int j=0; j < modConfs.length; j++) {
    List<String> depConfs=configMappings.get(modConfs[j]);
    confs.append(modConfs[j]).append("->");
    for (int k=0; k < depConfs.size(); k++) {
      confs.append(depConfs.get(k));
      if (k + 1 < depConfs.size()) {
        confs.append(",");
      }
    }
    if (j + 1 < modConfs.length) {
      confs.append(";");
    }
  }
  return confs.toString();
}
