{
  writer.startElement("dependency");
  ModuleRevisionId dependencyRevisionId=dep.getDependencyRevisionId();
  writer.attribute("org",dependencyRevisionId.getOrganisation());
  writer.attribute("name",dependencyRevisionId.getName());
  if (dependencyRevisionId.getBranch() != null) {
    writer.attribute("branch",dependencyRevisionId.getBranch());
  }
  writer.attribute("rev",dependencyRevisionId.getRevision());
  if (!dep.getDynamicConstraintDependencyRevisionId().equals(dependencyRevisionId)) {
    if (dep.getDynamicConstraintDependencyRevisionId().getBranch() != null) {
      writer.attribute("branchConstraint",dep.getDynamicConstraintDependencyRevisionId().getBranch());
    }
    writer.attribute("revConstraint",dep.getDynamicConstraintDependencyRevisionId().getRevision());
  }
  if (dep.isForce()) {
    writer.attribute("force","true");
  }
  if (dep.isChanging()) {
    writer.attribute("changing","true");
  }
  if (!dep.isTransitive()) {
    writer.attribute("transitive","false");
  }
  writer.attribute("conf",getConfMapping(dep));
  printExtraAttributes(dep,writer);
  DependencyArtifactDescriptor[] depArtifacts=dep.getAllDependencyArtifacts();
  printDependencyArtefacts(md,writer,depArtifacts);
  IncludeRule[] includes=dep.getAllIncludeRules();
  printDependencyIncludeRules(md,writer,includes);
  ExcludeRule[] excludes=dep.getAllExcludeRules();
  printDependencyExcludeRules(md,writer,excludes);
  writer.endElement();
}
