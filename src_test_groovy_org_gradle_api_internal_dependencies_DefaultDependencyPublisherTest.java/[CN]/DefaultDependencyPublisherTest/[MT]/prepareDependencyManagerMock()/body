{
  dependencyManagerMock=context.mock(DependencyManager.class);
  mavenMockPomGenerator=context.mock(MavenPomGenerator.class);
  context.checking(new Expectations(){
{
      allowing(dependencyManagerMock).getAbsoluteArtifactPatterns();
      will(returnValue(WrapUtil.toList("absolutePattern")));
      allowing(dependencyManagerMock).getArtifactParentDirs();
      will(returnValue(WrapUtil.toSet(new File("a"),new File("b"))));
      allowing(dependencyManagerMock).getDefaultArtifactPattern();
      will(returnValue(TEST_DEFAULT_PATTERN));
      allowing(dependencyManagerMock).getMaven();
      will(returnValue(mavenMockPomGenerator));
      allowing(mavenMockPomGenerator).getPackaging();
      will(returnValue(TEST_MAVEN_PACKAGING));
    }
  }
);
}
