{
  return new SourceTransformTaskConfig(){
    public String getTaskPrefix(){
      return "compile";
    }
    public Class<? extends DefaultTask> getTaskType(){
      return RoutesCompile.class;
    }
    public void configureTask(    Task task,    BinarySpec binarySpec,    LanguageSourceSet sourceSet,    ServiceRegistry serviceRegistry){
      PlayApplicationBinarySpecInternal binary=(PlayApplicationBinarySpecInternal)binarySpec;
      RoutesSourceSet routesSourceSet=(RoutesSourceSet)sourceSet;
      RoutesCompile routesCompile=(RoutesCompile)task;
      ScalaLanguageSourceSet routesScalaSources=binary.getGeneratedScala().get(routesSourceSet);
      File generatedSourceDir=binary.getNamingScheme().getOutputDirectory(task.getProject().getBuildDir(),"src");
      File routesCompileOutputDirectory=new File(generatedSourceDir,routesScalaSources.getName());
      routesCompile.setDescription("Generates routes for the '" + routesSourceSet.getName() + "' source set.");
      routesCompile.setPlatform(binary.getTargetPlatform());
      routesCompile.setAdditionalImports(new ArrayList<String>());
      routesCompile.setSource(routesSourceSet.getSource());
      routesCompile.setOutputDirectory(routesCompileOutputDirectory);
      routesCompile.setInjectedRoutesGenerator(binary.getApplication().getInjectedRoutesGenerator());
      routesScalaSources.getSource().srcDir(routesCompileOutputDirectory);
      routesScalaSources.builtBy(routesCompile);
    }
  }
;
}
