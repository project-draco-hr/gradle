{
  FileCollectionInternal fileCollection=(FileCollectionInternal)input;
  fileCollection.visitRootElements(new FileCollectionVisitor(){
    @Override public void visitCollection(    FileCollectionInternal fileCollection){
      for (      File file : fileCollection) {
        if (file.isFile()) {
          fileTreeElements.add(new DefaultFileVisitDetails(file,fileSystem,fileSystem));
        }
 else         if (file.isDirectory()) {
          visitTree(new FileTreeAdapter(new DirectoryFileTree(file,patternSetFactory.create())));
        }
 else {
          missingFiles.add(new MissingFileVisitDetails(file));
        }
      }
    }
    @Override public void visitTree(    FileTreeInternal fileTree){
      fileTree.visitTreeOrBackingFile(new FileVisitor(){
        @Override public void visitDir(        FileVisitDetails dirDetails){
          fileTreeElements.add(dirDetails);
        }
        @Override public void visitFile(        FileVisitDetails fileDetails){
          fileTreeElements.add(fileDetails);
        }
      }
);
    }
  }
);
}
