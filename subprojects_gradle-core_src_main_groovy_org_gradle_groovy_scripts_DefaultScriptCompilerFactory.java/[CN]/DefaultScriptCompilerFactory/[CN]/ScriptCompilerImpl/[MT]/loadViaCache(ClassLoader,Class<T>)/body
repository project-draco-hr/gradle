{
  Map<String,Object> properties=new HashMap<String,Object>();
  properties.put("source.filename",source.getFileName());
  properties.put("source.hash",HashUtil.createHash(source.getText()));
  PersistentCache cache=cacheRepository.getGlobalCache(String.format("scripts/%s",source.getClassName()),properties);
  File classesDir;
  if (transformer != null) {
    classesDir=new File(cache.getBaseDir(),transformer.getClass().getSimpleName());
  }
 else {
    classesDir=new File(cache.getBaseDir(),"NoTransformer");
  }
  if (!cache.isValid() || !classesDir.exists()) {
    scriptCompilationHandler.compileScriptToDir(source,classLoader,classesDir,transformer,scriptBaseClass);
    cache.markValid();
  }
  return scriptCompilationHandler.loadScriptFromDir(source,classLoader,classesDir,scriptBaseClass);
}
