{
  if (!(resolver instanceof AbstractResolver)) {
    return NoMatcher.INSTANCE;
  }
  AbstractResolver abstractResolver=(AbstractResolver)resolver;
  String changingMatcherName=JavaReflectionUtil.method(AbstractResolver.class,String.class,"getChangingMatcherName").invoke(abstractResolver);
  String changingPattern=JavaReflectionUtil.method(AbstractResolver.class,String.class,"getChangingPattern").invoke(abstractResolver);
  if (changingMatcherName == null || changingPattern == null) {
    return NoMatcher.INSTANCE;
  }
  PatternMatcher matcher=abstractResolver.getSettings().getMatcher(changingMatcherName);
  if (matcher == null) {
    throw new IllegalStateException("unknown matcher '" + changingMatcherName + "'. It is set as changing matcher in "+ this);
  }
  return matcher.getMatcher(changingPattern);
}
