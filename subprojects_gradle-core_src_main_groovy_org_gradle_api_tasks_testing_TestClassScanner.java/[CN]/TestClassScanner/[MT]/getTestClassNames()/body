{
  final FileSet testClassFileSet=new FileSet(testClassDirectory,null);
  if (!scanForTestClasses) {
    if (includePatterns.isEmpty()) {
      includePatterns.add("**/*Tests.class");
      includePatterns.add("**/*Test.class");
    }
    if (excludePatterns.isEmpty()) {
      excludePatterns.add("**/Abstract*.class");
    }
  }
  testClassFileSet.include(includePatterns);
  testClassFileSet.exclude(excludePatterns);
  final Set<String> testClassNames=new HashSet<String>();
  testClassFileSet.visit(new FileVisitor(){
    public void visitDir(    FileVisitDetails dirDetails){
    }
    public void visitFile(    FileVisitDetails fileDetails){
      File file=fileDetails.getFile();
      if (file.getAbsolutePath().endsWith(".class")) {
        final String fileResourceName=fileDetails.getRelativePath().getPathString();
        logger.debug("test-class-scan : scanning {}",fileResourceName);
        if (scanForTestClasses) {
          if (!testFramework.isTestClass(file)) {
            logger.debug("test-class-scan : discarded {} not a test class",fileResourceName);
          }
        }
 else {
          testClassNames.add(fileResourceName);
        }
      }
    }
  }
);
  if (scanForTestClasses) {
    return testFramework.getTestClassNames();
  }
 else {
    return testClassNames;
  }
}
