{
  PrintWriter out=new PrintWriter(output);
  List<PerformanceResults> sortedResults=Lists.reverse(testHistory.getPerformanceResults());
  out.println("{");
  out.println("\"labels\": [");
  for (int i=0; i < sortedResults.size(); i++) {
    PerformanceResults results=sortedResults.get(i);
    if (i > 0) {
      out.print(", ");
    }
    out.print("\"" + format.date(new Date(results.getTestTime())) + "\"");
  }
  out.println("],");
  out.print("\"totalTime\":");
  render(testHistory,new Transformer<String,MeasuredOperationList>(){
    public String transform(    MeasuredOperationList original){
      return format.seconds(original.getTotalTime().getAverage());
    }
  }
,out);
  out.println(",");
  out.print("\"heapUsage\":");
  render(testHistory,new Transformer<String,MeasuredOperationList>(){
    public String transform(    MeasuredOperationList original){
      return format.megabytes(original.getTotalMemoryUsed().getAverage());
    }
  }
,out);
  out.println("}");
  out.flush();
}
