{
  if (usedBy.isEmpty()) {
    throw new IllegalStateException("Cannot release already released classloader: " + classLoader);
  }
  if (usedBy.remove(loaderId)) {
    if (usedBy.isEmpty()) {
      if (parent != null) {
        parent.release(loaderId);
      }
      bySpec.remove(spec);
      LOGGER.debug("Closing classloader for {} since it is now unused.",loaderId);
      close();
    }
  }
 else {
    throw new IllegalStateException("Classloader '" + this + "' not used by '"+ loaderId+ "'");
  }
}
