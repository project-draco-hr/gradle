{
  CachedClassLoader cachedLoader=bySpec.get(spec);
  if (cachedLoader == null) {
    ClassLoader classLoader;
    CachedClassLoader parentCachedLoader=null;
    HashCode classPathHash=spec.classPathSnapshot.getStrongHash();
    if (spec.isFiltered()) {
      parentCachedLoader=getAndRetainLoader(classPath,spec.unfiltered(),id);
      classLoader=new HashedFilteringClassLoader(parentCachedLoader,spec,spec.filterSpec.calculateHash(classPathHash));
    }
 else {
      classLoader=new HashedVisitableURLClassLoader(spec,classPath,classPathHash);
    }
    cachedLoader=new CachedClassLoader(classLoader,spec,parentCachedLoader);
    bySpec.put(spec,cachedLoader);
  }
  return cachedLoader.retain(id);
}
