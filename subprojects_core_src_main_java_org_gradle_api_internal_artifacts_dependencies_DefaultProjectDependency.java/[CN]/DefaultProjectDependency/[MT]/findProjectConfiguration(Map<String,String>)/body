{
  Configuration selectedConfiguration=null;
  ConfigurationContainer dependencyConfigurations=getDependencyProject().getConfigurations();
  String declaredConfiguration=getTargetConfiguration().orNull();
  if (declaredConfiguration == null && clientAttributes != null && !clientAttributes.isEmpty()) {
    List<Configuration> candidateConfigurations=new ArrayList<Configuration>(1);
    for (    Configuration dependencyConfiguration : dependencyConfigurations) {
      if (dependencyConfiguration.hasAttributes()) {
        Map<String,String> attributes=dependencyConfiguration.getAttributes();
        if (attributes.entrySet().containsAll(clientAttributes.entrySet())) {
          candidateConfigurations.add(dependencyConfiguration);
        }
      }
    }
    if (candidateConfigurations.size() == 1) {
      selectedConfiguration=candidateConfigurations.get(0);
    }
 else     if (!candidateConfigurations.isEmpty()) {
      throw new IllegalArgumentException("Cannot choose between the following configurations: " + Sets.newTreeSet(Lists.transform(candidateConfigurations,CONFIG_NAME)) + ". All of then match the client attributes "+ clientAttributes);
    }
  }
  if (selectedConfiguration == null) {
    selectedConfiguration=dependencyConfigurations.getByName(GUtil.elvis(declaredConfiguration,Dependency.DEFAULT_CONFIGURATION));
  }
  return selectedConfiguration;
}
