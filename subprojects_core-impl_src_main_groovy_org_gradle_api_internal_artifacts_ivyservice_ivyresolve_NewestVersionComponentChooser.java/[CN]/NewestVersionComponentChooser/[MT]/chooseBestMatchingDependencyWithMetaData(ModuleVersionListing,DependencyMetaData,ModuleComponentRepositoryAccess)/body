{
  for (  Versioned candidate : sortLatestFirst(versions)) {
    MutableModuleVersionMetaData metaData=resolveComponentMetaData(dependency,candidate,moduleAccess);
    ModuleComponentIdentifier candidateIdentifier=metaData.getComponentId();
    ComponentSelectionInternal selection=new DefaultComponentSelection(dependency,candidateIdentifier);
    versionSelectionRules.apply(selection,moduleAccess);
switch (selection.getState()) {
case ACCEPTED:
      return candidateIdentifier;
case REJECTED:
    continue;
default :
  break;
}
if (versionMatcher.accept(dependency.getRequested().getVersion(),metaData)) {
return candidateIdentifier;
}
}
return null;
}
