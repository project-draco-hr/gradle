{
  ModuleVersionSelector requested=dependency.getRequested();
  for (  Versioned candidate : sortLatestFirst(versions)) {
    MutableModuleVersionMetaData metaData=resolveComponentMetaData(dependency,candidate,moduleAccess);
    ModuleComponentIdentifier candidateIdentifier=metaData.getComponentId();
    if (!versionMatcher.accept(requested.getVersion(),metaData)) {
      continue;
    }
    ComponentSelectionInternal selection=new DefaultComponentSelection(dependency,candidateIdentifier);
    versionSelectionRules.apply(selection,moduleAccess);
    if (selection.isRejected()) {
      continue;
    }
    return candidateIdentifier;
  }
  return null;
}
