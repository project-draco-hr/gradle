{
  if (getWorker() == null) {
    throw new IllegalStateException("No worker action specified for this worker process.");
  }
  final DefaultWorkerProcess workerProcess=new DefaultWorkerProcess(120,TimeUnit.SECONDS);
  ConnectionAcceptor acceptor=server.accept(new Action<ObjectConnectionCompletion>(){
    public void execute(    ObjectConnectionCompletion completion){
      workerProcess.onConnect(completion.create());
    }
  }
);
  workerProcess.startAccepting(acceptor);
  Address localAddress=acceptor.getAddress();
  List<URL> implementationClassPath=ClasspathUtil.getClasspath(getWorker().getClass().getClassLoader());
  Object id=idGenerator.generateId();
  String displayName=String.format("Gradle Worker %s",id);
  WorkerFactory workerFactory;
  if (isLoadApplicationInSystemClassLoader()) {
    workerFactory=new ApplicationClassesInSystemClassLoaderWorkerFactory(id,displayName,this,implementationClassPath,localAddress,classPathRegistry);
  }
 else {
    workerFactory=new ApplicationClassesInIsolatedClassLoaderWorkerFactory(id,displayName,this,implementationClassPath,localAddress,classPathRegistry);
  }
  LOGGER.debug("Creating {}",displayName);
  LOGGER.debug("Using application classpath {}",getApplicationClasspath());
  LOGGER.debug("Using implementation classpath {}",implementationClassPath);
  JavaExecHandleBuilder javaCommand=getJavaCommand();
  attachStdInContent(workerFactory,javaCommand);
  workerFactory.prepareJavaCommand(javaCommand);
  javaCommand.setDisplayName(displayName);
  ExecHandle execHandle=javaCommand.build();
  workerProcess.setExecHandle(execHandle);
  return workerProcess;
}
