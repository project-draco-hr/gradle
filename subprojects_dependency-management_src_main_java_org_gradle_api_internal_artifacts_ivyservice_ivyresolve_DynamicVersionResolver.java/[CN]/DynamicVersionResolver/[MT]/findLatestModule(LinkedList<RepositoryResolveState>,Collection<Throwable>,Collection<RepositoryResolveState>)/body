{
  RepositoryChainModuleResolution best=null;
  while (!queue.isEmpty()) {
    RepositoryResolveState request=queue.removeFirst();
    try {
      request.resolve();
    }
 catch (    Throwable t) {
      failures.add(t);
      continue;
    }
switch (request.resolveResult.getState()) {
case Failed:
      failures.add(request.resolveResult.getFailure());
    break;
case Missing:
case Unknown:
  if (request.canMakeFurtherAttempts()) {
    missing.add(request);
  }
break;
case Resolved:
RepositoryChainModuleResolution moduleResolution=new RepositoryChainModuleResolution(request.repository,request.resolveResult.getMetaData());
best=chooseBest(best,moduleResolution);
break;
default :
throw new IllegalStateException("Unexpected state for resolution: " + request.resolveResult.getState());
}
}
return best;
}
