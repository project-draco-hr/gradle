{
  final AtomicBoolean shouldExtract=new AtomicBoolean();
  classReader.accept(new ClassVisitor(Opcodes.ASM5){
    @Override public void visit(    int version,    int access,    String name,    String signature,    String superName,    String[] interfaces){
      String className=AsmUtils.convertInternalNameToClassName(name);
      shouldExtract.set(memberOfApiChecker.belongsToApi(className) && ApiMemberExtractor.isApiMember(access,hasDeclaredApi) && !AIC_LOCAL_CLASS_PATTERN.matcher(name).matches());
    }
  }
,ClassReader.SKIP_CODE | ClassReader.SKIP_FRAMES | ClassReader.SKIP_DEBUG);
  return shouldExtract.get();
}
