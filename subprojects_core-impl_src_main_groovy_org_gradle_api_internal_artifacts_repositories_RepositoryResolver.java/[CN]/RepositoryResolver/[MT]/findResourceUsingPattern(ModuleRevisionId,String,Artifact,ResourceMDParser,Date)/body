{
  String name=getName();
  VersionMatcher versionMatcher=getSettings().getVersionMatcher();
  try {
    if (!versionMatcher.isDynamic(mrid)) {
      String resourceName=IvyPatternHelper.substitute(pattern,mrid,artifact);
      Message.debug("\t trying " + resourceName);
      logAttempt(resourceName);
      Resource res=repository.getResource(resourceName);
      boolean reachable=res.exists();
      if (reachable) {
        String revision;
        if (pattern.indexOf(IvyPatternHelper.REVISION_KEY) == -1) {
          if ("ivy".equals(artifact.getType()) || "pom".equals(artifact.getType())) {
            File temp=File.createTempFile("ivy",artifact.getExt());
            temp.deleteOnExit();
            repository.get(res.getName(),temp);
            ModuleDescriptorParser parser=ModuleDescriptorParserRegistry.getInstance().getParser(res);
            ModuleDescriptor md=parser.parseDescriptor(getParserSettings(),temp.toURI().toURL(),res,false);
            revision=md.getRevision();
            if ((revision == null) || (revision.length() == 0)) {
              revision="working@" + name;
            }
          }
 else {
            revision="working@" + name;
          }
        }
 else {
          revision=mrid.getRevision();
        }
        return new ResolvedResource(res,revision);
      }
 else       if (versionMatcher.isDynamic(mrid)) {
        return findDynamicResourceUsingPattern(rmdparser,mrid,pattern,artifact,date);
      }
 else {
        Message.debug("\t" + name + ": resource not reachable for "+ mrid+ ": res="+ res);
        return null;
      }
    }
 else {
      return findDynamicResourceUsingPattern(rmdparser,mrid,pattern,artifact,date);
    }
  }
 catch (  IOException ex) {
    throw new RuntimeException(name + ": unable to get resource for " + mrid+ ": res="+ IvyPatternHelper.substitute(pattern,mrid,artifact)+ ": "+ ex,ex);
  }
catch (  ParseException ex) {
    throw new RuntimeException(name + ": unable to get resource for " + mrid+ ": res="+ IvyPatternHelper.substitute(pattern,mrid,artifact)+ ": "+ ex,ex);
  }
}
