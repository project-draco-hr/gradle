{
  final ModuleDescriptorConverter moduleDescriptorConverterMock=context.mock(ModuleDescriptorConverter.class);
  final ModuleDescriptor testModuleDescriptor=context.mock(ModuleDescriptor.class);
  context.checking(new Expectations(){
{
      allowing(ivyServiceMock).getModuleDescriptorConverter();
      will(returnValue(moduleDescriptorConverterMock));
      allowing(moduleDescriptorConverterMock).convert(new HashMap<String,Boolean>(),configurationContainerMock,HelperUtil.TEST_SEPC,dependencyContainerMock,HelperUtil.TEST_SEPC,artifactContainerMock,HelperUtil.TEST_SEPC);
      will(returnValue(testModuleDescriptor));
    }
  }
);
  assertThat(getDependencyManager().createModuleDescriptor(HelperUtil.TEST_SEPC,HelperUtil.TEST_SEPC,HelperUtil.TEST_SEPC),sameInstance(testModuleDescriptor));
}
