{
  if (source instanceof NonExistentFileScriptSource) {
    return emptyCompiledScript(classLoaderId,operation);
  }
  String hash=hashFor(source);
  Map<String,Object> properties=createCacheProperties(source,hash);
  String dslId=operation.getId();
  String cacheKey=operation.getCacheKey();
  String cacheName=String.format("scripts/%s/%s",hash,cacheKey);
  RemappingScriptSource remapped=new RemappingScriptSource(source);
  PersistentCache cache=cacheRepository.cache(cacheName).withProperties(properties).withValidator(validator).withDisplayName(String.format("%s class cache for %s",dslId,source.getDisplayName())).withInitializer(new ProgressReportingInitializer(progressLoggerFactory,new CacheInitializer(remapped,classLoader,operation,verifier,scriptBaseClass))).open();
  try {
    final File classesDir=classesDir(cache);
    final File metadataDir=metadataDir(cache);
    return scriptCompilationHandler.loadFromDir(remapped,classLoader,classesDir,metadataDir,operation,scriptBaseClass,classLoaderId);
  }
  finally {
    cache.close();
  }
}
