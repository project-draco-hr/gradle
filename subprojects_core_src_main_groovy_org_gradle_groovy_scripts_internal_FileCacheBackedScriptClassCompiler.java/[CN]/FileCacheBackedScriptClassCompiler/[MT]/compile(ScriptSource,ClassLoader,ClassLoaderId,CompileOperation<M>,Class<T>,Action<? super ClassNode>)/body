{
  Map<String,Object> properties=new HashMap<String,Object>();
  properties.put("source.filename",source.getFileName());
  properties.put("source.hash",HashUtil.createCompactMD5(source.getResource().getText()));
  String transformerId=operation.getId();
  String cacheName=String.format("scripts/%s/%s/%s",source.getClassName(),scriptBaseClass.getSimpleName(),transformerId);
  PersistentCache cache=cacheRepository.cache(cacheName).withProperties(properties).withValidator(validator).withDisplayName(String.format("%s class cache for %s",transformerId,source.getDisplayName())).withInitializer(new ProgressReportingInitializer(progressLoggerFactory,new CacheInitializer(source,classLoader,operation,verifier,scriptBaseClass))).open();
  caches.add(cache);
  final File classesDir=classesDir(cache);
  final File metadataDir=metadataDir(cache);
  return scriptCompilationHandler.loadFromDir(source,classLoader,classesDir,metadataDir,operation,scriptBaseClass,classLoaderId);
}
