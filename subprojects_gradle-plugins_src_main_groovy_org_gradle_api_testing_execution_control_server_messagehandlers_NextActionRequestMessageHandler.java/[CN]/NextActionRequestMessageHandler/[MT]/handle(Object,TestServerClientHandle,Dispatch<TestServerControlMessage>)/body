{
  final NextActionRequestMessage message=(NextActionRequestMessage)controlMessage;
  final int forkId=message.getForkId();
  final int pipelineId=pipeline.getId();
  if (pipelineDispatcher.isStopping()) {
    stopClient(pipelineId,clientConnection);
  }
 else {
    final TestClassProcessResult previousProcesTestResult=message.getPreviousProcessedTestResult();
    processPreviousTestResult(forkId,previousProcesTestResult);
    if (isReforkNeeded(message)) {
      restartClient(pipelineId,client,clientConnection);
    }
 else {
      final TestClassRunInfo nextTest=client.nextTest(pipelineDispatcher);
      if (nextTest == null) {
        clientConnection.dispatch(new WaitActionMesssage(pipelineId,1000));
      }
 else {
        clientConnection.dispatch(new ExecuteTestActionMessage(pipelineId,nextTest));
      }
    }
  }
}
