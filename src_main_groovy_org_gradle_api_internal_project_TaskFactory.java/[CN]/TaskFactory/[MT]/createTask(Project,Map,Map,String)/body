{
  if (!GUtil.isTrue(name)) {
    throw new InvalidUserDataException("The name of the task must be set!");
  }
  checkTaskArgsAndCreateDefaultValues(args);
  if (!Boolean.valueOf(args.get(Task.TASK_OVERWRITE).toString()) && tasksMap.get(name) != null) {
    throw new InvalidUserDataException(String.format("Cannot create task with name '%s' as a task with that name already exists.",name));
  }
  Task task=createTaskObject(project,(Class)args.get(Task.TASK_TYPE),name);
  Object dependsOnTasks=args.get(Task.TASK_DEPENDS_ON);
  task.dependsOn(dependsOnTasks);
  Object description=args.get(Task.TASK_DESCRIPTION);
  if (description != null) {
    task.setDescription(description.toString());
  }
  return task;
}
