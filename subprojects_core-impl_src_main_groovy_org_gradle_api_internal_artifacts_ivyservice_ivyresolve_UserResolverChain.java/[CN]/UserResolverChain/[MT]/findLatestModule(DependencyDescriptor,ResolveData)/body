{
  List<RuntimeException> errors=new ArrayList<RuntimeException>();
  boolean isStaticVersion=!settings.getVersionMatcher().isDynamic(dependencyDescriptor.getDependencyRevisionId());
  ModuleResolution best=null;
  for (  ModuleVersionRepository repository : moduleVersionRepositories) {
    try {
      ModuleVersionDescriptor module=repository.getDependency(dependencyDescriptor,resolveData);
      if (module != null) {
        ModuleResolution moduleResolution=new ModuleResolution(repository,module);
        if (isStaticVersion && !moduleResolution.isGeneratedModuleDescriptor()) {
          return moduleResolution;
        }
        best=chooseBest(best,moduleResolution);
      }
    }
 catch (    RuntimeException e) {
      errors.add(e);
    }
  }
  if (best == null && !errors.isEmpty()) {
    throwResolutionFailure(errors);
  }
  return best;
}
