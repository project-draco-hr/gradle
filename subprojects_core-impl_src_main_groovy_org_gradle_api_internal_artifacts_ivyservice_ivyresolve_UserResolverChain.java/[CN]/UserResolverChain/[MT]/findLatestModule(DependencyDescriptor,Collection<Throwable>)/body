{
  boolean isStaticVersion=!settings.getVersionMatcher().isDynamic(dependencyDescriptor.getDependencyRevisionId());
  ModuleResolution best=null;
  for (  ModuleVersionRepository repository : moduleVersionRepositories) {
    BuildableModuleVersionDescriptor module=new DefaultBuildableModuleVersionDescriptor();
    try {
      repository.getDependency(dependencyDescriptor,module);
    }
 catch (    Throwable e) {
      failures.add(e);
    }
switch (module.getState()) {
case Missing:
case Unknown:
      break;
case Resolved:
    ModuleResolution moduleResolution=new ModuleResolution(repository,module);
  if (isStaticVersion && !moduleResolution.isGeneratedModuleDescriptor()) {
    return moduleResolution;
  }
best=chooseBest(best,moduleResolution);
break;
case Failed:
failures.add(module.getFailure());
break;
default :
throw new IllegalStateException("Unexpected state for resolution: " + module.getState());
}
}
return best;
}
