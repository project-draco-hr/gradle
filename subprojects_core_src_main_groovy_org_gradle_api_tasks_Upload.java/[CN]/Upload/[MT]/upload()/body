{
  getLogger().info("Publishing configuration: " + configuration);
  Module module=((ConfigurationInternal)configuration).getModule();
  Set<Configuration> configurationsToPublish=configuration.getHierarchy();
  ArtifactPublisher artifactPublisher=publicationServices.createArtifactPublisher();
  try {
    File descriptorDestination=isUploadDescriptor() ? getDescriptorDestination() : null;
    if (descriptorDestination != null) {
      Set<Configuration> allConfigurations=configurationsToPublish.iterator().next().getAll();
      ModuleDescriptorConverter moduleDescriptorConverter=publicationServices.getDescriptorFileModuleConverter();
      ModuleDescriptor moduleDescriptor=moduleDescriptorConverter.convert(allConfigurations,module);
      IvyModuleDescriptorWriter ivyModuleDescriptorWriter=publicationServices.getIvyModuleDescriptorWriter();
      ivyModuleDescriptorWriter.write(moduleDescriptor,descriptorDestination);
    }
    List<DependencyResolver> resolvers=collect(repositories,new Transformer<DependencyResolver,ArtifactRepository>(){
      public DependencyResolver transform(      ArtifactRepository repository){
        return cast(ArtifactRepositoryInternal.class,repository).createResolver();
      }
    }
);
    artifactPublisher.publish(resolvers,module,configurationsToPublish,descriptorDestination);
  }
 catch (  Exception e) {
    throw new PublishException(String.format("Could not publish configuration '%s'",configuration.getName()),e);
  }
}
