{
  SettingsConverter settingsConverterMock=context.mock(SettingsConverter.class);
  ModuleDescriptorConverter moduleDescriptorConverterMock=context.mock(ModuleDescriptorConverter.class);
  IvyDependencyResolver ivyDependencyResolverMock=context.mock(IvyDependencyResolver.class);
  context.checking(new Expectations(){
{
      allowing(dependencyMetaDataProviderMock).getInternalRepository();
      will(returnValue(internalRepositoryDummy));
      allowing(dependencyMetaDataProviderMock).getGradleUserHomeDir();
      will(returnValue(cacheParentDirDummy));
      allowing(dependencyMetaDataProviderMock).getModule();
      will(returnValue(moduleDummy));
      allowing(resolverProvider).getResolvers();
      will(returnValue(dependencyResolversDummy));
    }
  }
);
  ivyService=new DefaultIvyService(dependencyMetaDataProviderMock,resolverProvider,moduleDescriptorConverterMock,clientModuleRegistryDummy);
  ivyService.setSettingsConverter(settingsConverterMock);
  ivyService.setDependencyResolver(ivyDependencyResolverMock);
}
