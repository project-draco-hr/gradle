{
  final List<CommandLineOptionDescriptor> commandLineOptions=commandLineOptionReader.getCommandLineOptions(clazz);
  if (!commandLineOptions.isEmpty()) {
    output.println();
    output.text("Options").println();
  }
  final Iterator<CommandLineOptionDescriptor> optionsIterator=commandLineOptions.iterator();
  while (optionsIterator.hasNext()) {
    final CommandLineOptionDescriptor descriptor=optionsIterator.next();
    final String optionString=String.format("--%s",descriptor.getOption().options()[0]);
    output.text(INDENT).withStyle(UserInput).text(optionString);
    output.text(INDENT).println(descriptor.getOption().description());
    final Class availableValuesType=descriptor.getArgumentType();
    if (availableValuesType.isEnum()) {
      final Object[] enumConstants=availableValuesType.getEnumConstants();
      indentForOptionDescription(output,optionString);
      output.text("Takes an enum value of type (").withStyle(UserInput).text(availableValuesType.getName()).println(").");
      indentForOptionDescription(output,optionString);
      output.println("Available values are:");
      for (      Object enumConstant : enumConstants) {
        indentForOptionDescription(output,optionString);
        output.text(INDENT);
        output.withStyle(UserInput).println(enumConstant);
      }
    }
    if (optionsIterator.hasNext()) {
      output.println();
    }
  }
}
