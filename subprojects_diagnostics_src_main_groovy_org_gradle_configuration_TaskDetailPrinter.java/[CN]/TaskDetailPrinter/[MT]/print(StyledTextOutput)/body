{
  final List<Task> tasks=CollectionUtils.sort(selection.getTasks(),new Comparator<Task>(){
    public int compare(    Task o1,    Task o2){
      return o1.getPath().compareTo(o2.getPath());
    }
  }
);
  output.text("Detailed task information for ").withStyle(UserInput).println(taskPath);
  final Map<Class,List<Task>> classListMap=groupTasksByType(tasks);
  final List<Map.Entry<Class,List<Task>>> entries=CollectionUtils.sort(classListMap.entrySet(),new Comparator<Map.Entry<Class,List<Task>>>(){
    public int compare(    Map.Entry<Class,List<Task>> o1,    Map.Entry<Class,List<Task>> o2){
      return o1.getKey().getSimpleName().compareTo(o2.getKey().getSimpleName());
    }
  }
);
  for (  Map.Entry<Class,List<Task>> entry : entries) {
    output.println();
    final List<Task> tasksByType=entry.getValue();
    final Class clazz=entry.getKey();
    output.text(tasksByType.size() > 1 ? "Paths" : "Path").println();
    for (    Task task : tasksByType) {
      output.text(INDENT).withStyle(UserInput).println(task.getPath());
    }
    output.println();
    output.text("Type").println();
    output.text(INDENT).withStyle(UserInput).text(clazz.getSimpleName());
    output.println(" (" + clazz + ")");
    output.println();
    printTaskDescription(output,tasksByType);
    output.println();
    if (classListMap.size() > 1) {
      output.println("----------------------");
    }
  }
}
