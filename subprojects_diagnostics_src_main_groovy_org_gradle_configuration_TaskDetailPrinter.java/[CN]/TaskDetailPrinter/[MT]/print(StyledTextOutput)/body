{
  final List<Task> tasks=CollectionUtils.sort(selection.getTasks());
  output.text("Detailed task information for ").withStyle(UserInput).println(taskPath);
  final ListMultimap<Class,Task> classListMap=groupTasksByType(tasks);
  final Set<Class> classes=classListMap.keySet();
  boolean multipleClasses=classes.size() > 1;
  final List<Class> sortedClasses=CollectionUtils.sort(classes,new Comparator<Class>(){
    public int compare(    Class o1,    Class o2){
      return o1.getSimpleName().compareTo(o2.getSimpleName());
    }
  }
);
  for (  Class clazz : sortedClasses) {
    output.println();
    final List<Task> tasksByType=classListMap.get(clazz);
    output.text(tasksByType.size() > 1 ? "Paths" : "Path").println();
    for (    Task task : tasksByType) {
      output.text(INDENT).withStyle(UserInput).println(task.getPath());
    }
    output.println();
    output.text("Type").println();
    output.text(INDENT).withStyle(UserInput).text(clazz.getSimpleName());
    output.println(String.format(" (%s)",clazz.getName()));
    printlnCommandlineOptions(output,clazz);
    output.println();
    printTaskDescription(output,tasksByType);
    output.println();
    if (multipleClasses) {
      output.println("----------------------");
    }
  }
}
