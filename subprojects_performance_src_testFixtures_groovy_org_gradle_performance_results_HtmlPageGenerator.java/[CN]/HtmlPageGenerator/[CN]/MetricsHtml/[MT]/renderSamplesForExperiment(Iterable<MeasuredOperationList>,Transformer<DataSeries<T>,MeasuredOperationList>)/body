{
  List<DataSeries<T>> values=new ArrayList<DataSeries<T>>();
  Amount<T> min=null;
  Amount<T> max=null;
  for (  MeasuredOperationList testExecution : experiments) {
    DataSeries<T> data=transformer.transform(testExecution);
    if (data.isEmpty()) {
      values.add(null);
    }
 else {
      Amount<T> value=data.getAverage();
      values.add(data);
      if (min == null || value.compareTo(min) < 0) {
        min=value;
      }
      if (max == null || value.compareTo(max) > 0) {
        max=value;
      }
    }
  }
  if (min != null && min.equals(max)) {
    min=null;
    max=null;
  }
  for (  DataSeries<T> data : values) {
    if (data == null) {
      td().text("").end();
      td().text("").end();
    }
 else {
      Amount<T> value=data.getAverage();
      Amount<T> stddev=data.getStddev();
      String classAttr="numeric";
      if (value.equals(min)) {
        classAttr+=" min-value";
      }
      if (value.equals(max)) {
        classAttr+=" max-value";
      }
      td().classAttr(classAttr).title("avg: " + value + ", min: "+ data.getMin()+ ", max: "+ data.getMax()+ ", stddev: "+ stddev+ ", values: "+ data).text(value.format()).end();
      td().classAttr("numeric more-detail").text("s: " + stddev.format()).end();
    }
  }
}
