{
  this.interaction=interaction;
  this.allowsClickingFiles=allowsClickingFiles;
  this.font=font;
  document=new DefaultStyledDocument();
  textPane=new TextPane(document);
  textPane.setEditable(false);
  textPane.setAutoscrolls(false);
  scroll=new JScrollPane(textPane);
  scroll.setAutoscrolls(false);
  scroll.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
  scroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
  DefaultCaret caret=new DefaultCaret();
  caret.setUpdatePolicy(DefaultCaret.NEVER_UPDATE);
  textPane.setCaret(caret);
  Color background=Color.white;
  textPane.setBackground(background);
  scroll.setBackground(background);
  scroll.getViewport().setBackground(background);
  resetFontStyles();
  textPane.addMouseListener(new MouseAdapter(){
    /** 
 * {@inheritDoc}
 */
    @Override public void mouseClicked(    MouseEvent e){
      handleClick(e.getButton() == MouseEvent.BUTTON3,e.getPoint());
    }
    @Override public void mouseReleased(    MouseEvent e){
      if (e.getButton() == MouseEvent.BUTTON3) {
        showPopup(e.getPoint());
      }
    }
  }
);
  textPane.addKeyListener(new KeyAdapter(){
    @Override public void keyPressed(    KeyEvent e){
      handleKeyPress(e.getKeyCode());
    }
  }
);
  liveOutputParser=new LiveOutputParser(fileLinkDefinitionLord,true);
}
