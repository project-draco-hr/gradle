{
  final ConventionAwareRepositoryHandler repositoryHandlerMock=context.mock(ConventionAwareRepositoryHandler.class);
  final ConventionMapping conventionMappingMock=context.mock(ConventionMapping.class);
  context.checking(new Expectations(){
{
      one(classGeneratorMock).newInstance(ConfigurableRepositoryHandler.class,repositoryFactoryMock);
      will(returnValue(repositoryHandlerMock));
      allowing(repositoryHandlerMock).getConventionMapping();
      will(returnValue(conventionMappingMock));
      one(conventionMappingMock).setConvention(convention);
    }
  }
);
  DefaultRepositoryHandlerFactory repositoryHandlerFactory=new DefaultRepositoryHandlerFactory(repositoryFactoryMock,classGeneratorMock);
  DefaultRepositoryHandler repositoryHandler=repositoryHandlerFactory.createRepositoryHandler(convention);
  assertThat(repositoryHandler,sameInstance((Object)repositoryHandlerMock));
}
