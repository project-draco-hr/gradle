{
  project.getTasks().withType(ScalaDoc.class).allTasks(new Action<ScalaDoc>(){
    public void execute(    ScalaDoc scalaDoc){
      scalaDoc.setClasspath(project.getConfigurations().getByName(COMPILE_CONFIGURATION_NAME));
      scalaDoc.setDescription("Generates scala doc.");
      scalaDoc.conventionMapping("scalaSrcDirs",new ConventionValue(){
        public Object getValue(        Convention convention,        IConventionAware conventionAwareObject){
          return scala(convention).getScalaSrcDirs();
        }
      }
);
      scalaDoc.conventionMapping("destinationDir",new ConventionValue(){
        public Object getValue(        Convention convention,        IConventionAware conventionAwareObject){
          return scala(convention).getScalaDocDir();
        }
      }
);
      scalaDoc.dependsOn(WrapUtil.toSet(SCALA_DEFINE_TASK_NAME));
    }
  }
);
  project.getTasks().add(SCALA_DOC_TASK_NAME,ScalaDoc.class).setDescription("Generates scaladoc for the source code.");
}
