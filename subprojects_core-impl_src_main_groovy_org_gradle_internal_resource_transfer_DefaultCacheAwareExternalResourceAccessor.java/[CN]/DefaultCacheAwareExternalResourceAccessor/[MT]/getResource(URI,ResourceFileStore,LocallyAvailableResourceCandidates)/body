{
  LOGGER.debug("Constructing external resource: {}",location);
  CachedExternalResource cached=cachedExternalResourceIndex.lookup(location.toString());
  if (cached == null && (localCandidates == null || localCandidates.isNone())) {
    return copyToCache(location,fileStore,delegate.getResource(location));
  }
  if (cached != null && !externalResourceCachePolicy.mustRefreshExternalResource(getAgeMillis(timeProvider,cached))) {
    return new DefaultLocallyAvailableExternalResource(location,new DefaultLocallyAvailableResource(cached.getCachedFile()),cached.getExternalResourceMetaData());
  }
  final ExternalResourceMetaData remoteMetaData=delegate.getMetaData(location);
  if (remoteMetaData == null) {
    return null;
  }
  if (cached != null) {
    boolean isUnchanged=ExternalResourceMetaDataCompare.isDefinitelyUnchanged(cached.getExternalResourceMetaData(),new Factory<ExternalResourceMetaData>(){
      public ExternalResourceMetaData create(){
        return remoteMetaData;
      }
    }
);
    if (isUnchanged) {
      LOGGER.info("Cached resource is up-to-date (lastModified: {}). [HTTP: {}]",cached.getExternalLastModified(),location);
      return new DefaultLocallyAvailableExternalResource(location,new DefaultLocallyAvailableResource(cached.getCachedFile()),cached.getExternalResourceMetaData());
    }
  }
  boolean hasLocalCandidates=localCandidates != null && !localCandidates.isNone();
  if (hasLocalCandidates) {
    HashValue remoteChecksum=remoteMetaData.getSha1();
    if (remoteChecksum == null) {
      remoteChecksum=delegate.getResourceSha1(location);
    }
    if (remoteChecksum != null) {
      LocallyAvailableResource local=localCandidates.findByHashValue(remoteChecksum);
      if (local != null) {
        LOGGER.info("Found locally available resource with matching checksum: [{}, {}]",location,local.getFile());
        return copyToCache(location,fileStore,new CachedExternalResourceAdapter(location,local,delegate,remoteMetaData,remoteChecksum));
      }
    }
  }
  return copyToCache(location,fileStore,delegate.getResource(location));
}
