{
  List<Field> declaredFields=Arrays.asList(typeClass.getDeclaredFields());
  Iterable<Field> instanceScopedFields=Iterables.filter(declaredFields,new Predicate<Field>(){
    public boolean apply(    Field field){
      return !Modifier.isStatic(field.getModifiers()) && !field.getName().equals("metaClass");
    }
  }
);
  ImmutableSortedSet<String> sortedDescriptions=ImmutableSortedSet.copyOf(Iterables.transform(instanceScopedFields,new Function<Field,String>(){
    public String apply(    Field field){
      return field.toString();
    }
  }
));
  if (!sortedDescriptions.isEmpty()) {
    throw new InvalidManagedModelElementTypeException(extractionContext,"instance scoped fields are not allowed (found fields: " + Joiner.on(", ").join(sortedDescriptions) + ").");
  }
}
