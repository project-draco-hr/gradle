{
  project.getTasks().withType(AbstractTestTask.class).allTasks(new Action<AbstractTestTask>(){
    public void execute(    AbstractTestTask test){
      test.getConventionMapping().map(GUtil.map("testClassesDir",new ConventionValue(){
        public Object getValue(        Convention convention,        IConventionAware conventionAwareObject){
          return convention.getPlugin(JavaPluginConvention.class).getSourceSets().getByName(SourceSet.TEST_SOURCE_SET_NAME).getClassesDir();
        }
      }
,"classpath",new ConventionValue(){
        public Object getValue(        Convention convention,        IConventionAware conventionAwareObject){
          return convention.getPlugin(JavaPluginConvention.class).getSourceSets().getByName(SourceSet.TEST_SOURCE_SET_NAME).getRuntimeClasspath();
        }
      }
,"testResultsDir",new ConventionValue(){
        public Object getValue(        Convention convention,        IConventionAware conventionAwareObject){
          return convention.getPlugin(JavaPluginConvention.class).getTestResultsDir();
        }
      }
,"testReportDir",new ConventionValue(){
        public Object getValue(        Convention convention,        IConventionAware conventionAwareObject){
          return convention.getPlugin(JavaPluginConvention.class).getTestReportDir();
        }
      }
,"testSrcDirs",new ConventionValue(){
        public Object getValue(        Convention convention,        IConventionAware conventionAwareObject){
          Set<File> srcDirs=convention.getPlugin(JavaPluginConvention.class).getSourceSets().getByName(SourceSet.TEST_SOURCE_SET_NAME).getJava().getSrcDirs();
          return new ArrayList<File>(srcDirs);
        }
      }
));
    }
  }
);
  project.getTasks().withType(AntTest.class).allTasks(new Action<AntTest>(){
    public void execute(    AntTest test){
      test.workingDir(project.getProjectDir());
    }
  }
);
  project.getTasks().add(TEST_TASK_NAME,AntTest.class).setDescription("Runs the unit tests.");
}
