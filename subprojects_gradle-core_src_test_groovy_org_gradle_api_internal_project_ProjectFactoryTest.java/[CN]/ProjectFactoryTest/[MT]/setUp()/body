{
  context.checking(new Expectations(){
{
      allowing(repositoryHandlerFactory).createRepositoryHandler(with(any(Convention.class)));
      will(returnValue(repositoryHandler));
    }
  }
);
  context.checking(new Expectations(){
{
      allowing(gradle).getStartParameter();
      will(returnValue(startParameterStub));
      allowing(configurationContainerFactory).createConfigurationContainer(with(any(ResolverProvider.class)),with(any(DependencyMetaDataProvider.class)));
      allowing(gradle).getProjectRegistry();
      will(returnValue(projectRegistry));
      allowing(gradle).getPluginRegistry();
      will(returnValue(pluginRegistry));
      allowing(gradle).getBuildScriptClassLoader();
      will(returnValue(buildScriptClassLoader));
      allowing(gradle).getGradleUserHomeDir();
      will(returnValue(new File("gradleUserHomeDir")));
    }
  }
);
  projectFactory=new ProjectFactory(serviceRegistryFactory,null);
}
