{
  startParameterStub.setGradleUserHomeDir(testDir.dir("home"));
  startParameterStub.setPluginPropertiesFile(new File("plugins"));
  context.checking(new Expectations(){
{
      allowing(repositoryHandlerFactory).createRepositoryHandler(with(any(Convention.class)));
      will(returnValue(repositoryHandler));
    }
  }
);
  final ServiceRegistryFactory gradleServices=serviceRegistryFactory.createFor(gradle);
  context.checking(new Expectations(){
{
      allowing(gradle).getServiceRegistryFactory();
      will(returnValue(gradleServices));
      allowing(gradle).getStartParameter();
      will(returnValue(startParameterStub));
      allowing(configurationContainerFactory).createConfigurationContainer(with(any(ResolverProvider.class)),with(any(DependencyMetaDataProvider.class)));
      allowing(gradle).getProjectRegistry();
      will(returnValue(gradleServices.get(IProjectRegistry.class)));
      allowing(gradle).getScriptClassLoader();
      will(returnValue(buildScriptClassLoader));
      allowing(gradle).getGradleUserHomeDir();
      will(returnValue(new File("gradleUserHomeDir")));
    }
  }
);
  projectFactory=new ProjectFactory(null);
}
