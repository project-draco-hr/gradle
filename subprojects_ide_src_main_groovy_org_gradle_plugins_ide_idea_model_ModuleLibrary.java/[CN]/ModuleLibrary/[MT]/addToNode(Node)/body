{
  Map<String,Object> attributes=ImmutableMap.<String,Object>builder().put("type","module-library").putAll(getAttributeMapForScopeAndExported()).build();
  Node libraryNode=parentNode.appendNode("orderEntry",attributes).appendNode("library");
  Node classesNode=libraryNode.appendNode("CLASSES");
  Node javadocNode=libraryNode.appendNode("JAVADOC");
  Node sourcesNode=libraryNode.appendNode("SOURCES");
  for (  Path path : classes) {
    classesNode.appendNode("root",ImmutableMap.of("url",path.getUrl()));
  }
  for (  Path path : javadoc) {
    javadocNode.appendNode("root",ImmutableMap.of("url",path.getUrl()));
  }
  for (  Path path : sources) {
    sourcesNode.appendNode("root",ImmutableMap.of("url",path.getUrl()));
  }
  for (  JarDirectory jarDirectory : jarDirectories) {
    ImmutableMap<String,String> jarDirectoryAttributes=ImmutableMap.of("url",jarDirectory.getPath().getUrl(),"recursive",String.valueOf(jarDirectory.getRecursive()));
    libraryNode.appendNode("jarDirectory",jarDirectoryAttributes);
  }
}
