{
  if (parent == null) {
    if (entries.size() == 0 && tailPos != 0) {
      header.index.setRootPos(tailPos);
      free(this);
    }
    return;
  }
  if (entries.size() < minIndexChildNodes) {
    IndexBlock left=parent.getPrevious(this);
    if (left != null) {
      if (left.entries.size() > minIndexChildNodes) {
        left.mergeFrom(this);
        left.maybeSplit();
      }
 else       if (left.entries.size() + entries.size() <= maxChildIndexEntries) {
        left.mergeFrom(this);
        parent.maybeMerge();
        return;
      }
    }
    IndexBlock right=parent.getNext(this);
    if (right != null) {
      if (right.entries.size() > minIndexChildNodes) {
        mergeFrom(right);
        maybeSplit();
        return;
      }
 else       if (right.entries.size() + entries.size() <= maxChildIndexEntries) {
        mergeFrom(right);
        parent.maybeMerge();
        return;
      }
    }
    throw new UnsupportedOperationException("implement me");
  }
}
