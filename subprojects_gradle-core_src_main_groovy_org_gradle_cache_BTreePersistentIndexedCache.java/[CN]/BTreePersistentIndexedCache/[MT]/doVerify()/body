{
  List<Block> blocks=new ArrayList<Block>();
  HeaderBlock header=new HeaderBlock();
  header.read();
  blocks.add(header);
  verifyTree(header.getRoot(),"",blocks,Long.MAX_VALUE);
  Collections.sort(blocks,new Comparator<Block>(){
    public int compare(    Block block,    Block block1){
      if (block.getPos() > block1.getPos()) {
        return 1;
      }
      if (block.getPos() < block1.getPos()) {
        return -1;
      }
      return 0;
    }
  }
);
  for (int i=0; i < blocks.size() - 1; i++) {
    Block b1=blocks.get(i);
    Block b2=blocks.get(i + 1);
    if (b1.getPos() + b1.getActualSize() > b2.getPos()) {
      throw new IOException(String.format("%s overlaps with %s",b1,b2));
    }
  }
}
