{
  final DependencyDescriptorFactoryInternal dependencyDescriptorFactoryInternal1=context.mock(DependencyDescriptorFactoryInternal.class,"factory1");
  final DependencyDescriptorFactoryInternal dependencyDescriptorFactoryInternal2=context.mock(DependencyDescriptorFactoryInternal.class,"factory2");
  context.checking(new Expectations(){
{
      allowing(dependencyDescriptorFactoryInternal1).canConvert(projectDependency);
      will(returnValue(false));
      allowing(dependencyDescriptorFactoryInternal2).canConvert(projectDependency);
      will(returnValue(true));
      one(dependencyDescriptorFactoryInternal2).addDependencyDescriptor(configurationName,moduleDescriptorDummy,projectDependency);
    }
  }
);
  DependencyDescriptorFactoryDelegate dependencyDescriptorFactoryDelegate=new DependencyDescriptorFactoryDelegate(dependencyDescriptorFactoryInternal1,dependencyDescriptorFactoryInternal2);
  dependencyDescriptorFactoryDelegate.addDependencyDescriptor(configurationName,moduleDescriptorDummy,projectDependency);
}
