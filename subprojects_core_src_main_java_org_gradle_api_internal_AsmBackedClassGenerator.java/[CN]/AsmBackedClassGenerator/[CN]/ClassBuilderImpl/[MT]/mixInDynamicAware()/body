{
  final String fieldSignature=ABSTRACT_DYNAMIC_OBJECT_TYPE.getDescriptor();
  visitor.visitField(Opcodes.ACC_PRIVATE,DYNAMIC_OBJECT_HELPER_FIELD,fieldSignature,null,null);
  final Method getAsDynamicObject=DynamicObjectAware.class.getDeclaredMethod("getAsDynamicObject");
  if (extensible) {
    addGetter(HasConvention.class.getDeclaredMethod("getConvention"),new MethodCodeBody(){
      public void add(      MethodVisitor visitor) throws Exception {
        visitor.visitVarInsn(Opcodes.ALOAD,0);
        visitor.visitMethodInsn(Opcodes.INVOKEVIRTUAL,generatedType.getInternalName(),"getAsDynamicObject",Type.getMethodDescriptor(getAsDynamicObject),false);
        visitor.visitTypeInsn(Opcodes.CHECKCAST,EXTENSIBLE_DYNAMIC_OBJECT_HELPER_TYPE.getInternalName());
        visitor.visitMethodInsn(Opcodes.INVOKEVIRTUAL,EXTENSIBLE_DYNAMIC_OBJECT_HELPER_TYPE.getInternalName(),"getConvention",RETURN_CONVENTION,false);
      }
    }
);
    addGetter(ExtensionAware.class.getDeclaredMethod("getExtensions"),new MethodCodeBody(){
      public void add(      MethodVisitor visitor) throws Exception {
        visitor.visitVarInsn(Opcodes.ALOAD,0);
        visitor.visitMethodInsn(Opcodes.INVOKEVIRTUAL,generatedType.getInternalName(),"getConvention",RETURN_CONVENTION,false);
      }
    }
);
  }
  addLazyGetter(getAsDynamicObject,DYNAMIC_OBJECT_HELPER_FIELD,ABSTRACT_DYNAMIC_OBJECT_TYPE,new MethodCodeBody(){
    public void add(    MethodVisitor visitor){
      generateCreateDynamicObject(visitor);
    }
  }
);
}
