{
  if (extensible) {
    String helperTypeConstructorDesc=Type.getMethodDescriptor(Type.VOID_TYPE,Type.getType(Object.class),Type.getType(Class.class),DYNAMIC_OBJECT_TYPE);
    visitor.visitTypeInsn(Opcodes.NEW,EXTENSIBLE_DYNAMIC_OBJECT_HELPER_TYPE.getInternalName());
    visitor.visitInsn(Opcodes.DUP);
    visitor.visitVarInsn(Opcodes.ALOAD,0);
    visitor.visitVarInsn(Opcodes.ALOAD,0);
    visitor.visitMethodInsn(Opcodes.INVOKEVIRTUAL,generatedType.getInternalName(),"getClass",Type.getMethodDescriptor(Type.getType(Class.class)),false);
    visitor.visitMethodInsn(Opcodes.INVOKEVIRTUAL,Type.getType(Class.class).getInternalName(),"getSuperclass",Type.getMethodDescriptor(Type.getType(Class.class)),false);
    if (providesOwnDynamicObject) {
      visitor.visitVarInsn(Opcodes.ALOAD,0);
      visitor.visitMethodInsn(Opcodes.INVOKESPECIAL,Type.getType(type).getInternalName(),"getAsDynamicObject",Type.getMethodDescriptor(DYNAMIC_OBJECT_TYPE));
    }
 else {
      visitor.visitInsn(Opcodes.ACONST_NULL);
    }
    visitor.visitMethodInsn(Opcodes.INVOKESPECIAL,EXTENSIBLE_DYNAMIC_OBJECT_HELPER_TYPE.getInternalName(),"<init>",helperTypeConstructorDesc);
  }
 else {
    String helperTypeConstructorDesc=Type.getMethodDescriptor(Type.VOID_TYPE,Type.getType(Object.class));
    visitor.visitTypeInsn(Opcodes.NEW,NON_EXTENSIBLE_DYNAMIC_OBJECT_HELPER_TYPE.getInternalName());
    visitor.visitInsn(Opcodes.DUP);
    visitor.visitVarInsn(Opcodes.ALOAD,0);
    visitor.visitMethodInsn(Opcodes.INVOKESPECIAL,NON_EXTENSIBLE_DYNAMIC_OBJECT_HELPER_TYPE.getInternalName(),"<init>",helperTypeConstructorDesc);
  }
}
