{
  Token operation=expression.getOperation();
  if (operation.isA(Types.LEFT_SHIFT) && expression.getLeftExpression() instanceof VariableExpression && expression.getRightExpression() instanceof ClosureExpression) {
    statementGenerator.addCreator(scope,(VariableExpression)expression.getLeftExpression(),(ClosureExpression)expression.getRightExpression());
  }
 else   if (operation.isA(Types.ASSIGN) && expression.getLeftExpression() instanceof VariableExpression) {
    statementGenerator.addCreator(scope,(VariableExpression)expression.getLeftExpression(),expression.getRightExpression());
  }
 else {
    super.visitBinaryExpression(expression);
  }
}
