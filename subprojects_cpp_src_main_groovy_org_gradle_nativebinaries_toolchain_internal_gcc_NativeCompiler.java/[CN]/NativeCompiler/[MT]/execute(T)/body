{
  boolean didWork=false;
  boolean windowsPathLimitation=OperatingSystem.current().isWindows();
  String objectFileExtension=OperatingSystem.current().isWindows() ? ".obj" : ".o";
  for (  File sourceFile : spec.getSourceFiles()) {
    String objectFileName=FilenameUtils.removeExtension(sourceFile.getName()) + objectFileExtension;
    CommandLineToolInvocation invocation=new CommandLineToolInvocation();
    SingleSourceCompileArgTransformer<T> argTransformer=new SingleSourceCompileArgTransformer<T>(sourceFile,objectFileName,new ShortCircuitArgsTransformer(argsTransfomer),windowsPathLimitation,false);
    invocation.args=argTransformer.transform(spec);
    WorkResult result=commandLineTool.inWorkDirectory(spec.getObjectFileDir()).execute(invocation);
    didWork=didWork || result.getDidWork();
  }
  return new SimpleWorkResult(didWork);
}
