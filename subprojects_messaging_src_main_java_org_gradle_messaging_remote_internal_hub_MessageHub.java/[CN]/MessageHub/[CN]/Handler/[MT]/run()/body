{
  try {
    List<InterHubMessage> messages=new ArrayList<InterHubMessage>();
    try {
      while (true) {
        lock.lock();
        try {
          System.out.println(String.format("=== %s waiting to messages to handle...",Thread.currentThread()));
          queue.take(messages);
        }
  finally {
          lock.unlock();
        }
        for (        InterHubMessage message : messages) {
          System.out.println(String.format("=== %s handling %s.",Thread.currentThread(),message));
          if (message instanceof EndOfStream) {
            return;
          }
          if (message instanceof ChannelMessage) {
            ChannelMessage channelMessage=(ChannelMessage)message;
            dispatch.dispatch(channelMessage.getPayload());
          }
 else           if (message instanceof RejectedMessage) {
            RejectedMessage rejectedMessage=(RejectedMessage)message;
            listener.messageDiscarded(rejectedMessage.getPayload());
          }
 else           if (message instanceof ConnectionEstablished) {
            stateListener.onConnect();
          }
 else           if (message instanceof ConnectionClosed) {
            stateListener.onDisconnect();
          }
 else {
            throw new IllegalArgumentException(String.format("Don't know how to handle message %s",message));
          }
          System.out.println(String.format("=== %s handled %s.",Thread.currentThread(),message));
        }
        messages.clear();
      }
    }
  finally {
      lock.lock();
      try {
        queue.stop();
      }
  finally {
        lock.unlock();
      }
    }
  }
 catch (  Throwable t) {
    System.out.println(String.format("=== %s failed handling.",Thread.currentThread()));
    t.printStackTrace();
    errorHandler.execute(t);
  }
}
