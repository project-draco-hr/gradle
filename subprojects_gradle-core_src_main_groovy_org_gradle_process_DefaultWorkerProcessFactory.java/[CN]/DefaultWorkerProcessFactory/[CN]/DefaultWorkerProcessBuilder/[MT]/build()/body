{
  if (getWorker() == null) {
    throw new IllegalStateException("No worker action specified for this worker process.");
  }
  ObjectConnection connection=server.createUnicastConnection();
  List<URL> implementationClassPath=ClasspathUtil.getClasspath(getWorker().getClass().getClassLoader());
  Object id=idGenerator.generateId();
  String displayName=String.format("Gradle Worker %s",id);
  ByteArrayOutputStream outputStream=new ByteArrayOutputStream();
  try {
    ObjectOutputStream objectStream=new ObjectOutputStream(outputStream);
    objectStream.writeObject(id);
    objectStream.writeObject(displayName);
    objectStream.writeObject(getLogLevel());
    objectStream.writeObject(getApplicationClasspath());
    objectStream.writeObject(getSharedPackages());
    objectStream.writeObject(implementationClassPath);
    objectStream.writeObject(getWorker());
    objectStream.writeObject(connection.getLocalAddress());
    objectStream.close();
  }
 catch (  IOException e) {
    throw new UncheckedIOException(e);
  }
  LOGGER.debug("Creating {}",displayName);
  LOGGER.debug("Using application classpath {}",getApplicationClasspath());
  LOGGER.debug("Using implementation classpath {}",implementationClassPath);
  getJavaCommand().standardInput(new ByteArrayInputStream(outputStream.toByteArray()));
  ExecHandle execHandle=getJavaCommand().build();
  return new DefaultWorkerProcess(connection,execHandle);
}
