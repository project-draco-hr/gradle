{
  if (getWorker() == null) {
    throw new IllegalStateException("No worker action specified for this worker process.");
  }
  ObjectConnection connection=server.createUnicastConnection();
  List<URL> implementationClassPath=ClasspathUtil.getClasspath(getWorker().getClass().getClassLoader());
  Object id=idGenerator.generateId();
  String displayName=String.format("Gradle Worker %s",id);
  WorkerFactory workerFactory;
  if (isLoadApplicationInSystemClassLoader()) {
    workerFactory=new ApplicationClassesInSystemClassLoaderWorkerFactory(id,displayName,this,implementationClassPath,connection.getLocalAddress(),classPathRegistry);
  }
 else {
    workerFactory=new ApplicationClassesInIsolatedClassLoaderWorkerFactory(id,displayName,this,implementationClassPath,connection.getLocalAddress(),classPathRegistry);
  }
  Callable<?> workerMain=workerFactory.create();
  getJavaCommand().classpath(workerFactory.getSystemClasspath());
  byte[] config=GUtil.serialize(workerMain);
  LOGGER.debug("Creating {}",displayName);
  LOGGER.debug("Using application classpath {}",getApplicationClasspath());
  LOGGER.debug("Using implementation classpath {}",implementationClassPath);
  getJavaCommand().standardInput(new ByteArrayInputStream(config));
  ExecHandle execHandle=getJavaCommand().build();
  return new DefaultWorkerProcess(connection,execHandle);
}
