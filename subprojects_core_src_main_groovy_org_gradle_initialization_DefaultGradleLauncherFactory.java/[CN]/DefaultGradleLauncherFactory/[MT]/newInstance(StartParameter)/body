{
  BuildRequestMetaData requestMetaData;
  BuildCancellationToken cancellationToken;
  BuildEventConsumer buildEventConsumer;
  if (tracker.getCurrentBuild() != null) {
    ServiceRegistry services=tracker.getCurrentBuild().getServices();
    requestMetaData=new DefaultBuildRequestMetaData(services.get(BuildClientMetaData.class),System.currentTimeMillis());
    cancellationToken=services.get(BuildCancellationToken.class);
    buildEventConsumer=services.get(BuildEventConsumer.class);
  }
 else {
    requestMetaData=new DefaultBuildRequestMetaData(System.currentTimeMillis());
    cancellationToken=new DefaultBuildCancellationToken();
    buildEventConsumer=new NoOpBuildEventConsumer();
  }
  BuildScopeServicesFactory buildScopeServicesFactory=sharedServices.get(BuildScopeServicesFactory.class);
  final BuildScopeServices buildScopeServices=buildScopeServicesFactory.create(startParameter);
  return doNewInstance(startParameter,cancellationToken,requestMetaData,buildEventConsumer,buildScopeServices);
}
