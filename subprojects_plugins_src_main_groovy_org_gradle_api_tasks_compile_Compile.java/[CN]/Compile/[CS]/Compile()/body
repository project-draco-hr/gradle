{
  if (!(this instanceof JavaCompile)) {
    DeprecationLogger.nagUserOfReplacedTaskType("Compile","JavaCompile task type");
  }
  Factory<AntBuilder> antBuilderFactory=getServices().getFactory(AntBuilder.class);
  JavaCompilerFactory inProcessCompilerFactory=new InProcessJavaCompilerFactory();
  ProjectInternal projectInternal=(ProjectInternal)getProject();
  CompilerDaemonManager compilerDaemonManager=getServices().get(CompilerDaemonManager.class);
  JavaCompilerFactory defaultCompilerFactory=new DefaultJavaCompilerFactory(projectInternal,antBuilderFactory,inProcessCompilerFactory,compilerDaemonManager);
  javaCompiler=new DelegatingJavaCompiler(defaultCompilerFactory);
  cleaningCompiler=new CleaningJavaCompiler(javaCompiler,antBuilderFactory,getOutputs());
  ClassDependenciesAnalyzer analyzer=new ClassDependenciesAnalyzer();
  ClassDependencyInfoExtractor extractor=new ClassDependencyInfoExtractor(analyzer);
  JarSnapshotFeeder jarSnapshotFeeder=new JarSnapshotFeeder(getJarSnapshotCache(),new JarSnapshotter(new ClassSnapshotter(new DefaultHasher(),analyzer)));
  incrementalCompilation=new IncrementalCompilationSupport(jarSnapshotFeeder,getDependencyInfoSerializer(),(FileOperations)getProject(),extractor);
}
