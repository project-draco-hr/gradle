{
  final ModuleRevisionId someModuleRevisionId=ModuleRevisionId.newInstance("a","b","c");
  final ProjectDependency projectDependency=createProjectDependency(TEST_DEP_CONF);
  setUpDependency(projectDependency);
  context.checking(new Expectations(){
{
      allowing(descriptorStrategyStub).createModuleRevisionId(projectDependency);
      will(returnValue(someModuleRevisionId));
      allowing(descriptorStrategyStub).isChanging();
      will(returnValue(true));
    }
  }
);
  projectDependencyDescriptorFactory.addDependencyDescriptor(TEST_CONF,moduleDescriptor,projectDependency);
  DefaultDependencyDescriptor dependencyDescriptor=(DefaultDependencyDescriptor)moduleDescriptor.getDependencies()[0];
  assertDependencyDescriptorHasCommonFixtureValues(dependencyDescriptor);
  assertTrue(dependencyDescriptor.isChanging());
  assertFalse(dependencyDescriptor.isForce());
  assertEquals(someModuleRevisionId,dependencyDescriptor.getDependencyRevisionId());
}
