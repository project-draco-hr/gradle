{
  details.summary.format("%s failed with an exception.",granularity);
  fillInFailureResolution(details);
  if (failure instanceof LocationAwareException) {
    final LocationAwareException scriptException=(LocationAwareException)failure;
    details.failure=scriptException.getCause();
    if (scriptException.getLocation() != null) {
      details.location.text(scriptException.getLocation());
    }
    scriptException.visitReportableCauses(new TreeVisitor<Throwable>(){
      int depth;
      @Override public void node(      final Throwable node){
        if (node == scriptException) {
          details.details.text(scriptException.getOriginalMessage());
        }
 else {
          details.details.format("%n");
          StringBuilder prefix=new StringBuilder();
          for (int i=1; i < depth; i++) {
            prefix.append("   ");
          }
          details.details.text(prefix);
          prefix.append("  ");
          details.details.style(Info).text("> ").style(Normal);
          final LinePrefixingStyledTextOutput output=new LinePrefixingStyledTextOutput(details.details,prefix);
          output.text(getMessage(node));
        }
      }
      @Override public void startChildren(){
        depth++;
      }
      @Override public void endChildren(){
        depth--;
      }
    }
);
  }
 else {
    details.details.text(getMessage(failure));
  }
}
