{
  String effectiveId=PluginIds.qualifyIfUnqualified(CORE_PLUGIN_NAMESPACE,pluginRequest.getId());
  if (PluginIds.inNamespace(CORE_PLUGIN_NAMESPACE,effectiveId)) {
    try {
      String pluginName=PluginIds.getName(effectiveId);
      Class<? extends Plugin> typeForId=pluginRegistry.getTypeForId(pluginName);
      if (pluginRequest.getVersion() != null) {
        throw new InvalidPluginRequestException(pluginRequest,"Plugin '" + pluginRequest.getId() + "' is a core Gradle plugin, which cannot be specified with a version number. "+ "Such plugins are versioned as part of Gradle. Please remove the version number from the declaration.");
      }
      return new SimplePluginResolution(typeForId);
    }
 catch (    UnknownPluginException e) {
      return null;
    }
  }
 else {
    return null;
  }
}
