{
  final Thread thread=Thread.currentThread();
  final ClassLoader previousContextClassLoader=thread.getContextClassLoader();
  final ClassLoader classLoader=new URLClassLoader(new DefaultClassPath(runSpec.getClasspath()).getAsURLArray());
  thread.setContextClassLoader(classLoader);
  try {
    ClassLoader docsClassLoader=classLoader;
    Object buildDocHandler=spec.getBuildDocHandler(docsClassLoader,runSpec.getClasspath());
    ScalaMethod runMethod=spec.getNettyServerDevHttpMethod(classLoader,docsClassLoader);
    Object buildLink=spec.getBuildLink(classLoader,runSpec.getProjectPath(),runSpec.getApplicationJar(),runSpec.getAssetsJar());
    runMethod.invoke(buildLink,buildDocHandler,runSpec.getHttpPort());
  }
 catch (  Exception e) {
    throw UncheckedException.throwAsUncheckedException(e);
  }
 finally {
    thread.setContextClassLoader(previousContextClassLoader);
  }
}
