{
  return new Action<TypeRegistrationContext>(){
    public void execute(    TypeRegistrationContext typeRegistrationContext){
      BinaryContainer binaries=typeRegistrationContext.getExtensions().getByType(BinaryContainer.class);
      binaries.registerFactory(type.getConcreteClass(),new NamedDomainObjectFactory<V>(){
        public V create(        String name){
          BinaryNamingScheme binaryNamingScheme=new DefaultBinaryNamingSchemeBuilder().withComponentName(name).build();
          @SuppressWarnings("unchecked") V created=(V)BaseBinarySpec.create(implementation.getConcreteClass(),binaryNamingScheme,instantiator);
          return created;
        }
      }
);
    }
  }
;
}
