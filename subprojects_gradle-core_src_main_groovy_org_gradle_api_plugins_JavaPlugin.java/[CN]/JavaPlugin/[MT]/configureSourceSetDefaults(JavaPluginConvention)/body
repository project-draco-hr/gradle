{
  pluginConvention.getSource().allObjects(new Action<SourceSet>(){
    public void execute(    final SourceSet sourceSet){
      final Project project=pluginConvention.getProject();
      ConventionMapping conventionMapping=((IConventionAware)sourceSet).getConventionMapping();
      conventionMapping.map("classesDir",new ConventionValue(){
        public Object getValue(        Convention convention,        IConventionAware conventionAwareObject){
          String classesDirName=String.format("classes/%s",sourceSet.getName());
          return new File(project.getBuildDir(),classesDirName);
        }
      }
);
      conventionMapping.map("compileClasspath",new ConventionValue(){
        public Object getValue(        Convention convention,        IConventionAware conventionAwareObject){
          return project.getConfigurations().getByName(COMPILE_CONFIGURATION_NAME);
        }
      }
);
      conventionMapping.map("runtimeClasspath",new ConventionValue(){
        public Object getValue(        Convention convention,        IConventionAware conventionAwareObject){
          return sourceSet.getClasses().plus(project.getConfigurations().getByName(RUNTIME_CONFIGURATION_NAME));
        }
      }
);
      sourceSet.getJava().srcDir(String.format("src/%s/java",sourceSet.getName()));
      sourceSet.getResources().srcDir(String.format("src/%s/resources",sourceSet.getName()));
      Copy processResources=project.getTasks().add(sourceSet.getProcessResourcesTaskName(),Copy.class);
      processResources.setDescription(String.format("Processes the %s.",sourceSet.getResources()));
      conventionMapping=processResources.getConventionMapping();
      conventionMapping.map("srcDirs",new ConventionValue(){
        public Object getValue(        Convention convention,        IConventionAware conventionAwareObject){
          return sourceSet.getResources();
        }
      }
);
      conventionMapping.map("destinationDir",new ConventionValue(){
        public Object getValue(        Convention convention,        IConventionAware conventionAwareObject){
          return sourceSet.getClassesDir();
        }
      }
);
      Compile compile=project.getTasks().add(sourceSet.getCompileTaskName(),Compile.class);
      configureForSourceSet(sourceSet,compile);
      sourceSet.compiledBy(sourceSet.getProcessResourcesTaskName(),sourceSet.getCompileTaskName());
    }
  }
);
}
