{
  project.getTasks().withType(Jar.class).allTasks(new Action<Jar>(){
    public void execute(    Jar task){
      task.getConventionMapping().map(DefaultConventionsToPropertiesMapping.JAR);
    }
  }
);
  Task checkTask=project.getTasks().add(CHECK_TASK_NAME);
  checkTask.setDescription("Runs all checks.");
  checkTask.dependsOn(TEST_TASK_NAME);
  Jar jar=project.getTasks().add(JAR_TASK_NAME,Jar.class);
  jar.setDescription("Generates a jar archive with all the compiled classes.");
  jar.conventionMapping("resourceCollections",new ConventionValue(){
    public Object getValue(    Convention convention,    IConventionAware conventionAwareObject){
      FileCollection classes=convention.getPlugin(JavaPluginConvention.class).getSource().getByName(SourceSet.MAIN_SOURCE_SET_NAME).getClasses();
      return Arrays.asList(classes.getAsFileTree());
    }
  }
);
  project.getConfigurations().getByName(Dependency.ARCHIVES_CONFIGURATION).addArtifact(new ArchivePublishArtifact(jar));
}
