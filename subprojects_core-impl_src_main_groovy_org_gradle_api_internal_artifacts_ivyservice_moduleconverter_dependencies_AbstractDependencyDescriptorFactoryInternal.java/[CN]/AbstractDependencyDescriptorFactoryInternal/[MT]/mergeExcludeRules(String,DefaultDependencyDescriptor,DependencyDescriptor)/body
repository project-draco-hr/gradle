{
  try {
    Field field=DefaultDependencyDescriptor.class.getDeclaredField("excludeRules");
    field.setAccessible(true);
    Map rules=GUtil.elvis((Map)field.get(originalDescriptor),new LinkedHashMap());
    Map mergeRules=GUtil.elvis((Map)field.get(newDescriptor),new LinkedHashMap());
    if (rules.get(configuration) == null) {
      return;
    }
    if (mergeRules.get(configuration) == null) {
      rules.remove(configuration);
      field.set(originalDescriptor,rules);
    }
 else {
      ((Collection)rules.get(configuration)).retainAll((Collection)mergeRules.get(configuration));
      field.set(originalDescriptor,rules);
    }
  }
 catch (  NoSuchFieldException e) {
    throw UncheckedException.asUncheckedException(e);
  }
catch (  IllegalAccessException e) {
    throw UncheckedException.asUncheckedException(e);
  }
}
