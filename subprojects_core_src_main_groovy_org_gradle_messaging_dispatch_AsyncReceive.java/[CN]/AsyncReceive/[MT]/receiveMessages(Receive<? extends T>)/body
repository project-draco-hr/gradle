{
  while (true) {
    Dispatch<? super T> dispatch;
    lock.lock();
    try {
      while (this.dispatch == null && state == State.Init) {
        try {
          condition.await();
        }
 catch (        InterruptedException e) {
          throw UncheckedException.asUncheckedException(e);
        }
      }
      if (state != State.Init) {
        return;
      }
      dispatch=this.dispatch;
    }
  finally {
      lock.unlock();
    }
    T message=receive.receive();
    if (message == null) {
      return;
    }
    dispatch.dispatch(message);
    lock.lock();
    try {
      if (state != State.Init) {
        return;
      }
    }
  finally {
      lock.unlock();
    }
  }
}
