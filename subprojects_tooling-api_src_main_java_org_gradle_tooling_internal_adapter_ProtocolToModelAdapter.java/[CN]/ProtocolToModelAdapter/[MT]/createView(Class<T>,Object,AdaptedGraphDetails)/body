{
  if (sourceObject == null) {
    return null;
  }
  Class<? extends T> viewType=graphDetails.typeProvider.getTargetType(targetType,sourceObject);
  if (viewType.isInstance(sourceObject)) {
    return viewType.cast(sourceObject);
  }
  if (targetType.isEnum()) {
    return adaptToEnum(targetType,sourceObject);
  }
  ViewKey viewKey=new ViewKey(viewType,sourceObject);
  Object view=graphDetails.adaptedObjects.get(viewKey);
  if (view != null) {
    return targetType.cast(view);
  }
  Object proxy=Proxy.newProxyInstance(viewType.getClassLoader(),new Class<?>[]{viewType},new InvocationHandlerImpl(targetType,sourceObject,graphDetails));
  graphDetails.adaptedObjects.put(viewKey,proxy);
  return viewType.cast(proxy);
}
