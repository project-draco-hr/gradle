{
  Class<?> owner=invocation.getDelegate().getClass();
  String name=invocation.getName();
  Class<?>[] parameterTypes=invocation.getParameterTypes();
  MethodInvocationKey key=new MethodInvocationKey(owner,name,parameterTypes);
  lock.readLock().lock();
  Optional<Method> cached=store.get(key);
  if (cached == null) {
    cacheMiss++;
    lock.readLock().unlock();
    lock.writeLock().lock();
    try {
      cached=store.get(key);
      if (cached == null) {
        cached=lookup(owner,name,parameterTypes);
        if (cacheMiss % 10 == 0) {
          removeDirtyEntries();
        }
        store.put(key,cached);
      }
      lock.readLock().lock();
    }
  finally {
      lock.writeLock().unlock();
    }
  }
 else {
    cacheHit++;
  }
  try {
    return cached.orNull();
  }
  finally {
    lock.readLock().unlock();
  }
}
