{
  assertEquals(expectedBuildFile,startParameter.getBuildFile());
  assertEquals(expectedTaskNames,startParameter.getTaskNames());
  assertEquals(expectedProjectDependenciesBuildInstruction,startParameter.getProjectDependenciesBuildInstruction());
  assertEquals(expectedProjectDir.getAbsoluteFile(),startParameter.getCurrentDir().getAbsoluteFile());
  assertEquals(expectedCacheUsage,startParameter.getCacheUsage());
  assertEquals(expectedSearchUpwards,startParameter.isSearchUpwards());
  assertEquals(expectedProjectProperties,startParameter.getProjectProperties());
  assertEquals(expectedSystemProperties,startParameter.getSystemPropertiesArgs());
  assertEquals(expectedGradleUserHome.getAbsoluteFile(),startParameter.getGradleUserHomeDir().getAbsoluteFile());
  assertEquals(expectedDaemonRegistryDir == null ? new File(startParameter.getGradleUserHomeDir(),"daemon") : expectedDaemonRegistryDir,startParameter.getDaemonRegistryDir());
  assertEquals(expectedLogLevel,startParameter.getLogLevel());
  assertEquals(expectedColorOutput,startParameter.isColorOutput());
  assertEquals(expectedDryRun,startParameter.isDryRun());
  assertEquals(expectedShowStackTrace,startParameter.getShowStacktrace());
  assertEquals(expectedExcludedTasks,startParameter.getExcludedTaskNames());
  assertEquals(expectedInitScripts,startParameter.getInitScripts());
  assertEquals(expectedProfile,startParameter.isProfile());
  assertEquals(expectedContinue,startParameter.isContinueOnFailure());
  assertEquals(expectedProjectCacheDir,startParameter.getProjectCacheDir());
}
