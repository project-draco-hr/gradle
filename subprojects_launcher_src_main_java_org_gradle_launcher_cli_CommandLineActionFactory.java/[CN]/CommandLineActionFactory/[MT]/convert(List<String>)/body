{
  ServiceRegistry loggingServices=createLoggingServices();
  List<CommandLineAction> actions=Arrays.asList(new BuiltInActions(),new GuiActions(),new BuildActions(loggingServices));
  CommandLineParser parser=new CommandLineParser();
  for (  CommandLineAction action : actions) {
    action.configureCommandLineParser(parser);
  }
  LoggingConfiguration loggingConfiguration=new LoggingConfiguration();
  Action<ExecutionListener> action;
  try {
    ParsedCommandLine commandLine=parser.parse(args);
    @SuppressWarnings("unchecked") CommandLineConverter<LoggingConfiguration> loggingConfigurationConverter=(CommandLineConverter<LoggingConfiguration>)loggingServices.get(CommandLineConverter.class);
    loggingConfigurationConverter.convert(commandLine,loggingConfiguration);
    action=createAction(actions,parser,commandLine);
  }
 catch (  CommandLineArgumentException e) {
    action=new CommandLineParseFailureAction(parser,e);
  }
  return new WithLoggingAction(loggingConfiguration,loggingServices,new ExceptionReportingAction(action,new BuildExceptionReporter(loggingServices.get(StyledTextOutputFactory.class),loggingConfiguration,clientMetaData())));
}
