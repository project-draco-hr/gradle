{
  SettingsConverter settingsConverterStub=context.mock(SettingsConverter.class);
  ModuleDescriptorConverter resolveModuleDescriptorConverter=context.mock(ModuleDescriptorConverter.class,"resolve");
  ModuleDescriptorConverter publishModuleDescriptorConverter=context.mock(ModuleDescriptorConverter.class,"publishConverter");
  ModuleDescriptorConverter fileModuleDescriptorConverter=context.mock(ModuleDescriptorConverter.class,"fileConverter");
  IvyDependencyPublisher ivyDependencyPublisherMock=context.mock(IvyDependencyPublisher.class);
  return new DefaultIvyService(dependencyMetaDataProviderMock,resolverProvider,settingsConverterStub,resolveModuleDescriptorConverter,publishModuleDescriptorConverter,fileModuleDescriptorConverter,new DefaultIvyFactory(),context.mock(IvyDependencyResolver.class),ivyDependencyPublisherMock,new HashMap<String,ModuleDescriptor>());
}
