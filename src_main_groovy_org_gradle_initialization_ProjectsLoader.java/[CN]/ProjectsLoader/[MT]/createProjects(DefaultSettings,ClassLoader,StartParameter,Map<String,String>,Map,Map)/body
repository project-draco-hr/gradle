{
  logger.debug("Creating the projects and evaluating the project files!");
  Map systemAndEnvProjectProperties=GUtil.addMaps(getSystemProjectProperties(systemProperties),getEnvProjectProperties(envProperties));
  if (GUtil.isTrue(systemAndEnvProjectProperties)) {
    logger.debug("Added system and env project properties: {}",systemAndEnvProjectProperties.keySet());
  }
  logger.debug("Adding external properties (if not overwritten by system project properties: {}",externalProjectProperties.keySet());
  logger.debug("Looking for system project properties");
  ProjectInternal rootProject=projectFactory.createProject(settings.getSettingsFinder().getSettingsDir().getName(),null,settings.getSettingsFinder().getSettingsDir(),buildScriptClassLoader);
  addPropertiesToProject(startParameter.getGradleUserHomeDir(),GUtil.addMaps(externalProjectProperties,startParameter.getProjectProperties()),systemAndEnvProjectProperties,rootProject);
  for (  String path : settings.getProjectPaths()) {
    String[] folders=path.split(Project.PATH_SEPARATOR);
    ProjectInternal parent=rootProject;
    for (    String name : folders) {
      if (parent.getChildProjects().get(name) == null) {
        parent.getChildProjects().put(name,parent.addChildProject(name));
        addPropertiesToProject(startParameter.getGradleUserHomeDir(),externalProjectProperties,systemAndEnvProjectProperties,(ProjectInternal)parent.getChildProjects().get(name));
      }
      parent=(ProjectInternal)parent.getChildProjects().get(name);
    }
  }
  return rootProject;
}
